var tr = function(e, t) {
  return tr = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, r) {
    n.__proto__ = r;
  } || function(n, r) {
    for (var i in r)
      Object.prototype.hasOwnProperty.call(r, i) && (n[i] = r[i]);
  }, tr(e, t);
};
function $e(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  tr(e, t);
  function n() {
    this.constructor = e;
  }
  e.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n());
}
function Ia(e, t, n, r) {
  function i(o) {
    return o instanceof n ? o : new n(function(s) {
      s(o);
    });
  }
  return new (n || (n = Promise))(function(o, s) {
    function a(d) {
      try {
        u(r.next(d));
      } catch (m) {
        s(m);
      }
    }
    function l(d) {
      try {
        u(r.throw(d));
      } catch (m) {
        s(m);
      }
    }
    function u(d) {
      d.done ? o(d.value) : i(d.value).then(a, l);
    }
    u((r = r.apply(e, t || [])).next());
  });
}
function Ki(e, t) {
  var n = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, s;
  return s = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function a(u) {
    return function(d) {
      return l([u, d]);
    };
  }
  function l(u) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; s && (s = 0, u[0] && (n = 0)), n; )
      try {
        if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done)
          return o;
        switch (i = 0, o && (u = [u[0] & 2, o.value]), u[0]) {
          case 0:
          case 1:
            o = u;
            break;
          case 4:
            return n.label++, { value: u[1], done: !1 };
          case 5:
            n.label++, i = u[1], u = [0];
            continue;
          case 7:
            u = n.ops.pop(), n.trys.pop();
            continue;
          default:
            if (o = n.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {
              n = 0;
              continue;
            }
            if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {
              n.label = u[1];
              break;
            }
            if (u[0] === 6 && n.label < o[1]) {
              n.label = o[1], o = u;
              break;
            }
            if (o && n.label < o[2]) {
              n.label = o[2], n.ops.push(u);
              break;
            }
            o[2] && n.ops.pop(), n.trys.pop();
            continue;
        }
        u = t.call(e, n);
      } catch (d) {
        u = [6, d], i = 0;
      } finally {
        r = o = 0;
      }
    if (u[0] & 5)
      throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function At(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, n = t && e[t], r = 0;
  if (n)
    return n.call(e);
  if (e && typeof e.length == "number")
    return {
      next: function() {
        return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function Ce(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n)
    return e;
  var r = n.call(e), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}
function We(e, t, n) {
  if (n || arguments.length === 2)
    for (var r = 0, i = t.length, o; r < i; r++)
      (o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);
  return e.concat(o || Array.prototype.slice.call(t));
}
function xt(e) {
  return this instanceof xt ? (this.v = e, this) : new xt(e);
}
function Pa(e, t, n) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var r = n.apply(e, t || []), i, o = [];
  return i = {}, s("next"), s("throw"), s("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function s(y) {
    r[y] && (i[y] = function(v) {
      return new Promise(function(x, p) {
        o.push([y, v, x, p]) > 1 || a(y, v);
      });
    });
  }
  function a(y, v) {
    try {
      l(r[y](v));
    } catch (x) {
      m(o[0][3], x);
    }
  }
  function l(y) {
    y.value instanceof xt ? Promise.resolve(y.value.v).then(u, d) : m(o[0][2], y);
  }
  function u(y) {
    a("next", y);
  }
  function d(y) {
    a("throw", y);
  }
  function m(y, v) {
    y(v), o.shift(), o.length && a(o[0][0], o[0][1]);
  }
}
function Ea(e) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var t = e[Symbol.asyncIterator], n;
  return t ? t.call(e) : (e = typeof At == "function" ? At(e) : e[Symbol.iterator](), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function() {
    return this;
  }, n);
  function r(o) {
    n[o] = e[o] && function(s) {
      return new Promise(function(a, l) {
        s = e[o](s), i(a, l, s.done, s.value);
      });
    };
  }
  function i(o, s, a, l) {
    Promise.resolve(l).then(function(u) {
      o({ value: u, done: a });
    }, s);
  }
}
function M(e) {
  return typeof e == "function";
}
function vr(e) {
  var t = function(r) {
    Error.call(r), r.stack = new Error().stack;
  }, n = e(t);
  return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n;
}
var Wn = vr(function(e) {
  return function(n) {
    e(this), this.message = n ? n.length + ` errors occurred during unsubscription:
` + n.map(function(r, i) {
      return i + 1 + ") " + r.toString();
    }).join(`
  `) : "", this.name = "UnsubscriptionError", this.errors = n;
  };
});
function wn(e, t) {
  if (e) {
    var n = e.indexOf(t);
    0 <= n && e.splice(n, 1);
  }
}
var Re = function() {
  function e(t) {
    this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null;
  }
  return e.prototype.unsubscribe = function() {
    var t, n, r, i, o;
    if (!this.closed) {
      this.closed = !0;
      var s = this._parentage;
      if (s)
        if (this._parentage = null, Array.isArray(s))
          try {
            for (var a = At(s), l = a.next(); !l.done; l = a.next()) {
              var u = l.value;
              u.remove(this);
            }
          } catch (p) {
            t = { error: p };
          } finally {
            try {
              l && !l.done && (n = a.return) && n.call(a);
            } finally {
              if (t)
                throw t.error;
            }
          }
        else
          s.remove(this);
      var d = this.initialTeardown;
      if (M(d))
        try {
          d();
        } catch (p) {
          o = p instanceof Wn ? p.errors : [p];
        }
      var m = this._finalizers;
      if (m) {
        this._finalizers = null;
        try {
          for (var y = At(m), v = y.next(); !v.done; v = y.next()) {
            var x = v.value;
            try {
              oi(x);
            } catch (p) {
              o = o ?? [], p instanceof Wn ? o = We(We([], Ce(o)), Ce(p.errors)) : o.push(p);
            }
          }
        } catch (p) {
          r = { error: p };
        } finally {
          try {
            v && !v.done && (i = y.return) && i.call(y);
          } finally {
            if (r)
              throw r.error;
          }
        }
      }
      if (o)
        throw new Wn(o);
    }
  }, e.prototype.add = function(t) {
    var n;
    if (t && t !== this)
      if (this.closed)
        oi(t);
      else {
        if (t instanceof e) {
          if (t.closed || t._hasParent(this))
            return;
          t._addParent(this);
        }
        (this._finalizers = (n = this._finalizers) !== null && n !== void 0 ? n : []).push(t);
      }
  }, e.prototype._hasParent = function(t) {
    var n = this._parentage;
    return n === t || Array.isArray(n) && n.includes(t);
  }, e.prototype._addParent = function(t) {
    var n = this._parentage;
    this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [n, t] : t;
  }, e.prototype._removeParent = function(t) {
    var n = this._parentage;
    n === t ? this._parentage = null : Array.isArray(n) && wn(n, t);
  }, e.prototype.remove = function(t) {
    var n = this._finalizers;
    n && wn(n, t), t instanceof e && t._removeParent(this);
  }, e.EMPTY = function() {
    var t = new e();
    return t.closed = !0, t;
  }(), e;
}(), Hi = Re.EMPTY;
function Vi(e) {
  return e instanceof Re || e && "closed" in e && M(e.remove) && M(e.add) && M(e.unsubscribe);
}
function oi(e) {
  M(e) ? e() : e.unsubscribe();
}
var gr = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: !1,
  useDeprecatedNextContext: !1
}, nr = {
  setTimeout: function(e, t) {
    for (var n = [], r = 2; r < arguments.length; r++)
      n[r - 2] = arguments[r];
    var i = nr.delegate;
    return i != null && i.setTimeout ? i.setTimeout.apply(i, We([e, t], Ce(n))) : setTimeout.apply(void 0, We([e, t], Ce(n)));
  },
  clearTimeout: function(e) {
    var t = nr.delegate;
    return ((t == null ? void 0 : t.clearTimeout) || clearTimeout)(e);
  },
  delegate: void 0
};
function Gi(e) {
  nr.setTimeout(function() {
    throw e;
  });
}
function rr() {
}
var dn = null;
function bn(e) {
  if (gr.useDeprecatedSynchronousErrorHandling) {
    var t = !dn;
    if (t && (dn = { errorThrown: !1, error: null }), e(), t) {
      var n = dn, r = n.errorThrown, i = n.error;
      if (dn = null, r)
        throw i;
    }
  } else
    e();
}
var br = function(e) {
  $e(t, e);
  function t(n) {
    var r = e.call(this) || this;
    return r.isStopped = !1, n ? (r.destination = n, Vi(n) && n.add(r)) : r.destination = Ra, r;
  }
  return t.create = function(n, r, i) {
    return new Sn(n, r, i);
  }, t.prototype.next = function(n) {
    this.isStopped || this._next(n);
  }, t.prototype.error = function(n) {
    this.isStopped || (this.isStopped = !0, this._error(n));
  }, t.prototype.complete = function() {
    this.isStopped || (this.isStopped = !0, this._complete());
  }, t.prototype.unsubscribe = function() {
    this.closed || (this.isStopped = !0, e.prototype.unsubscribe.call(this), this.destination = null);
  }, t.prototype._next = function(n) {
    this.destination.next(n);
  }, t.prototype._error = function(n) {
    try {
      this.destination.error(n);
    } finally {
      this.unsubscribe();
    }
  }, t.prototype._complete = function() {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  }, t;
}(Re), Ca = Function.prototype.bind;
function Bn(e, t) {
  return Ca.call(e, t);
}
var ka = function() {
  function e(t) {
    this.partialObserver = t;
  }
  return e.prototype.next = function(t) {
    var n = this.partialObserver;
    if (n.next)
      try {
        n.next(t);
      } catch (r) {
        hn(r);
      }
  }, e.prototype.error = function(t) {
    var n = this.partialObserver;
    if (n.error)
      try {
        n.error(t);
      } catch (r) {
        hn(r);
      }
    else
      hn(t);
  }, e.prototype.complete = function() {
    var t = this.partialObserver;
    if (t.complete)
      try {
        t.complete();
      } catch (n) {
        hn(n);
      }
  }, e;
}(), Sn = function(e) {
  $e(t, e);
  function t(n, r, i) {
    var o = e.call(this) || this, s;
    if (M(n) || !n)
      s = {
        next: n ?? void 0,
        error: r ?? void 0,
        complete: i ?? void 0
      };
    else {
      var a;
      o && gr.useDeprecatedNextContext ? (a = Object.create(n), a.unsubscribe = function() {
        return o.unsubscribe();
      }, s = {
        next: n.next && Bn(n.next, a),
        error: n.error && Bn(n.error, a),
        complete: n.complete && Bn(n.complete, a)
      }) : s = n;
    }
    return o.destination = new ka(s), o;
  }
  return t;
}(br);
function hn(e) {
  Gi(e);
}
function $a(e) {
  throw e;
}
var Ra = {
  closed: !0,
  next: rr,
  error: $a,
  complete: rr
}, _r = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}();
function Nt(e) {
  return e;
}
function Da(e) {
  return e.length === 0 ? Nt : e.length === 1 ? e[0] : function(n) {
    return e.reduce(function(r, i) {
      return i(r);
    }, n);
  };
}
var se = function() {
  function e(t) {
    t && (this._subscribe = t);
  }
  return e.prototype.lift = function(t) {
    var n = new e();
    return n.source = this, n.operator = t, n;
  }, e.prototype.subscribe = function(t, n, r) {
    var i = this, o = Na(t) ? t : new Sn(t, n, r);
    return bn(function() {
      var s = i, a = s.operator, l = s.source;
      o.add(a ? a.call(o, l) : l ? i._subscribe(o) : i._trySubscribe(o));
    }), o;
  }, e.prototype._trySubscribe = function(t) {
    try {
      return this._subscribe(t);
    } catch (n) {
      t.error(n);
    }
  }, e.prototype.forEach = function(t, n) {
    var r = this;
    return n = si(n), new n(function(i, o) {
      var s = new Sn({
        next: function(a) {
          try {
            t(a);
          } catch (l) {
            o(l), s.unsubscribe();
          }
        },
        error: o,
        complete: i
      });
      r.subscribe(s);
    });
  }, e.prototype._subscribe = function(t) {
    var n;
    return (n = this.source) === null || n === void 0 ? void 0 : n.subscribe(t);
  }, e.prototype[_r] = function() {
    return this;
  }, e.prototype.pipe = function() {
    for (var t = [], n = 0; n < arguments.length; n++)
      t[n] = arguments[n];
    return Da(t)(this);
  }, e.prototype.toPromise = function(t) {
    var n = this;
    return t = si(t), new t(function(r, i) {
      var o;
      n.subscribe(function(s) {
        return o = s;
      }, function(s) {
        return i(s);
      }, function() {
        return r(o);
      });
    });
  }, e.create = function(t) {
    return new e(t);
  }, e;
}();
function si(e) {
  var t;
  return (t = e ?? gr.Promise) !== null && t !== void 0 ? t : Promise;
}
function ja(e) {
  return e && M(e.next) && M(e.error) && M(e.complete);
}
function Na(e) {
  return e && e instanceof br || ja(e) && Vi(e);
}
function qa(e) {
  return M(e == null ? void 0 : e.lift);
}
function pe(e) {
  return function(t) {
    if (qa(t))
      return t.lift(function(n) {
        try {
          return e(n, this);
        } catch (r) {
          this.error(r);
        }
      });
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
function ie(e, t, n, r, i) {
  return new La(e, t, n, r, i);
}
var La = function(e) {
  $e(t, e);
  function t(n, r, i, o, s, a) {
    var l = e.call(this, n) || this;
    return l.onFinalize = s, l.shouldUnsubscribe = a, l._next = r ? function(u) {
      try {
        r(u);
      } catch (d) {
        n.error(d);
      }
    } : e.prototype._next, l._error = o ? function(u) {
      try {
        o(u);
      } catch (d) {
        n.error(d);
      } finally {
        this.unsubscribe();
      }
    } : e.prototype._error, l._complete = i ? function() {
      try {
        i();
      } catch (u) {
        n.error(u);
      } finally {
        this.unsubscribe();
      }
    } : e.prototype._complete, l;
  }
  return t.prototype.unsubscribe = function() {
    var n;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var r = this.closed;
      e.prototype.unsubscribe.call(this), !r && ((n = this.onFinalize) === null || n === void 0 || n.call(this));
    }
  }, t;
}(br), Ua = vr(function(e) {
  return function() {
    e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed";
  };
}), ve = function(e) {
  $e(t, e);
  function t() {
    var n = e.call(this) || this;
    return n.closed = !1, n.currentObservers = null, n.observers = [], n.isStopped = !1, n.hasError = !1, n.thrownError = null, n;
  }
  return t.prototype.lift = function(n) {
    var r = new ai(this, this);
    return r.operator = n, r;
  }, t.prototype._throwIfClosed = function() {
    if (this.closed)
      throw new Ua();
  }, t.prototype.next = function(n) {
    var r = this;
    bn(function() {
      var i, o;
      if (r._throwIfClosed(), !r.isStopped) {
        r.currentObservers || (r.currentObservers = Array.from(r.observers));
        try {
          for (var s = At(r.currentObservers), a = s.next(); !a.done; a = s.next()) {
            var l = a.value;
            l.next(n);
          }
        } catch (u) {
          i = { error: u };
        } finally {
          try {
            a && !a.done && (o = s.return) && o.call(s);
          } finally {
            if (i)
              throw i.error;
          }
        }
      }
    });
  }, t.prototype.error = function(n) {
    var r = this;
    bn(function() {
      if (r._throwIfClosed(), !r.isStopped) {
        r.hasError = r.isStopped = !0, r.thrownError = n;
        for (var i = r.observers; i.length; )
          i.shift().error(n);
      }
    });
  }, t.prototype.complete = function() {
    var n = this;
    bn(function() {
      if (n._throwIfClosed(), !n.isStopped) {
        n.isStopped = !0;
        for (var r = n.observers; r.length; )
          r.shift().complete();
      }
    });
  }, t.prototype.unsubscribe = function() {
    this.isStopped = this.closed = !0, this.observers = this.currentObservers = null;
  }, Object.defineProperty(t.prototype, "observed", {
    get: function() {
      var n;
      return ((n = this.observers) === null || n === void 0 ? void 0 : n.length) > 0;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype._trySubscribe = function(n) {
    return this._throwIfClosed(), e.prototype._trySubscribe.call(this, n);
  }, t.prototype._subscribe = function(n) {
    return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n);
  }, t.prototype._innerSubscribe = function(n) {
    var r = this, i = this, o = i.hasError, s = i.isStopped, a = i.observers;
    return o || s ? Hi : (this.currentObservers = null, a.push(n), new Re(function() {
      r.currentObservers = null, wn(a, n);
    }));
  }, t.prototype._checkFinalizedStatuses = function(n) {
    var r = this, i = r.hasError, o = r.thrownError, s = r.isStopped;
    i ? n.error(o) : s && n.complete();
  }, t.prototype.asObservable = function() {
    var n = new se();
    return n.source = this, n;
  }, t.create = function(n, r) {
    return new ai(n, r);
  }, t;
}(se), ai = function(e) {
  $e(t, e);
  function t(n, r) {
    var i = e.call(this) || this;
    return i.destination = n, i.source = r, i;
  }
  return t.prototype.next = function(n) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.next) === null || i === void 0 || i.call(r, n);
  }, t.prototype.error = function(n) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.error) === null || i === void 0 || i.call(r, n);
  }, t.prototype.complete = function() {
    var n, r;
    (r = (n = this.destination) === null || n === void 0 ? void 0 : n.complete) === null || r === void 0 || r.call(n);
  }, t.prototype._subscribe = function(n) {
    var r, i;
    return (i = (r = this.source) === null || r === void 0 ? void 0 : r.subscribe(n)) !== null && i !== void 0 ? i : Hi;
  }, t;
}(ve), Ue = function(e) {
  $e(t, e);
  function t(n) {
    var r = e.call(this) || this;
    return r._value = n, r;
  }
  return Object.defineProperty(t.prototype, "value", {
    get: function() {
      return this.getValue();
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype._subscribe = function(n) {
    var r = e.prototype._subscribe.call(this, n);
    return !r.closed && n.next(this._value), r;
  }, t.prototype.getValue = function() {
    var n = this, r = n.hasError, i = n.thrownError, o = n._value;
    if (r)
      throw i;
    return this._throwIfClosed(), o;
  }, t.prototype.next = function(n) {
    e.prototype.next.call(this, this._value = n);
  }, t;
}(ve), wr = {
  now: function() {
    return (wr.delegate || Date).now();
  },
  delegate: void 0
}, wt = function(e) {
  $e(t, e);
  function t(n, r, i) {
    n === void 0 && (n = 1 / 0), r === void 0 && (r = 1 / 0), i === void 0 && (i = wr);
    var o = e.call(this) || this;
    return o._bufferSize = n, o._windowTime = r, o._timestampProvider = i, o._buffer = [], o._infiniteTimeWindow = !0, o._infiniteTimeWindow = r === 1 / 0, o._bufferSize = Math.max(1, n), o._windowTime = Math.max(1, r), o;
  }
  return t.prototype.next = function(n) {
    var r = this, i = r.isStopped, o = r._buffer, s = r._infiniteTimeWindow, a = r._timestampProvider, l = r._windowTime;
    i || (o.push(n), !s && o.push(a.now() + l)), this._trimBuffer(), e.prototype.next.call(this, n);
  }, t.prototype._subscribe = function(n) {
    this._throwIfClosed(), this._trimBuffer();
    for (var r = this._innerSubscribe(n), i = this, o = i._infiniteTimeWindow, s = i._buffer, a = s.slice(), l = 0; l < a.length && !n.closed; l += o ? 1 : 2)
      n.next(a[l]);
    return this._checkFinalizedStatuses(n), r;
  }, t.prototype._trimBuffer = function() {
    var n = this, r = n._bufferSize, i = n._timestampProvider, o = n._buffer, s = n._infiniteTimeWindow, a = (s ? 1 : 2) * r;
    if (r < 1 / 0 && a < o.length && o.splice(0, o.length - a), !s) {
      for (var l = i.now(), u = 0, d = 1; d < o.length && o[d] <= l; d += 2)
        u = d;
      u && o.splice(0, u + 1);
    }
  }, t;
}(ve), Ma = function(e) {
  $e(t, e);
  function t(n, r) {
    return e.call(this) || this;
  }
  return t.prototype.schedule = function(n, r) {
    return this;
  }, t;
}(Re), xn = {
  setInterval: function(e, t) {
    for (var n = [], r = 2; r < arguments.length; r++)
      n[r - 2] = arguments[r];
    var i = xn.delegate;
    return i != null && i.setInterval ? i.setInterval.apply(i, We([e, t], Ce(n))) : setInterval.apply(void 0, We([e, t], Ce(n)));
  },
  clearInterval: function(e) {
    var t = xn.delegate;
    return ((t == null ? void 0 : t.clearInterval) || clearInterval)(e);
  },
  delegate: void 0
}, Fa = function(e) {
  $e(t, e);
  function t(n, r) {
    var i = e.call(this, n, r) || this;
    return i.scheduler = n, i.work = r, i.pending = !1, i;
  }
  return t.prototype.schedule = function(n, r) {
    var i;
    if (r === void 0 && (r = 0), this.closed)
      return this;
    this.state = n;
    var o = this.id, s = this.scheduler;
    return o != null && (this.id = this.recycleAsyncId(s, o, r)), this.pending = !0, this.delay = r, this.id = (i = this.id) !== null && i !== void 0 ? i : this.requestAsyncId(s, this.id, r), this;
  }, t.prototype.requestAsyncId = function(n, r, i) {
    return i === void 0 && (i = 0), xn.setInterval(n.flush.bind(n, this), i);
  }, t.prototype.recycleAsyncId = function(n, r, i) {
    if (i === void 0 && (i = 0), i != null && this.delay === i && this.pending === !1)
      return r;
    r != null && xn.clearInterval(r);
  }, t.prototype.execute = function(n, r) {
    if (this.closed)
      return new Error("executing a cancelled action");
    this.pending = !1;
    var i = this._execute(n, r);
    if (i)
      return i;
    this.pending === !1 && this.id != null && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
  }, t.prototype._execute = function(n, r) {
    var i = !1, o;
    try {
      this.work(n);
    } catch (s) {
      i = !0, o = s || new Error("Scheduled action threw falsy error");
    }
    if (i)
      return this.unsubscribe(), o;
  }, t.prototype.unsubscribe = function() {
    if (!this.closed) {
      var n = this, r = n.id, i = n.scheduler, o = i.actions;
      this.work = this.state = this.scheduler = null, this.pending = !1, wn(o, this), r != null && (this.id = this.recycleAsyncId(i, r, null)), this.delay = null, e.prototype.unsubscribe.call(this);
    }
  }, t;
}(Ma), ui = function() {
  function e(t, n) {
    n === void 0 && (n = e.now), this.schedulerActionCtor = t, this.now = n;
  }
  return e.prototype.schedule = function(t, n, r) {
    return n === void 0 && (n = 0), new this.schedulerActionCtor(this, t).schedule(r, n);
  }, e.now = wr.now, e;
}(), Za = function(e) {
  $e(t, e);
  function t(n, r) {
    r === void 0 && (r = ui.now);
    var i = e.call(this, n, r) || this;
    return i.actions = [], i._active = !1, i;
  }
  return t.prototype.flush = function(n) {
    var r = this.actions;
    if (this._active) {
      r.push(n);
      return;
    }
    var i;
    this._active = !0;
    do
      if (i = n.execute(n.state, n.delay))
        break;
    while (n = r.shift());
    if (this._active = !1, i) {
      for (; n = r.shift(); )
        n.unsubscribe();
      throw i;
    }
  }, t;
}(ui), Wa = new Za(Fa), Ba = Wa, Tn = new se(function(e) {
  return e.complete();
});
function Yi(e) {
  return e && M(e.schedule);
}
function Sr(e) {
  return e[e.length - 1];
}
function za(e) {
  return M(Sr(e)) ? e.pop() : void 0;
}
function Ji(e) {
  return Yi(Sr(e)) ? e.pop() : void 0;
}
function Ka(e, t) {
  return typeof Sr(e) == "number" ? e.pop() : t;
}
var xr = function(e) {
  return e && typeof e.length == "number" && typeof e != "function";
};
function Qi(e) {
  return M(e == null ? void 0 : e.then);
}
function Xi(e) {
  return M(e[_r]);
}
function eo(e) {
  return Symbol.asyncIterator && M(e == null ? void 0 : e[Symbol.asyncIterator]);
}
function to(e) {
  return new TypeError("You provided " + (e !== null && typeof e == "object" ? "an invalid object" : "'" + e + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
function Ha() {
  return typeof Symbol != "function" || !Symbol.iterator ? "@@iterator" : Symbol.iterator;
}
var no = Ha();
function ro(e) {
  return M(e == null ? void 0 : e[no]);
}
function io(e) {
  return Pa(this, arguments, function() {
    var n, r, i, o;
    return Ki(this, function(s) {
      switch (s.label) {
        case 0:
          n = e.getReader(), s.label = 1;
        case 1:
          s.trys.push([1, , 9, 10]), s.label = 2;
        case 2:
          return [4, xt(n.read())];
        case 3:
          return r = s.sent(), i = r.value, o = r.done, o ? [4, xt(void 0)] : [3, 5];
        case 4:
          return [2, s.sent()];
        case 5:
          return [4, xt(i)];
        case 6:
          return [4, s.sent()];
        case 7:
          return s.sent(), [3, 2];
        case 8:
          return [3, 10];
        case 9:
          return n.releaseLock(), [7];
        case 10:
          return [2];
      }
    });
  });
}
function oo(e) {
  return M(e == null ? void 0 : e.getReader);
}
function ze(e) {
  if (e instanceof se)
    return e;
  if (e != null) {
    if (Xi(e))
      return Va(e);
    if (xr(e))
      return Ga(e);
    if (Qi(e))
      return Ya(e);
    if (eo(e))
      return so(e);
    if (ro(e))
      return Ja(e);
    if (oo(e))
      return Qa(e);
  }
  throw to(e);
}
function Va(e) {
  return new se(function(t) {
    var n = e[_r]();
    if (M(n.subscribe))
      return n.subscribe(t);
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
function Ga(e) {
  return new se(function(t) {
    for (var n = 0; n < e.length && !t.closed; n++)
      t.next(e[n]);
    t.complete();
  });
}
function Ya(e) {
  return new se(function(t) {
    e.then(function(n) {
      t.closed || (t.next(n), t.complete());
    }, function(n) {
      return t.error(n);
    }).then(null, Gi);
  });
}
function Ja(e) {
  return new se(function(t) {
    var n, r;
    try {
      for (var i = At(e), o = i.next(); !o.done; o = i.next()) {
        var s = o.value;
        if (t.next(s), t.closed)
          return;
      }
    } catch (a) {
      n = { error: a };
    } finally {
      try {
        o && !o.done && (r = i.return) && r.call(i);
      } finally {
        if (n)
          throw n.error;
      }
    }
    t.complete();
  });
}
function so(e) {
  return new se(function(t) {
    Xa(e, t).catch(function(n) {
      return t.error(n);
    });
  });
}
function Qa(e) {
  return so(io(e));
}
function Xa(e, t) {
  var n, r, i, o;
  return Ia(this, void 0, void 0, function() {
    var s, a;
    return Ki(this, function(l) {
      switch (l.label) {
        case 0:
          l.trys.push([0, 5, 6, 11]), n = Ea(e), l.label = 1;
        case 1:
          return [4, n.next()];
        case 2:
          if (r = l.sent(), !!r.done)
            return [3, 4];
          if (s = r.value, t.next(s), t.closed)
            return [2];
          l.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          return a = l.sent(), i = { error: a }, [3, 11];
        case 6:
          return l.trys.push([6, , 9, 10]), r && !r.done && (o = n.return) ? [4, o.call(n)] : [3, 8];
        case 7:
          l.sent(), l.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (i)
            throw i.error;
          return [7];
        case 10:
          return [7];
        case 11:
          return t.complete(), [2];
      }
    });
  });
}
function Xe(e, t, n, r, i) {
  r === void 0 && (r = 0), i === void 0 && (i = !1);
  var o = t.schedule(function() {
    n(), i ? e.add(this.schedule(null, r)) : this.unsubscribe();
  }, r);
  if (e.add(o), !i)
    return o;
}
function ao(e, t) {
  return t === void 0 && (t = 0), pe(function(n, r) {
    n.subscribe(ie(r, function(i) {
      return Xe(r, e, function() {
        return r.next(i);
      }, t);
    }, function() {
      return Xe(r, e, function() {
        return r.complete();
      }, t);
    }, function(i) {
      return Xe(r, e, function() {
        return r.error(i);
      }, t);
    }));
  });
}
function uo(e, t) {
  return t === void 0 && (t = 0), pe(function(n, r) {
    r.add(e.schedule(function() {
      return n.subscribe(r);
    }, t));
  });
}
function eu(e, t) {
  return ze(e).pipe(uo(t), ao(t));
}
function tu(e, t) {
  return ze(e).pipe(uo(t), ao(t));
}
function nu(e, t) {
  return new se(function(n) {
    var r = 0;
    return t.schedule(function() {
      r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule());
    });
  });
}
function ru(e, t) {
  return new se(function(n) {
    var r;
    return Xe(n, t, function() {
      r = e[no](), Xe(n, t, function() {
        var i, o, s;
        try {
          i = r.next(), o = i.value, s = i.done;
        } catch (a) {
          n.error(a);
          return;
        }
        s ? n.complete() : n.next(o);
      }, 0, !0);
    }), function() {
      return M(r == null ? void 0 : r.return) && r.return();
    };
  });
}
function co(e, t) {
  if (!e)
    throw new Error("Iterable cannot be null");
  return new se(function(n) {
    Xe(n, t, function() {
      var r = e[Symbol.asyncIterator]();
      Xe(n, t, function() {
        r.next().then(function(i) {
          i.done ? n.complete() : n.next(i.value);
        });
      }, 0, !0);
    });
  });
}
function iu(e, t) {
  return co(io(e), t);
}
function ou(e, t) {
  if (e != null) {
    if (Xi(e))
      return eu(e, t);
    if (xr(e))
      return nu(e, t);
    if (Qi(e))
      return tu(e, t);
    if (eo(e))
      return co(e, t);
    if (ro(e))
      return ru(e, t);
    if (oo(e))
      return iu(e, t);
  }
  throw to(e);
}
function lo(e, t) {
  return t ? ou(e, t) : ze(e);
}
function fo() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var n = Ji(e);
  return lo(e, n);
}
var Tr = vr(function(e) {
  return function() {
    e(this), this.name = "EmptyError", this.message = "no elements in sequence";
  };
});
function ho(e, t) {
  var n = typeof t == "object";
  return new Promise(function(r, i) {
    var o = new Sn({
      next: function(s) {
        r(s), o.unsubscribe();
      },
      error: i,
      complete: function() {
        n ? r(t.defaultValue) : i(new Tr());
      }
    });
    e.subscribe(o);
  });
}
function su(e) {
  return e instanceof Date && !isNaN(e);
}
function oe(e, t) {
  return pe(function(n, r) {
    var i = 0;
    n.subscribe(ie(r, function(o) {
      r.next(e.call(t, o, i++));
    }));
  });
}
var au = Array.isArray;
function uu(e, t) {
  return au(t) ? e.apply(void 0, We([], Ce(t))) : e(t);
}
function cu(e) {
  return oe(function(t) {
    return uu(e, t);
  });
}
function lu(e, t, n, r, i, o, s, a) {
  var l = [], u = 0, d = 0, m = !1, y = function() {
    m && !l.length && !u && t.complete();
  }, v = function(p) {
    return u < r ? x(p) : l.push(p);
  }, x = function(p) {
    o && t.next(p), u++;
    var A = !1;
    ze(n(p, d++)).subscribe(ie(t, function(O) {
      i == null || i(O), o ? v(O) : t.next(O);
    }, function() {
      A = !0;
    }, void 0, function() {
      if (A)
        try {
          u--;
          for (var O = function() {
            var g = l.shift();
            s ? Xe(t, s, function() {
              return x(g);
            }) : x(g);
          }; l.length && u < r; )
            O();
          y();
        } catch (g) {
          t.error(g);
        }
    }));
  };
  return e.subscribe(ie(t, v, function() {
    m = !0, y();
  })), function() {
    a == null || a();
  };
}
function It(e, t, n) {
  return n === void 0 && (n = 1 / 0), M(t) ? It(function(r, i) {
    return oe(function(o, s) {
      return t(r, o, i, s);
    })(ze(e(r, i)));
  }, n) : (typeof t == "number" && (n = t), pe(function(r, i) {
    return lu(r, i, e, n);
  }));
}
function fu(e) {
  return e === void 0 && (e = 1 / 0), It(Nt, e);
}
var du = ["addListener", "removeListener"], hu = ["addEventListener", "removeEventListener"], pu = ["on", "off"];
function Me(e, t, n, r) {
  if (M(n) && (r = n, n = void 0), r)
    return Me(e, t, n).pipe(cu(r));
  var i = Ce(vu(e) ? hu.map(function(a) {
    return function(l) {
      return e[a](t, l, n);
    };
  }) : mu(e) ? du.map(ci(e, t)) : yu(e) ? pu.map(ci(e, t)) : [], 2), o = i[0], s = i[1];
  if (!o && xr(e))
    return It(function(a) {
      return Me(a, t, n);
    })(ze(e));
  if (!o)
    throw new TypeError("Invalid event target");
  return new se(function(a) {
    var l = function() {
      for (var u = [], d = 0; d < arguments.length; d++)
        u[d] = arguments[d];
      return a.next(1 < u.length ? u : u[0]);
    };
    return o(l), function() {
      return s(l);
    };
  });
}
function ci(e, t) {
  return function(n) {
    return function(r) {
      return e[n](t, r);
    };
  };
}
function mu(e) {
  return M(e.addListener) && M(e.removeListener);
}
function yu(e) {
  return M(e.on) && M(e.off);
}
function vu(e) {
  return M(e.addEventListener) && M(e.removeEventListener);
}
function li(e, t, n) {
  e === void 0 && (e = 0), n === void 0 && (n = Ba);
  var r = -1;
  return t != null && (Yi(t) ? n = t : r = t), new se(function(i) {
    var o = su(e) ? +e - n.now() : e;
    o < 0 && (o = 0);
    var s = 0;
    return n.schedule(function() {
      i.closed || (i.next(s++), 0 <= r ? this.schedule(void 0, r) : i.complete());
    }, o);
  });
}
function Yt() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var n = Ji(e), r = Ka(e, 1 / 0), i = e;
  return i.length ? i.length === 1 ? ze(i[0]) : fu(r)(lo(i, n)) : Tn;
}
function Or(e, t) {
  return pe(function(n, r) {
    var i = 0;
    n.subscribe(ie(r, function(o) {
      return e.call(t, o, i++) && r.next(o);
    }));
  });
}
function gu(e, t, n, r, i) {
  return function(o, s) {
    var a = n, l = t, u = 0;
    o.subscribe(ie(s, function(d) {
      var m = u++;
      l = a ? e(l, d, m) : (a = !0, d), r && s.next(l);
    }, i && function() {
      a && s.next(l), s.complete();
    }));
  };
}
function bu(e, t) {
  return M(t) ? It(e, t, 1) : It(e, 1);
}
function _u(e) {
  return pe(function(t, n) {
    var r = !1;
    t.subscribe(ie(n, function(i) {
      r = !0, n.next(i);
    }, function() {
      r || n.next(e), n.complete();
    }));
  });
}
function wu(e) {
  return e <= 0 ? function() {
    return Tn;
  } : pe(function(t, n) {
    var r = 0;
    t.subscribe(ie(n, function(i) {
      ++r <= e && (n.next(i), e <= r && n.complete());
    }));
  });
}
function zn(e, t) {
  return t === void 0 && (t = Nt), e = e ?? Su, pe(function(n, r) {
    var i, o = !0;
    n.subscribe(ie(r, function(s) {
      var a = t(s);
      (o || !e(i, a)) && (o = !1, i = a, r.next(s));
    }));
  });
}
function Su(e, t) {
  return e === t;
}
function xu(e) {
  return e === void 0 && (e = Tu), pe(function(t, n) {
    var r = !1;
    t.subscribe(ie(n, function(i) {
      r = !0, n.next(i);
    }, function() {
      return r ? n.complete() : n.error(e());
    }));
  });
}
function Tu() {
  return new Tr();
}
function Ou(e, t) {
  var n = arguments.length >= 2;
  return function(r) {
    return r.pipe(e ? Or(function(i, o) {
      return e(i, o, r);
    }) : Nt, wu(1), n ? _u(t) : xu(function() {
      return new Tr();
    }));
  };
}
function Au(e, t) {
  return pe(gu(e, t, arguments.length >= 2, !0));
}
function Jt(e, t) {
  return pe(function(n, r) {
    var i = null, o = 0, s = !1, a = function() {
      return s && !i && r.complete();
    };
    n.subscribe(ie(r, function(l) {
      i == null || i.unsubscribe();
      var u = 0, d = o++;
      ze(e(l, d)).subscribe(i = ie(r, function(m) {
        return r.next(t ? t(l, m, d, u++) : m);
      }, function() {
        i = null, a();
      }));
    }, function() {
      s = !0, a();
    }));
  });
}
function B(e, t, n) {
  var r = M(e) || t || n ? { next: e, error: t, complete: n } : e;
  return r ? pe(function(i, o) {
    var s;
    (s = r.subscribe) === null || s === void 0 || s.call(r);
    var a = !0;
    i.subscribe(ie(o, function(l) {
      var u;
      (u = r.next) === null || u === void 0 || u.call(r, l), o.next(l);
    }, function() {
      var l;
      a = !1, (l = r.complete) === null || l === void 0 || l.call(r), o.complete();
    }, function(l) {
      var u;
      a = !1, (u = r.error) === null || u === void 0 || u.call(r, l), o.error(l);
    }, function() {
      var l, u;
      a && ((l = r.unsubscribe) === null || l === void 0 || l.call(r)), (u = r.finalize) === null || u === void 0 || u.call(r);
    }));
  }) : Nt;
}
function Iu() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var n = za(e);
  return pe(function(r, i) {
    for (var o = e.length, s = new Array(o), a = e.map(function() {
      return !1;
    }), l = !1, u = function(m) {
      ze(e[m]).subscribe(ie(i, function(y) {
        s[m] = y, !l && !a[m] && (a[m] = !0, (l = a.every(Nt)) && (a = null));
      }, rr));
    }, d = 0; d < o; d++)
      u(d);
    r.subscribe(ie(i, function(m) {
      if (l) {
        var y = We([m], Ce(s));
        i.next(n ? n.apply(void 0, We([], Ce(y))) : y);
      }
    }));
  });
}
function Kn(e, t, n, r) {
  function i(o) {
    return o instanceof n ? o : new n(function(s) {
      s(o);
    });
  }
  return new (n || (n = Promise))(function(o, s) {
    function a(d) {
      try {
        u(r.next(d));
      } catch (m) {
        s(m);
      }
    }
    function l(d) {
      try {
        u(r.throw(d));
      } catch (m) {
        s(m);
      }
    }
    function u(d) {
      d.done ? o(d.value) : i(d.value).then(a, l);
    }
    u((r = r.apply(e, t || [])).next());
  });
}
function Hn(e, t) {
  var n = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, s;
  return s = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function a(u) {
    return function(d) {
      return l([u, d]);
    };
  }
  function l(u) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; n; )
      try {
        if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done)
          return o;
        switch (i = 0, o && (u = [u[0] & 2, o.value]), u[0]) {
          case 0:
          case 1:
            o = u;
            break;
          case 4:
            return n.label++, { value: u[1], done: !1 };
          case 5:
            n.label++, i = u[1], u = [0];
            continue;
          case 7:
            u = n.ops.pop(), n.trys.pop();
            continue;
          default:
            if (o = n.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {
              n = 0;
              continue;
            }
            if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {
              n.label = u[1];
              break;
            }
            if (u[0] === 6 && n.label < o[1]) {
              n.label = o[1], o = u;
              break;
            }
            if (o && n.label < o[2]) {
              n.label = o[2], n.ops.push(u);
              break;
            }
            o[2] && n.ops.pop(), n.trys.pop();
            continue;
        }
        u = t.call(e, n);
      } catch (d) {
        u = [6, d], i = 0;
      } finally {
        r = o = 0;
      }
    if (u[0] & 5)
      throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function On(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n)
    return e;
  var r = n.call(e), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}
function pt(e, t, n) {
  if (n || arguments.length === 2)
    for (var r = 0, i = t.length, o; r < i; r++)
      (o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);
  return e.concat(o || Array.prototype.slice.call(t));
}
var Pu = {
  withStackTrace: !1
}, po = function(e, t, n) {
  n === void 0 && (n = Pu);
  var r = t.isOk() ? { type: "Ok", value: t.value } : { type: "Err", value: t.error }, i = n.withStackTrace ? new Error().stack : void 0;
  return {
    data: r,
    message: e,
    stack: i
  };
}, fe = (
  /** @class */
  function() {
    function e(t) {
      this._promise = t;
    }
    return e.fromSafePromise = function(t) {
      var n = t.then(function(r) {
        return new Je(r);
      });
      return new e(n);
    }, e.fromPromise = function(t, n) {
      var r = t.then(function(i) {
        return new Je(i);
      }).catch(function(i) {
        return new ft(n(i));
      });
      return new e(r);
    }, e.combine = function(t) {
      return ku(t);
    }, e.combineWithAllErrors = function(t) {
      return $u(t);
    }, e.prototype.map = function(t) {
      var n = this;
      return new e(this._promise.then(function(r) {
        return Kn(n, void 0, void 0, function() {
          var i;
          return Hn(this, function(o) {
            switch (o.label) {
              case 0:
                return r.isErr() ? [2, new ft(r.error)] : (i = Je.bind, [4, t(r.value)]);
              case 1:
                return [2, new (i.apply(Je, [void 0, o.sent()]))()];
            }
          });
        });
      }));
    }, e.prototype.mapErr = function(t) {
      var n = this;
      return new e(this._promise.then(function(r) {
        return Kn(n, void 0, void 0, function() {
          var i;
          return Hn(this, function(o) {
            switch (o.label) {
              case 0:
                return r.isOk() ? [2, new Je(r.value)] : (i = ft.bind, [4, t(r.error)]);
              case 1:
                return [2, new (i.apply(ft, [void 0, o.sent()]))()];
            }
          });
        });
      }));
    }, e.prototype.andThen = function(t) {
      return new e(this._promise.then(function(n) {
        if (n.isErr())
          return new ft(n.error);
        var r = t(n.value);
        return r instanceof e ? r._promise : r;
      }));
    }, e.prototype.orElse = function(t) {
      var n = this;
      return new e(this._promise.then(function(r) {
        return Kn(n, void 0, void 0, function() {
          return Hn(this, function(i) {
            return r.isErr() ? [2, t(r.error)] : [2, new Je(r.value)];
          });
        });
      }));
    }, e.prototype.match = function(t, n) {
      return this._promise.then(function(r) {
        return r.match(t, n);
      });
    }, e.prototype.unwrapOr = function(t) {
      return this._promise.then(function(n) {
        return n.unwrapOr(t);
      });
    }, e.prototype.then = function(t, n) {
      return this._promise.then(t, n);
    }, e;
  }()
), Eu = function(e) {
  return new fe(Promise.resolve(new Je(e)));
}, fi = function(e) {
  return new fe(Promise.resolve(new ft(e)));
};
fe.fromPromise;
fe.fromSafePromise;
var Cu = function(e) {
  return function(t) {
    return pt(pt([], On(t), !1), [e], !1);
  };
}, mo = function(e) {
  return e.reduce(function(t, n) {
    return t.isOk() ? n.isErr() ? Ie(n.error) : t.map(Cu(n.value)) : t;
  }, re([]));
}, ku = function(e) {
  return fe.fromSafePromise(Promise.all(e)).andThen(mo);
}, yo = function(e) {
  return e.reduce(function(t, n) {
    return n.isErr() ? t.isErr() ? Ie(pt(pt([], On(t.error), !1), [n.error], !1)) : Ie([n.error]) : t.isErr() ? t : re(pt(pt([], On(t.value), !1), [n.value], !1));
  }, re([]));
}, $u = function(e) {
  return fe.fromSafePromise(Promise.all(e)).andThen(yo);
}, ir;
(function(e) {
  function t(i, o) {
    return function() {
      for (var s = [], a = 0; a < arguments.length; a++)
        s[a] = arguments[a];
      try {
        var l = i.apply(void 0, pt([], On(s), !1));
        return re(l);
      } catch (u) {
        return Ie(o ? o(u) : u);
      }
    };
  }
  e.fromThrowable = t;
  function n(i) {
    return mo(i);
  }
  e.combine = n;
  function r(i) {
    return yo(i);
  }
  e.combineWithAllErrors = r;
})(ir || (ir = {}));
var re = function(e) {
  return new Je(e);
}, Ie = function(e) {
  return new ft(e);
}, Je = (
  /** @class */
  function() {
    function e(t) {
      this.value = t;
    }
    return e.prototype.isOk = function() {
      return !0;
    }, e.prototype.isErr = function() {
      return !this.isOk();
    }, e.prototype.map = function(t) {
      return re(t(this.value));
    }, e.prototype.mapErr = function(t) {
      return re(this.value);
    }, e.prototype.andThen = function(t) {
      return t(this.value);
    }, e.prototype.orElse = function(t) {
      return re(this.value);
    }, e.prototype.asyncAndThen = function(t) {
      return t(this.value);
    }, e.prototype.asyncMap = function(t) {
      return fe.fromSafePromise(t(this.value));
    }, e.prototype.unwrapOr = function(t) {
      return this.value;
    }, e.prototype.match = function(t, n) {
      return t(this.value);
    }, e.prototype._unsafeUnwrap = function(t) {
      return this.value;
    }, e.prototype._unsafeUnwrapErr = function(t) {
      throw po("Called `_unsafeUnwrapErr` on an Ok", this, t);
    }, e;
  }()
), ft = (
  /** @class */
  function() {
    function e(t) {
      this.error = t;
    }
    return e.prototype.isOk = function() {
      return !1;
    }, e.prototype.isErr = function() {
      return !this.isOk();
    }, e.prototype.map = function(t) {
      return Ie(this.error);
    }, e.prototype.mapErr = function(t) {
      return Ie(t(this.error));
    }, e.prototype.andThen = function(t) {
      return Ie(this.error);
    }, e.prototype.orElse = function(t) {
      return t(this.error);
    }, e.prototype.asyncAndThen = function(t) {
      return fi(this.error);
    }, e.prototype.asyncMap = function(t) {
      return fi(this.error);
    }, e.prototype.unwrapOr = function(t) {
      return t;
    }, e.prototype.match = function(t, n) {
      return n(this.error);
    }, e.prototype._unsafeUnwrap = function(t) {
      throw po("Called `_unsafeUnwrap` on an Err", this, t);
    }, e.prototype._unsafeUnwrapErr = function(t) {
      return this.error;
    }, e;
  }()
);
ir.fromThrowable;
var pn = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, An = {}, Ru = {
  get exports() {
    return An;
  },
  set exports(e) {
    An = e;
  }
};
(function(e, t) {
  var n = 200, r = "__lodash_hash_undefined__", i = 1, o = 2, s = 9007199254740991, a = "[object Arguments]", l = "[object Array]", u = "[object AsyncFunction]", d = "[object Boolean]", m = "[object Date]", y = "[object Error]", v = "[object Function]", x = "[object GeneratorFunction]", p = "[object Map]", A = "[object Number]", O = "[object Null]", g = "[object Object]", z = "[object Promise]", U = "[object Proxy]", ne = "[object RegExp]", E = "[object Set]", ue = "[object String]", Te = "[object Symbol]", $ = "[object Undefined]", ce = "[object WeakMap]", He = "[object ArrayBuffer]", _ = "[object DataView]", N = "[object Float32Array]", q = "[object Float64Array]", Q = "[object Int8Array]", De = "[object Int16Array]", Lt = "[object Int32Array]", Ut = "[object Uint8Array]", nn = "[object Uint8ClampedArray]", fs = "[object Uint16Array]", ds = "[object Uint32Array]", hs = /[\\^$.*+?()[\]{}|]/g, ps = /^\[object .+?Constructor\]$/, ms = /^(?:0|[1-9]\d*)$/, Z = {};
  Z[N] = Z[q] = Z[Q] = Z[De] = Z[Lt] = Z[Ut] = Z[nn] = Z[fs] = Z[ds] = !0, Z[a] = Z[l] = Z[He] = Z[d] = Z[_] = Z[m] = Z[y] = Z[v] = Z[p] = Z[A] = Z[g] = Z[ne] = Z[E] = Z[ue] = Z[ce] = !1;
  var jr = typeof pn == "object" && pn && pn.Object === Object && pn, ys = typeof self == "object" && self && self.Object === Object && self, je = jr || ys || Function("return this")(), Nr = t && !t.nodeType && t, qr = Nr && !0 && e && !e.nodeType && e, Lr = qr && qr.exports === Nr, jn = Lr && jr.process, Ur = function() {
    try {
      return jn && jn.binding && jn.binding("util");
    } catch {
    }
  }(), Mr = Ur && Ur.isTypedArray;
  function vs(c, f) {
    for (var h = -1, b = c == null ? 0 : c.length, W = 0, P = []; ++h < b; ) {
      var V = c[h];
      f(V, h, c) && (P[W++] = V);
    }
    return P;
  }
  function gs(c, f) {
    for (var h = -1, b = f.length, W = c.length; ++h < b; )
      c[W + h] = f[h];
    return c;
  }
  function bs(c, f) {
    for (var h = -1, b = c == null ? 0 : c.length; ++h < b; )
      if (f(c[h], h, c))
        return !0;
    return !1;
  }
  function _s(c, f) {
    for (var h = -1, b = Array(c); ++h < c; )
      b[h] = f(h);
    return b;
  }
  function ws(c) {
    return function(f) {
      return c(f);
    };
  }
  function Ss(c, f) {
    return c.has(f);
  }
  function xs(c, f) {
    return c == null ? void 0 : c[f];
  }
  function Ts(c) {
    var f = -1, h = Array(c.size);
    return c.forEach(function(b, W) {
      h[++f] = [W, b];
    }), h;
  }
  function Os(c, f) {
    return function(h) {
      return c(f(h));
    };
  }
  function As(c) {
    var f = -1, h = Array(c.size);
    return c.forEach(function(b) {
      h[++f] = b;
    }), h;
  }
  var Is = Array.prototype, Ps = Function.prototype, rn = Object.prototype, Nn = je["__core-js_shared__"], Fr = Ps.toString, Oe = rn.hasOwnProperty, Zr = function() {
    var c = /[^.]+$/.exec(Nn && Nn.keys && Nn.keys.IE_PROTO || "");
    return c ? "Symbol(src)_1." + c : "";
  }(), Wr = rn.toString, Es = RegExp(
    "^" + Fr.call(Oe).replace(hs, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  ), Br = Lr ? je.Buffer : void 0, on = je.Symbol, zr = je.Uint8Array, Kr = rn.propertyIsEnumerable, Cs = Is.splice, ot = on ? on.toStringTag : void 0, Hr = Object.getOwnPropertySymbols, ks = Br ? Br.isBuffer : void 0, $s = Os(Object.keys, Object), qn = gt(je, "DataView"), Mt = gt(je, "Map"), Ln = gt(je, "Promise"), Un = gt(je, "Set"), Mn = gt(je, "WeakMap"), Ft = gt(Object, "create"), Rs = ut(qn), Ds = ut(Mt), js = ut(Ln), Ns = ut(Un), qs = ut(Mn), Vr = on ? on.prototype : void 0, Fn = Vr ? Vr.valueOf : void 0;
  function st(c) {
    var f = -1, h = c == null ? 0 : c.length;
    for (this.clear(); ++f < h; ) {
      var b = c[f];
      this.set(b[0], b[1]);
    }
  }
  function Ls() {
    this.__data__ = Ft ? Ft(null) : {}, this.size = 0;
  }
  function Us(c) {
    var f = this.has(c) && delete this.__data__[c];
    return this.size -= f ? 1 : 0, f;
  }
  function Ms(c) {
    var f = this.__data__;
    if (Ft) {
      var h = f[c];
      return h === r ? void 0 : h;
    }
    return Oe.call(f, c) ? f[c] : void 0;
  }
  function Fs(c) {
    var f = this.__data__;
    return Ft ? f[c] !== void 0 : Oe.call(f, c);
  }
  function Zs(c, f) {
    var h = this.__data__;
    return this.size += this.has(c) ? 0 : 1, h[c] = Ft && f === void 0 ? r : f, this;
  }
  st.prototype.clear = Ls, st.prototype.delete = Us, st.prototype.get = Ms, st.prototype.has = Fs, st.prototype.set = Zs;
  function Ne(c) {
    var f = -1, h = c == null ? 0 : c.length;
    for (this.clear(); ++f < h; ) {
      var b = c[f];
      this.set(b[0], b[1]);
    }
  }
  function Ws() {
    this.__data__ = [], this.size = 0;
  }
  function Bs(c) {
    var f = this.__data__, h = an(f, c);
    if (h < 0)
      return !1;
    var b = f.length - 1;
    return h == b ? f.pop() : Cs.call(f, h, 1), --this.size, !0;
  }
  function zs(c) {
    var f = this.__data__, h = an(f, c);
    return h < 0 ? void 0 : f[h][1];
  }
  function Ks(c) {
    return an(this.__data__, c) > -1;
  }
  function Hs(c, f) {
    var h = this.__data__, b = an(h, c);
    return b < 0 ? (++this.size, h.push([c, f])) : h[b][1] = f, this;
  }
  Ne.prototype.clear = Ws, Ne.prototype.delete = Bs, Ne.prototype.get = zs, Ne.prototype.has = Ks, Ne.prototype.set = Hs;
  function at(c) {
    var f = -1, h = c == null ? 0 : c.length;
    for (this.clear(); ++f < h; ) {
      var b = c[f];
      this.set(b[0], b[1]);
    }
  }
  function Vs() {
    this.size = 0, this.__data__ = {
      hash: new st(),
      map: new (Mt || Ne)(),
      string: new st()
    };
  }
  function Gs(c) {
    var f = un(this, c).delete(c);
    return this.size -= f ? 1 : 0, f;
  }
  function Ys(c) {
    return un(this, c).get(c);
  }
  function Js(c) {
    return un(this, c).has(c);
  }
  function Qs(c, f) {
    var h = un(this, c), b = h.size;
    return h.set(c, f), this.size += h.size == b ? 0 : 1, this;
  }
  at.prototype.clear = Vs, at.prototype.delete = Gs, at.prototype.get = Ys, at.prototype.has = Js, at.prototype.set = Qs;
  function sn(c) {
    var f = -1, h = c == null ? 0 : c.length;
    for (this.__data__ = new at(); ++f < h; )
      this.add(c[f]);
  }
  function Xs(c) {
    return this.__data__.set(c, r), this;
  }
  function ea(c) {
    return this.__data__.has(c);
  }
  sn.prototype.add = sn.prototype.push = Xs, sn.prototype.has = ea;
  function Ve(c) {
    var f = this.__data__ = new Ne(c);
    this.size = f.size;
  }
  function ta() {
    this.__data__ = new Ne(), this.size = 0;
  }
  function na(c) {
    var f = this.__data__, h = f.delete(c);
    return this.size = f.size, h;
  }
  function ra(c) {
    return this.__data__.get(c);
  }
  function ia(c) {
    return this.__data__.has(c);
  }
  function oa(c, f) {
    var h = this.__data__;
    if (h instanceof Ne) {
      var b = h.__data__;
      if (!Mt || b.length < n - 1)
        return b.push([c, f]), this.size = ++h.size, this;
      h = this.__data__ = new at(b);
    }
    return h.set(c, f), this.size = h.size, this;
  }
  Ve.prototype.clear = ta, Ve.prototype.delete = na, Ve.prototype.get = ra, Ve.prototype.has = ia, Ve.prototype.set = oa;
  function sa(c, f) {
    var h = cn(c), b = !h && wa(c), W = !h && !b && Zn(c), P = !h && !b && !W && ri(c), V = h || b || W || P, X = V ? _s(c.length, String) : [], ee = X.length;
    for (var K in c)
      (f || Oe.call(c, K)) && !(V && // Safari 9 has enumerable `arguments.length` in strict mode.
      (K == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
      W && (K == "offset" || K == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
      P && (K == "buffer" || K == "byteLength" || K == "byteOffset") || // Skip index properties.
      ya(K, ee))) && X.push(K);
    return X;
  }
  function an(c, f) {
    for (var h = c.length; h--; )
      if (Xr(c[h][0], f))
        return h;
    return -1;
  }
  function aa(c, f, h) {
    var b = f(c);
    return cn(c) ? b : gs(b, h(c));
  }
  function Zt(c) {
    return c == null ? c === void 0 ? $ : O : ot && ot in Object(c) ? pa(c) : _a(c);
  }
  function Gr(c) {
    return Wt(c) && Zt(c) == a;
  }
  function Yr(c, f, h, b, W) {
    return c === f ? !0 : c == null || f == null || !Wt(c) && !Wt(f) ? c !== c && f !== f : ua(c, f, h, b, Yr, W);
  }
  function ua(c, f, h, b, W, P) {
    var V = cn(c), X = cn(f), ee = V ? l : Ge(c), K = X ? l : Ge(f);
    ee = ee == a ? g : ee, K = K == a ? g : K;
    var le = ee == g, _e = K == g, te = ee == K;
    if (te && Zn(c)) {
      if (!Zn(f))
        return !1;
      V = !0, le = !1;
    }
    if (te && !le)
      return P || (P = new Ve()), V || ri(c) ? Jr(c, f, h, b, W, P) : da(c, f, ee, h, b, W, P);
    if (!(h & i)) {
      var me = le && Oe.call(c, "__wrapped__"), ye = _e && Oe.call(f, "__wrapped__");
      if (me || ye) {
        var Ye = me ? c.value() : c, qe = ye ? f.value() : f;
        return P || (P = new Ve()), W(Ye, qe, h, b, P);
      }
    }
    return te ? (P || (P = new Ve()), ha(c, f, h, b, W, P)) : !1;
  }
  function ca(c) {
    if (!ni(c) || ga(c))
      return !1;
    var f = ei(c) ? Es : ps;
    return f.test(ut(c));
  }
  function la(c) {
    return Wt(c) && ti(c.length) && !!Z[Zt(c)];
  }
  function fa(c) {
    if (!ba(c))
      return $s(c);
    var f = [];
    for (var h in Object(c))
      Oe.call(c, h) && h != "constructor" && f.push(h);
    return f;
  }
  function Jr(c, f, h, b, W, P) {
    var V = h & i, X = c.length, ee = f.length;
    if (X != ee && !(V && ee > X))
      return !1;
    var K = P.get(c);
    if (K && P.get(f))
      return K == f;
    var le = -1, _e = !0, te = h & o ? new sn() : void 0;
    for (P.set(c, f), P.set(f, c); ++le < X; ) {
      var me = c[le], ye = f[le];
      if (b)
        var Ye = V ? b(ye, me, le, f, c, P) : b(me, ye, le, c, f, P);
      if (Ye !== void 0) {
        if (Ye)
          continue;
        _e = !1;
        break;
      }
      if (te) {
        if (!bs(f, function(qe, ct) {
          if (!Ss(te, ct) && (me === qe || W(me, qe, h, b, P)))
            return te.push(ct);
        })) {
          _e = !1;
          break;
        }
      } else if (!(me === ye || W(me, ye, h, b, P))) {
        _e = !1;
        break;
      }
    }
    return P.delete(c), P.delete(f), _e;
  }
  function da(c, f, h, b, W, P, V) {
    switch (h) {
      case _:
        if (c.byteLength != f.byteLength || c.byteOffset != f.byteOffset)
          return !1;
        c = c.buffer, f = f.buffer;
      case He:
        return !(c.byteLength != f.byteLength || !P(new zr(c), new zr(f)));
      case d:
      case m:
      case A:
        return Xr(+c, +f);
      case y:
        return c.name == f.name && c.message == f.message;
      case ne:
      case ue:
        return c == f + "";
      case p:
        var X = Ts;
      case E:
        var ee = b & i;
        if (X || (X = As), c.size != f.size && !ee)
          return !1;
        var K = V.get(c);
        if (K)
          return K == f;
        b |= o, V.set(c, f);
        var le = Jr(X(c), X(f), b, W, P, V);
        return V.delete(c), le;
      case Te:
        if (Fn)
          return Fn.call(c) == Fn.call(f);
    }
    return !1;
  }
  function ha(c, f, h, b, W, P) {
    var V = h & i, X = Qr(c), ee = X.length, K = Qr(f), le = K.length;
    if (ee != le && !V)
      return !1;
    for (var _e = ee; _e--; ) {
      var te = X[_e];
      if (!(V ? te in f : Oe.call(f, te)))
        return !1;
    }
    var me = P.get(c);
    if (me && P.get(f))
      return me == f;
    var ye = !0;
    P.set(c, f), P.set(f, c);
    for (var Ye = V; ++_e < ee; ) {
      te = X[_e];
      var qe = c[te], ct = f[te];
      if (b)
        var ii = V ? b(ct, qe, te, f, c, P) : b(qe, ct, te, c, f, P);
      if (!(ii === void 0 ? qe === ct || W(qe, ct, h, b, P) : ii)) {
        ye = !1;
        break;
      }
      Ye || (Ye = te == "constructor");
    }
    if (ye && !Ye) {
      var ln = c.constructor, fn = f.constructor;
      ln != fn && "constructor" in c && "constructor" in f && !(typeof ln == "function" && ln instanceof ln && typeof fn == "function" && fn instanceof fn) && (ye = !1);
    }
    return P.delete(c), P.delete(f), ye;
  }
  function Qr(c) {
    return aa(c, Ta, ma);
  }
  function un(c, f) {
    var h = c.__data__;
    return va(f) ? h[typeof f == "string" ? "string" : "hash"] : h.map;
  }
  function gt(c, f) {
    var h = xs(c, f);
    return ca(h) ? h : void 0;
  }
  function pa(c) {
    var f = Oe.call(c, ot), h = c[ot];
    try {
      c[ot] = void 0;
      var b = !0;
    } catch {
    }
    var W = Wr.call(c);
    return b && (f ? c[ot] = h : delete c[ot]), W;
  }
  var ma = Hr ? function(c) {
    return c == null ? [] : (c = Object(c), vs(Hr(c), function(f) {
      return Kr.call(c, f);
    }));
  } : Oa, Ge = Zt;
  (qn && Ge(new qn(new ArrayBuffer(1))) != _ || Mt && Ge(new Mt()) != p || Ln && Ge(Ln.resolve()) != z || Un && Ge(new Un()) != E || Mn && Ge(new Mn()) != ce) && (Ge = function(c) {
    var f = Zt(c), h = f == g ? c.constructor : void 0, b = h ? ut(h) : "";
    if (b)
      switch (b) {
        case Rs:
          return _;
        case Ds:
          return p;
        case js:
          return z;
        case Ns:
          return E;
        case qs:
          return ce;
      }
    return f;
  });
  function ya(c, f) {
    return f = f ?? s, !!f && (typeof c == "number" || ms.test(c)) && c > -1 && c % 1 == 0 && c < f;
  }
  function va(c) {
    var f = typeof c;
    return f == "string" || f == "number" || f == "symbol" || f == "boolean" ? c !== "__proto__" : c === null;
  }
  function ga(c) {
    return !!Zr && Zr in c;
  }
  function ba(c) {
    var f = c && c.constructor, h = typeof f == "function" && f.prototype || rn;
    return c === h;
  }
  function _a(c) {
    return Wr.call(c);
  }
  function ut(c) {
    if (c != null) {
      try {
        return Fr.call(c);
      } catch {
      }
      try {
        return c + "";
      } catch {
      }
    }
    return "";
  }
  function Xr(c, f) {
    return c === f || c !== c && f !== f;
  }
  var wa = Gr(function() {
    return arguments;
  }()) ? Gr : function(c) {
    return Wt(c) && Oe.call(c, "callee") && !Kr.call(c, "callee");
  }, cn = Array.isArray;
  function Sa(c) {
    return c != null && ti(c.length) && !ei(c);
  }
  var Zn = ks || Aa;
  function xa(c, f) {
    return Yr(c, f);
  }
  function ei(c) {
    if (!ni(c))
      return !1;
    var f = Zt(c);
    return f == v || f == x || f == u || f == U;
  }
  function ti(c) {
    return typeof c == "number" && c > -1 && c % 1 == 0 && c <= s;
  }
  function ni(c) {
    var f = typeof c;
    return c != null && (f == "object" || f == "function");
  }
  function Wt(c) {
    return c != null && typeof c == "object";
  }
  var ri = Mr ? ws(Mr) : la;
  function Ta(c) {
    return Sa(c) ? sa(c) : fa(c);
  }
  function Oa() {
    return [];
  }
  function Aa() {
    return !1;
  }
  e.exports = xa;
})(Ru, An);
const di = An, Du = (e, t) => [
  !!(e != null && e.persona),
  di(
    t.ongoingAccountsWithoutProofOfOwnership,
    e == null ? void 0 : e.sharedData.ongoingAccountsWithoutProofOfOwnership
  ),
  di(
    t.ongoingPersonaData,
    e == null ? void 0 : e.sharedData.ongoingPersonaData
  )
].reduce((n, r) => n && r, !0), hi = (e, {
  state: t,
  logger: n,
  walletClient: r,
  useCache: i = !0
}) => {
  var u, d;
  const o = Du(t, e), s = ((u = e.reset) == null ? void 0 : u.accounts) || ((d = e.reset) == null ? void 0 : d.personaData), a = e.oneTimeAccountsWithoutProofOfOwnership || e.oneTimePersonaData;
  return o && !s && !a && i ? (n == null || n.debug("resolvedByState", t), Eu({
    resolvedBy: "state",
    data: {
      accounts: t == null ? void 0 : t.accounts,
      persona: t == null ? void 0 : t.persona,
      personaData: t == null ? void 0 : t.personaData
    }
  })) : (n == null || n.debug("resolveByWalletRequest"), r.request(e).map((m) => ({
    resolvedBy: "wallet",
    data: m
  })));
}, pi = (e, t) => Object.keys(e).length === 0 || e.ongoingAccountsWithoutProofOfOwnership || e.ongoingPersonaData ? re(t ? {
  ...e,
  usePersona: {
    identityAddress: t.identityAddress
  }
} : {
  ...e,
  loginWithoutChallenge: { discriminator: "login" }
}) : re(e), Qt = (e) => e, vo = (e) => {
  try {
    return re(JSON.parse(e));
  } catch (t) {
    return Ie(Qt(t));
  }
}, ju = (e) => {
  try {
    return re(JSON.stringify(e));
  } catch (t) {
    return Ie(t);
  }
}, Nu = (e) => ju(e).andThen(vo), Vn = {
  connected: !1,
  accounts: [],
  sharedData: {}
}, qu = (e) => {
  const t = e.key, n = e.subjects, r = e.logger, i = e.connectButtonClient, o = e.walletClient, s = e.storageClient, a = e.useDoneCallback, l = e.onDisconnectCallback, u = e.getState, d = e.useCache ?? !0, m = new Re(), y = () => s.getData(t).map((_) => (_ && (r == null || r.debug("readFromStorage")), _)), v = (_) => s.setData(t, _).map(() => {
    r == null || r.debug("writeToStorage", _);
  }), x = (_, N = !1) => {
    Nu(_).map((q) => {
      Object.keys(q).length && n.setState.next({ state: q, persist: N });
    });
  }, p = () => {
    n.setState.next({ state: Vn, persist: !0 });
  }, A = (_) => (e != null && e.onInitCallback && (e == null || e.onInitCallback(_)), x(_));
  (() => e.initialState ? (r == null || r.debug("initializeStateFromInput"), A(e.initialState)) : y().map((_) => _ ? (r == null || r.debug("initializeStateFromStorage"), A(_)) : (r == null || r.debug("initializeStateFromDefault"), A(Vn))))();
  const g = n.state$, z = g.pipe(
    oe(({ connected: _ }) => _),
    zn()
  ), U = g.pipe(
    oe(({ persona: _ }) => _),
    zn()
  ), ne = g.pipe(oe(({ accounts: _ }) => _)), E = g.pipe(oe(({ personaData: _ }) => _));
  m.add(
    g.pipe(
      B((_) => {
        r == null || r.debug("state$", _);
      })
    ).subscribe()
  ), m.add(
    ne.pipe(
      B((_) => {
        i.setAccounts(_ || []);
      })
    ).subscribe()
  ), m.add(
    E.pipe(
      B((_) => {
        i.setPersonaData(_ || []);
      })
    ).subscribe()
  ), m.add(
    U.pipe(
      B((_) => {
        i.setPersonaLabel((_ == null ? void 0 : _.label) ?? "");
      })
    ).subscribe()
  ), m.add(
    i.onDisconnect$.pipe(
      B(() => {
        p(), o.resetRequestItems(), l();
      })
    ).subscribe()
  ), m.add(
    o.pendingRequests$.pipe(
      B((_) => {
        i.setLoading(_);
      })
    ).subscribe()
  ), m.add(
    o.requestItems$.pipe(
      B((_) => {
        i.setRequestItems(_), i.setConnecting(
          _.some(
            (N) => N.status === "pending" && N.type === "loginRequest"
          )
        );
      })
    ).subscribe()
  ), m.add(
    z.pipe(
      B((_) => {
        i.setConnected(_);
      })
    ).subscribe()
  ), m.add(
    n.setState.pipe(
      bu(
        ({ state: _, persist: N }) => fo(_).pipe(
          Au((q, Q) => ({ ...q, ...Q }), Vn),
          It((q) => (r == null || r.debug("stateUpdated", q), n.state$.next(q), N ? v(q) : []))
        )
      )
    ).subscribe()
  );
  const ue = (_) => (_.error === "invalidPersona" && p(), _), Te = (_) => u().andThen(
    (N) => $(_).andThen((q) => pi(q, N.persona)).asyncAndThen(
      (q) => hi(q, {
        state: N,
        logger: r,
        walletClient: o,
        useCache: d
      }).map(({ data: Q, resolvedBy: De }) => {
        if (De === "wallet") {
          const {
            ongoingAccountsWithoutProofOfOwnership: Lt,
            ongoingPersonaData: Ut
          } = q;
          x(
            {
              connected: !!N.persona || !!Q.persona,
              sharedData: {
                ongoingPersonaData: Ut,
                ongoingAccountsWithoutProofOfOwnership: Lt
              },
              accounts: Q.accounts,
              personaData: Q.personaData,
              persona: Q.persona
            },
            !0
          );
        }
        return Q;
      }).mapErr(ue)
    )
  ), $ = (_) => {
    const { accounts: N, personaData: q } = _, Q = {};
    if ((N != null && N.reset || q != null && q.reset) && (Q.reset = {
      accounts: !!(N != null && N.reset),
      personaData: !!(q != null && q.reset)
    }), N) {
      const De = N.oneTime ? "oneTimeAccountsWithoutProofOfOwnership" : "ongoingAccountsWithoutProofOfOwnership";
      Q[De] = N;
    }
    if (q) {
      const De = q.oneTime ? "oneTimePersonaData" : "ongoingPersonaData";
      Q[De] = q;
    }
    return re(Q);
  }, ce = () => e.connectRequest((_) => (r == null || r.debug("connectRequest", _), u().andThen(
    (N) => $(_).andThen((q) => pi(q, N.persona)).asyncAndThen(
      (q) => hi(q, {
        state: N,
        logger: r,
        walletClient: o,
        useCache: d
      }).map(({ data: Q }) => {
        const {
          ongoingAccountsWithoutProofOfOwnership: De,
          ongoingPersonaData: Lt
        } = q, Ut = {
          ongoingAccountsWithoutProofOfOwnership: De,
          ongoingPersonaData: Lt
        }, nn = () => {
          x({ ...Q, connected: !0, sharedData: Ut }, !0);
        };
        return a || nn(), {
          data: Q,
          done: nn
        };
      }).mapErr((Q) => (x({ connected: !1 }, !0), Q))
    )
  )));
  m.add(
    Yt(i.onUpdateSharedData$, n.updateSharedData).pipe(
      Iu(g),
      Jt(([, _]) => {
        const N = {};
        return _.sharedData.ongoingAccountsWithoutProofOfOwnership && (N.accounts = {
          ..._.sharedData.ongoingAccountsWithoutProofOfOwnership,
          reset: !0
        }), _.sharedData.ongoingPersonaData && (N.personaData = {
          ..._.sharedData.ongoingPersonaData,
          reset: !0
        }), Object.keys(N).length === 0 ? Tn : Te(N);
      })
    ).subscribe()
  ), m.add(
    i.onConnect$.pipe(Jt(() => ce() ?? Tn)).subscribe()
  );
  const He = () => {
    p(), o.resetRequestItems();
  };
  return {
    connected$: g.pipe(
      oe(({ connected: _ }) => _),
      zn()
    ),
    setConnected: (_) => n.connected.next(_),
    requestData: Te,
    destroy: () => {
      He(), i.destroy(), o.destroy(), m.unsubscribe();
    },
    subjects: n,
    state$: g,
    reset: He
  };
}, Lu = () => ({
  onConnect: new ve(),
  onDisconnect: new ve(),
  onUpdateSharedData: new ve(),
  loading: new Ue(!1),
  connected: new wt(1),
  requestItems: new Ue([]),
  onCancelRequestItem: new ve(),
  accounts: new Ue([]),
  connecting: new Ue(!1),
  onShowPopover: new ve(),
  showNotification: new Ue(!1),
  personaLabel: new Ue(""),
  personaData: new Ue([])
}), Uu = (e) => {
  import("./connect-button-cf1a7b0e.mjs");
  const t = e.subjects || Lu(), n = e.logger, r = (a) => {
    a();
  }, i = e.onConnect || r, o = () => document.querySelector("radix-connect-button"), s = new Re();
  return s.add(
    Me(document, "onRender").pipe(
      oe(() => o()),
      Or((a) => !!a),
      Jt((a) => {
        n == null || n.debug("connectButtonDiscovered"), a.dAppName = e.dAppName, e.explorer && (a.explorer = e.explorer);
        const l = Me(a, "onConnect").pipe(
          B(() => {
            i((E) => {
              t.onConnect.next(E);
            });
          })
        ), u = Me(
          a,
          "onDisconnect"
        ).pipe(
          B(() => {
            t.onDisconnect.next();
          })
        ), d = Me(a, "onDestroy").pipe(
          B(() => {
            n == null || n.debug("connectButtonRemovedFromDOM");
          })
        ), m = Me(
          a,
          "onCancelRequestItem"
        ).pipe(
          B((E) => {
            const ue = E.detail.id;
            n == null || n.debug("onCancelRequestItem", { id: ue }), t.onCancelRequestItem.next(ue);
          })
        ), y = Me(
          a,
          "onUpdateSharedData"
        ).pipe(
          B(() => {
            n == null || n.debug("onUpdateSharedData"), t.onUpdateSharedData.next();
          })
        ), v = Me(
          a,
          "onShowPopover"
        ).pipe(
          B(() => {
            t.onShowPopover.next();
          })
        ), x = t.loading.pipe(
          B((E) => a.loading = E)
        ), p = t.connected.pipe(
          B((E) => {
            a.connected = E;
          })
        ), A = t.requestItems.pipe(
          B((E) => {
            a.requestItems = E;
          })
        ), O = t.accounts.pipe(
          B((E) => {
            a.accounts = E;
          })
        ), g = t.personaData.pipe(
          B((E) => {
            a.personaData = E;
          })
        ), z = t.personaLabel.pipe(
          B((E) => {
            a.personaLabel = E;
          })
        ), U = t.connecting.pipe(
          B((E) => {
            a.connecting = E;
          })
        ), ne = Yt(
          t.showNotification,
          t.onShowPopover.pipe(oe(() => !1)),
          t.requestItems.pipe(oe((E) => !!E.length))
        ).pipe(
          B((E) => {
            const ue = !a.showPopover && E;
            a.showNotification = ue;
          })
        );
        return Yt(
          l,
          x,
          p,
          A,
          u,
          m,
          O,
          g,
          z,
          U,
          d,
          y,
          v,
          ne
        );
      })
    ).subscribe()
  ), {
    onConnect$: t.onConnect.asObservable(),
    onDisconnect$: t.onDisconnect.asObservable(),
    onUpdateSharedData$: t.onUpdateSharedData.asObservable(),
    onCancelRequestItem$: t.onCancelRequestItem.asObservable(),
    setLoading: (a) => t.loading.next(a),
    setConnecting: (a) => t.connecting.next(a),
    setConnected: (a) => t.connected.next(a),
    setRequestItems: (a) => t.requestItems.next(a),
    setAccounts: (a) => t.accounts.next(a),
    setPersonaData: (a) => t.personaData.next(a),
    setPersonaLabel: (a) => t.personaLabel.next(a),
    destroy: () => {
      s.unsubscribe();
    }
  };
}, Mu = () => ({
  onChange: new ve(),
  items: new Ue([]),
  pendingItems: new Ue(!1)
}), Fu = (e) => {
  const t = e.logger, n = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Set(), i = new Re(), o = e.subjects || Mu(), s = (v) => ({
    type: v,
    status: "pending",
    id: crypto.randomUUID()
  }), a = (v) => {
    const x = s(v);
    return n.set(x.id, x), r.add(x.id), o.onChange.next(), t == null || t.debug("addRequestItem", {
      id: x.id,
      status: x.status
    }), x;
  }, l = (v) => {
    n.has(v) && (n.delete(v), r.delete(v), o.onChange.next(), t == null || t.debug("removeRequestItem", v));
  }, u = () => {
    n.clear(), r.clear(), o.onChange.next(), t == null || t.debug("resetRequestItems");
  }, d = ({
    id: v,
    status: x,
    error: p,
    transactionIntentHash: A
  }) => {
    const O = n.get(v);
    if (O) {
      const g = {
        ...O,
        status: x
      };
      g.status === "fail" && (g.error = p), g.status === "success" && g.type === "sendTransaction" && (g.transactionIntentHash = A), n.set(v, g), o.onChange.next(), t == null || t.debug("updateRequestItemStatus", g);
    }
  }, m = () => [...r], y = () => m().map((v) => ({ id: v, ...n.get(v) })).filter((v) => !!v);
  return i.add(
    o.onChange.pipe(
      oe(() => y()),
      B((v) => o.items.next(v))
    ).subscribe()
  ), {
    add: a,
    remove: l,
    updateStatus: d,
    reset: u,
    destroy: () => {
      i.unsubscribe();
    },
    items$: o.items.asObservable(),
    subjects: o
  };
}, Zu = (e) => {
  const t = e.logger, n = e.requestItemClient || Fu({
    logger: t
  }), r = e.walletSdk, i = e.gatewayClient, o = ({
    oneTimeAccountsWithoutProofOfOwnership: l,
    ongoingAccountsWithoutProofOfOwnership: u,
    ongoingPersonaData: d,
    oneTimePersonaData: m,
    loginWithoutChallenge: y,
    usePersona: v,
    reset: x = { accounts: !1, personaData: !1 }
  }) => {
    const p = { reset: x };
    if (l) {
      const { quantity: A, quantifier: O } = l;
      p.oneTimeAccountsWithoutProofOfOwnership = {
        quantity: A,
        quantifier: O
      };
    }
    return u && (p.ongoingAccountsWithoutProofOfOwnership = u), d && (p.ongoingPersonaData = d), m && (p.oneTimePersonaData = m), y && (p.loginWithoutChallenge = y), v && (p.usePersona = v), e.getState().andThen((A) => {
      const O = p.loginWithoutChallenge && !A.persona ? "loginRequest" : "dataRequest", { id: g } = n.add(O);
      return t == null || t.debug("⬆️walletRequest", p), r.request(p).map((z) => {
        const {
          persona: U,
          ongoingAccounts: ne = [],
          oneTimeAccounts: E = [],
          ongoingPersonaData: ue = [],
          oneTimePersonaData: Te = []
        } = z;
        return t == null || t.debug("⬇️walletSuccessResponse", z), n.updateStatus({ id: g, status: "success" }), {
          accounts: [...ne, ...E],
          personaData: [...ue, ...Te],
          persona: U
        };
      }).mapErr((z) => (n.updateStatus({
        id: g,
        status: "fail",
        error: z.error
      }), t == null || t.debug("⬇️wallet error response", z), z));
    });
  }, s = new Re();
  return s.add(
    n.items$.pipe(
      B((l) => {
        n.subjects.pendingItems.next(
          l.some((u) => u.status === "pending")
        );
      })
    ).subscribe()
  ), {
    request: o,
    sendTransaction: (l) => {
      const { id: u } = n.add("sendTransaction");
      return r.sendTransaction(l).mapErr((d) => (n.updateStatus({
        id: u,
        status: "fail",
        error: d.error
      }), t == null || t.debug("⬇️walletErrorResponse", d), d)).andThen(
        ({ transactionIntentHash: d }) => i.pollTransactionStatus(d).map((m) => ({
          transactionIntentHash: d,
          status: m.status
        }))
      ).map((d) => (n.updateStatus({
        id: u,
        status: "success",
        transactionIntentHash: d.transactionIntentHash
      }), t == null || t.debug("⬇️walletSuccessResponse", d), d));
    },
    pendingRequests$: n.subjects.pendingItems.asObservable(),
    requestItems$: n.items$,
    resetRequestItems: n.reset,
    destroy: () => {
      n.destroy(), r.destroy(), s.unsubscribe();
    }
  };
}, Wu = () => {
  const e = (n) => new Promise((r, i) => {
    try {
      const o = localStorage.getItem(n);
      return r(o || void 0);
    } catch (o) {
      return i(o);
    }
  }), t = (n, r) => new Promise((i, o) => {
    try {
      return localStorage.setItem(n, JSON.stringify(r)), i();
    } catch (s) {
      return o(s);
    }
  });
  return {
    getData: (n) => fe.fromPromise(e(n), Qt).andThen(
      (r) => r ? vo(r) : re(void 0)
    ),
    setData: (n, r) => fe.fromPromise(t(n, r), Qt)
  };
};
var Bu = Object.defineProperty, zu = (e, t, n) => t in e ? Bu(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, Kt = (e, t, n) => (zu(e, typeof t != "symbol" ? t + "" : t, n), n), or = function(e, t) {
  return or = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, r) {
    n.__proto__ = r;
  } || function(n, r) {
    for (var i in r)
      Object.prototype.hasOwnProperty.call(r, i) && (n[i] = r[i]);
  }, or(e, t);
};
function rt(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  or(e, t);
  function n() {
    this.constructor = e;
  }
  e.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n());
}
function Ku(e, t, n, r) {
  function i(o) {
    return o instanceof n ? o : new n(function(s) {
      s(o);
    });
  }
  return new (n || (n = Promise))(function(o, s) {
    function a(d) {
      try {
        u(r.next(d));
      } catch (m) {
        s(m);
      }
    }
    function l(d) {
      try {
        u(r.throw(d));
      } catch (m) {
        s(m);
      }
    }
    function u(d) {
      d.done ? o(d.value) : i(d.value).then(a, l);
    }
    u((r = r.apply(e, t || [])).next());
  });
}
function go(e, t) {
  var n = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, s;
  return s = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function a(u) {
    return function(d) {
      return l([u, d]);
    };
  }
  function l(u) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; n; )
      try {
        if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done)
          return o;
        switch (i = 0, o && (u = [u[0] & 2, o.value]), u[0]) {
          case 0:
          case 1:
            o = u;
            break;
          case 4:
            return n.label++, { value: u[1], done: !1 };
          case 5:
            n.label++, i = u[1], u = [0];
            continue;
          case 7:
            u = n.ops.pop(), n.trys.pop();
            continue;
          default:
            if (o = n.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {
              n = 0;
              continue;
            }
            if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {
              n.label = u[1];
              break;
            }
            if (u[0] === 6 && n.label < o[1]) {
              n.label = o[1], o = u;
              break;
            }
            if (o && n.label < o[2]) {
              n.label = o[2], n.ops.push(u);
              break;
            }
            o[2] && n.ops.pop(), n.trys.pop();
            continue;
        }
        u = t.call(e, n);
      } catch (d) {
        u = [6, d], i = 0;
      } finally {
        r = o = 0;
      }
    if (u[0] & 5)
      throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function Pt(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, n = t && e[t], r = 0;
  if (n)
    return n.call(e);
  if (e && typeof e.length == "number")
    return {
      next: function() {
        return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e };
      }
    };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function Et(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n)
    return e;
  var r = n.call(e), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}
function Ct(e, t, n) {
  if (n || arguments.length === 2)
    for (var r = 0, i = t.length, o; r < i; r++)
      (o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);
  return e.concat(o || Array.prototype.slice.call(t));
}
function Tt(e) {
  return this instanceof Tt ? (this.v = e, this) : new Tt(e);
}
function Hu(e, t, n) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var r = n.apply(e, t || []), i, o = [];
  return i = {}, s("next"), s("throw"), s("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function s(y) {
    r[y] && (i[y] = function(v) {
      return new Promise(function(x, p) {
        o.push([y, v, x, p]) > 1 || a(y, v);
      });
    });
  }
  function a(y, v) {
    try {
      l(r[y](v));
    } catch (x) {
      m(o[0][3], x);
    }
  }
  function l(y) {
    y.value instanceof Tt ? Promise.resolve(y.value.v).then(u, d) : m(o[0][2], y);
  }
  function u(y) {
    a("next", y);
  }
  function d(y) {
    a("throw", y);
  }
  function m(y, v) {
    y(v), o.shift(), o.length && a(o[0][0], o[0][1]);
  }
}
function Vu(e) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var t = e[Symbol.asyncIterator], n;
  return t ? t.call(e) : (e = typeof Pt == "function" ? Pt(e) : e[Symbol.iterator](), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function() {
    return this;
  }, n);
  function r(o) {
    n[o] = e[o] && function(s) {
      return new Promise(function(a, l) {
        s = e[o](s), i(a, l, s.done, s.value);
      });
    };
  }
  function i(o, s, a, l) {
    Promise.resolve(l).then(function(u) {
      o({ value: u, done: a });
    }, s);
  }
}
function J(e) {
  return typeof e == "function";
}
function Ar(e) {
  var t = function(r) {
    Error.call(r), r.stack = new Error().stack;
  }, n = e(t);
  return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n;
}
var Gn = Ar(function(e) {
  return function(t) {
    e(this), this.message = t ? t.length + ` errors occurred during unsubscription:
` + t.map(function(n, r) {
      return r + 1 + ") " + n.toString();
    }).join(`
  `) : "", this.name = "UnsubscriptionError", this.errors = t;
  };
});
function In(e, t) {
  if (e) {
    var n = e.indexOf(t);
    0 <= n && e.splice(n, 1);
  }
}
var qt = function() {
  function e(t) {
    this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null;
  }
  return e.prototype.unsubscribe = function() {
    var t, n, r, i, o;
    if (!this.closed) {
      this.closed = !0;
      var s = this._parentage;
      if (s)
        if (this._parentage = null, Array.isArray(s))
          try {
            for (var a = Pt(s), l = a.next(); !l.done; l = a.next()) {
              var u = l.value;
              u.remove(this);
            }
          } catch (p) {
            t = { error: p };
          } finally {
            try {
              l && !l.done && (n = a.return) && n.call(a);
            } finally {
              if (t)
                throw t.error;
            }
          }
        else
          s.remove(this);
      var d = this.initialTeardown;
      if (J(d))
        try {
          d();
        } catch (p) {
          o = p instanceof Gn ? p.errors : [p];
        }
      var m = this._finalizers;
      if (m) {
        this._finalizers = null;
        try {
          for (var y = Pt(m), v = y.next(); !v.done; v = y.next()) {
            var x = v.value;
            try {
              mi(x);
            } catch (p) {
              o = o ?? [], p instanceof Gn ? o = Ct(Ct([], Et(o)), Et(p.errors)) : o.push(p);
            }
          }
        } catch (p) {
          r = { error: p };
        } finally {
          try {
            v && !v.done && (i = y.return) && i.call(y);
          } finally {
            if (r)
              throw r.error;
          }
        }
      }
      if (o)
        throw new Gn(o);
    }
  }, e.prototype.add = function(t) {
    var n;
    if (t && t !== this)
      if (this.closed)
        mi(t);
      else {
        if (t instanceof e) {
          if (t.closed || t._hasParent(this))
            return;
          t._addParent(this);
        }
        (this._finalizers = (n = this._finalizers) !== null && n !== void 0 ? n : []).push(t);
      }
  }, e.prototype._hasParent = function(t) {
    var n = this._parentage;
    return n === t || Array.isArray(n) && n.includes(t);
  }, e.prototype._addParent = function(t) {
    var n = this._parentage;
    this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [n, t] : t;
  }, e.prototype._removeParent = function(t) {
    var n = this._parentage;
    n === t ? this._parentage = null : Array.isArray(n) && In(n, t);
  }, e.prototype.remove = function(t) {
    var n = this._finalizers;
    n && In(n, t), t instanceof e && t._removeParent(this);
  }, e.EMPTY = function() {
    var t = new e();
    return t.closed = !0, t;
  }(), e;
}(), bo = qt.EMPTY;
function _o(e) {
  return e instanceof qt || e && "closed" in e && J(e.remove) && J(e.add) && J(e.unsubscribe);
}
function mi(e) {
  J(e) ? e() : e.unsubscribe();
}
var wo = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: !1,
  useDeprecatedNextContext: !1
}, Gu = {
  setTimeout: function(e, t) {
    for (var n = [], r = 2; r < arguments.length; r++)
      n[r - 2] = arguments[r];
    return setTimeout.apply(void 0, Ct([e, t], Et(n)));
  },
  clearTimeout: function(e) {
    return clearTimeout(e);
  },
  delegate: void 0
};
function So(e) {
  Gu.setTimeout(function() {
    throw e;
  });
}
function sr() {
}
function _n(e) {
  e();
}
var Ir = function(e) {
  rt(t, e);
  function t(n) {
    var r = e.call(this) || this;
    return r.isStopped = !1, n ? (r.destination = n, _o(n) && n.add(r)) : r.destination = Xu, r;
  }
  return t.create = function(n, r, i) {
    return new kt(n, r, i);
  }, t.prototype.next = function(n) {
    this.isStopped || this._next(n);
  }, t.prototype.error = function(n) {
    this.isStopped || (this.isStopped = !0, this._error(n));
  }, t.prototype.complete = function() {
    this.isStopped || (this.isStopped = !0, this._complete());
  }, t.prototype.unsubscribe = function() {
    this.closed || (this.isStopped = !0, e.prototype.unsubscribe.call(this), this.destination = null);
  }, t.prototype._next = function(n) {
    this.destination.next(n);
  }, t.prototype._error = function(n) {
    try {
      this.destination.error(n);
    } finally {
      this.unsubscribe();
    }
  }, t.prototype._complete = function() {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  }, t;
}(qt), Yu = Function.prototype.bind;
function Yn(e, t) {
  return Yu.call(e, t);
}
var Ju = function() {
  function e(t) {
    this.partialObserver = t;
  }
  return e.prototype.next = function(t) {
    var n = this.partialObserver;
    if (n.next)
      try {
        n.next(t);
      } catch (r) {
        mn(r);
      }
  }, e.prototype.error = function(t) {
    var n = this.partialObserver;
    if (n.error)
      try {
        n.error(t);
      } catch (r) {
        mn(r);
      }
    else
      mn(t);
  }, e.prototype.complete = function() {
    var t = this.partialObserver;
    if (t.complete)
      try {
        t.complete();
      } catch (n) {
        mn(n);
      }
  }, e;
}(), kt = function(e) {
  rt(t, e);
  function t(n, r, i) {
    var o = e.call(this) || this, s;
    if (J(n) || !n)
      s = {
        next: n ?? void 0,
        error: r ?? void 0,
        complete: i ?? void 0
      };
    else {
      var a;
      o && wo.useDeprecatedNextContext ? (a = Object.create(n), a.unsubscribe = function() {
        return o.unsubscribe();
      }, s = {
        next: n.next && Yn(n.next, a),
        error: n.error && Yn(n.error, a),
        complete: n.complete && Yn(n.complete, a)
      }) : s = n;
    }
    return o.destination = new Ju(s), o;
  }
  return t;
}(Ir);
function mn(e) {
  So(e);
}
function Qu(e) {
  throw e;
}
var Xu = {
  closed: !0,
  next: sr,
  error: Qu,
  complete: sr
}, Pr = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}();
function Rn(e) {
  return e;
}
function ec(e) {
  return e.length === 0 ? Rn : e.length === 1 ? e[0] : function(t) {
    return e.reduce(function(n, r) {
      return r(n);
    }, t);
  };
}
var he = function() {
  function e(t) {
    t && (this._subscribe = t);
  }
  return e.prototype.lift = function(t) {
    var n = new e();
    return n.source = this, n.operator = t, n;
  }, e.prototype.subscribe = function(t, n, r) {
    var i = this, o = nc(t) ? t : new kt(t, n, r);
    return _n(function() {
      var s = i, a = s.operator, l = s.source;
      o.add(a ? a.call(o, l) : l ? i._subscribe(o) : i._trySubscribe(o));
    }), o;
  }, e.prototype._trySubscribe = function(t) {
    try {
      return this._subscribe(t);
    } catch (n) {
      t.error(n);
    }
  }, e.prototype.forEach = function(t, n) {
    var r = this;
    return n = yi(n), new n(function(i, o) {
      var s = new kt({
        next: function(a) {
          try {
            t(a);
          } catch (l) {
            o(l), s.unsubscribe();
          }
        },
        error: o,
        complete: i
      });
      r.subscribe(s);
    });
  }, e.prototype._subscribe = function(t) {
    var n;
    return (n = this.source) === null || n === void 0 ? void 0 : n.subscribe(t);
  }, e.prototype[Pr] = function() {
    return this;
  }, e.prototype.pipe = function() {
    for (var t = [], n = 0; n < arguments.length; n++)
      t[n] = arguments[n];
    return ec(t)(this);
  }, e.prototype.toPromise = function(t) {
    var n = this;
    return t = yi(t), new t(function(r, i) {
      var o;
      n.subscribe(function(s) {
        return o = s;
      }, function(s) {
        return i(s);
      }, function() {
        return r(o);
      });
    });
  }, e.create = function(t) {
    return new e(t);
  }, e;
}();
function yi(e) {
  var t;
  return (t = e ?? wo.Promise) !== null && t !== void 0 ? t : Promise;
}
function tc(e) {
  return e && J(e.next) && J(e.error) && J(e.complete);
}
function nc(e) {
  return e && e instanceof Ir || tc(e) && _o(e);
}
function rc(e) {
  return J(e == null ? void 0 : e.lift);
}
function xe(e) {
  return function(t) {
    if (rc(t))
      return t.lift(function(n) {
        try {
          return e(n, this);
        } catch (r) {
          this.error(r);
        }
      });
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
function ke(e, t, n, r, i) {
  return new ic(e, t, n, r, i);
}
var ic = function(e) {
  rt(t, e);
  function t(n, r, i, o, s, a) {
    var l = e.call(this, n) || this;
    return l.onFinalize = s, l.shouldUnsubscribe = a, l._next = r ? function(u) {
      try {
        r(u);
      } catch (d) {
        n.error(d);
      }
    } : e.prototype._next, l._error = o ? function(u) {
      try {
        o(u);
      } catch (d) {
        n.error(d);
      } finally {
        this.unsubscribe();
      }
    } : e.prototype._error, l._complete = i ? function() {
      try {
        i();
      } catch (u) {
        n.error(u);
      } finally {
        this.unsubscribe();
      }
    } : e.prototype._complete, l;
  }
  return t.prototype.unsubscribe = function() {
    var n;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var r = this.closed;
      e.prototype.unsubscribe.call(this), !r && ((n = this.onFinalize) === null || n === void 0 || n.call(this));
    }
  }, t;
}(Ir), oc = Ar(function(e) {
  return function() {
    e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed";
  };
}), Qe = function(e) {
  rt(t, e);
  function t() {
    var n = e.call(this) || this;
    return n.closed = !1, n.currentObservers = null, n.observers = [], n.isStopped = !1, n.hasError = !1, n.thrownError = null, n;
  }
  return t.prototype.lift = function(n) {
    var r = new vi(this, this);
    return r.operator = n, r;
  }, t.prototype._throwIfClosed = function() {
    if (this.closed)
      throw new oc();
  }, t.prototype.next = function(n) {
    var r = this;
    _n(function() {
      var i, o;
      if (r._throwIfClosed(), !r.isStopped) {
        r.currentObservers || (r.currentObservers = Array.from(r.observers));
        try {
          for (var s = Pt(r.currentObservers), a = s.next(); !a.done; a = s.next()) {
            var l = a.value;
            l.next(n);
          }
        } catch (u) {
          i = { error: u };
        } finally {
          try {
            a && !a.done && (o = s.return) && o.call(s);
          } finally {
            if (i)
              throw i.error;
          }
        }
      }
    });
  }, t.prototype.error = function(n) {
    var r = this;
    _n(function() {
      if (r._throwIfClosed(), !r.isStopped) {
        r.hasError = r.isStopped = !0, r.thrownError = n;
        for (var i = r.observers; i.length; )
          i.shift().error(n);
      }
    });
  }, t.prototype.complete = function() {
    var n = this;
    _n(function() {
      if (n._throwIfClosed(), !n.isStopped) {
        n.isStopped = !0;
        for (var r = n.observers; r.length; )
          r.shift().complete();
      }
    });
  }, t.prototype.unsubscribe = function() {
    this.isStopped = this.closed = !0, this.observers = this.currentObservers = null;
  }, Object.defineProperty(t.prototype, "observed", {
    get: function() {
      var n;
      return ((n = this.observers) === null || n === void 0 ? void 0 : n.length) > 0;
    },
    enumerable: !1,
    configurable: !0
  }), t.prototype._trySubscribe = function(n) {
    return this._throwIfClosed(), e.prototype._trySubscribe.call(this, n);
  }, t.prototype._subscribe = function(n) {
    return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n);
  }, t.prototype._innerSubscribe = function(n) {
    var r = this, i = this, o = i.hasError, s = i.isStopped, a = i.observers;
    return o || s ? bo : (this.currentObservers = null, a.push(n), new qt(function() {
      r.currentObservers = null, In(a, n);
    }));
  }, t.prototype._checkFinalizedStatuses = function(n) {
    var r = this, i = r.hasError, o = r.thrownError, s = r.isStopped;
    i ? n.error(o) : s && n.complete();
  }, t.prototype.asObservable = function() {
    var n = new he();
    return n.source = this, n;
  }, t.create = function(n, r) {
    return new vi(n, r);
  }, t;
}(he), vi = function(e) {
  rt(t, e);
  function t(n, r) {
    var i = e.call(this) || this;
    return i.destination = n, i.source = r, i;
  }
  return t.prototype.next = function(n) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.next) === null || i === void 0 || i.call(r, n);
  }, t.prototype.error = function(n) {
    var r, i;
    (i = (r = this.destination) === null || r === void 0 ? void 0 : r.error) === null || i === void 0 || i.call(r, n);
  }, t.prototype.complete = function() {
    var n, r;
    (r = (n = this.destination) === null || n === void 0 ? void 0 : n.complete) === null || r === void 0 || r.call(n);
  }, t.prototype._subscribe = function(n) {
    var r, i;
    return (i = (r = this.source) === null || r === void 0 ? void 0 : r.subscribe(n)) !== null && i !== void 0 ? i : bo;
  }, t;
}(Qe), sc = {
  now: function() {
    return Date.now();
  },
  delegate: void 0
}, ac = function(e) {
  rt(t, e);
  function t(n, r) {
    return e.call(this) || this;
  }
  return t.prototype.schedule = function(n, r) {
    return this;
  }, t;
}(qt), ar = {
  setInterval: function(e, t) {
    for (var n = [], r = 2; r < arguments.length; r++)
      n[r - 2] = arguments[r];
    var i = ar.delegate;
    return i != null && i.setInterval ? i.setInterval.apply(i, Ct([e, t], Et(n))) : setInterval.apply(void 0, Ct([e, t], Et(n)));
  },
  clearInterval: function(e) {
    return clearInterval(e);
  },
  delegate: void 0
}, uc = function(e) {
  rt(t, e);
  function t(n, r) {
    var i = e.call(this, n, r) || this;
    return i.scheduler = n, i.work = r, i.pending = !1, i;
  }
  return t.prototype.schedule = function(n, r) {
    var i;
    if (r === void 0 && (r = 0), this.closed)
      return this;
    this.state = n;
    var o = this.id, s = this.scheduler;
    return o != null && (this.id = this.recycleAsyncId(s, o, r)), this.pending = !0, this.delay = r, this.id = (i = this.id) !== null && i !== void 0 ? i : this.requestAsyncId(s, this.id, r), this;
  }, t.prototype.requestAsyncId = function(n, r, i) {
    return i === void 0 && (i = 0), ar.setInterval(n.flush.bind(n, this), i);
  }, t.prototype.recycleAsyncId = function(n, r, i) {
    if (i === void 0 && (i = 0), i != null && this.delay === i && this.pending === !1)
      return r;
    r != null && ar.clearInterval(r);
  }, t.prototype.execute = function(n, r) {
    if (this.closed)
      return new Error("executing a cancelled action");
    this.pending = !1;
    var i = this._execute(n, r);
    if (i)
      return i;
    this.pending === !1 && this.id != null && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
  }, t.prototype._execute = function(n, r) {
    var i = !1, o;
    try {
      this.work(n);
    } catch (s) {
      i = !0, o = s || new Error("Scheduled action threw falsy error");
    }
    if (i)
      return this.unsubscribe(), o;
  }, t.prototype.unsubscribe = function() {
    if (!this.closed) {
      var n = this, r = n.id, i = n.scheduler, o = i.actions;
      this.work = this.state = this.scheduler = null, this.pending = !1, In(o, this), r != null && (this.id = this.recycleAsyncId(i, r, null)), this.delay = null, e.prototype.unsubscribe.call(this);
    }
  }, t;
}(ac), gi = function() {
  function e(t, n) {
    n === void 0 && (n = e.now), this.schedulerActionCtor = t, this.now = n;
  }
  return e.prototype.schedule = function(t, n, r) {
    return n === void 0 && (n = 0), new this.schedulerActionCtor(this, t).schedule(r, n);
  }, e.now = sc.now, e;
}(), cc = function(e) {
  rt(t, e);
  function t(n, r) {
    r === void 0 && (r = gi.now);
    var i = e.call(this, n, r) || this;
    return i.actions = [], i._active = !1, i;
  }
  return t.prototype.flush = function(n) {
    var r = this.actions;
    if (this._active) {
      r.push(n);
      return;
    }
    var i;
    this._active = !0;
    do
      if (i = n.execute(n.state, n.delay))
        break;
    while (n = r.shift());
    if (this._active = !1, i) {
      for (; n = r.shift(); )
        n.unsubscribe();
      throw i;
    }
  }, t;
}(gi), lc = new cc(uc), fc = lc, xo = new he(function(e) {
  return e.complete();
});
function To(e) {
  return e && J(e.schedule);
}
function Oo(e) {
  return e[e.length - 1];
}
function Ao(e) {
  return To(Oo(e)) ? e.pop() : void 0;
}
function dc(e, t) {
  return typeof Oo(e) == "number" ? e.pop() : t;
}
var Io = function(e) {
  return e && typeof e.length == "number" && typeof e != "function";
};
function Po(e) {
  return J(e == null ? void 0 : e.then);
}
function Eo(e) {
  return J(e[Pr]);
}
function Co(e) {
  return Symbol.asyncIterator && J(e == null ? void 0 : e[Symbol.asyncIterator]);
}
function ko(e) {
  return new TypeError("You provided " + (e !== null && typeof e == "object" ? "an invalid object" : "'" + e + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
function hc() {
  return typeof Symbol != "function" || !Symbol.iterator ? "@@iterator" : Symbol.iterator;
}
var $o = hc();
function Ro(e) {
  return J(e == null ? void 0 : e[$o]);
}
function Do(e) {
  return Hu(this, arguments, function() {
    var t, n, r, i;
    return go(this, function(o) {
      switch (o.label) {
        case 0:
          t = e.getReader(), o.label = 1;
        case 1:
          o.trys.push([1, , 9, 10]), o.label = 2;
        case 2:
          return [4, Tt(t.read())];
        case 3:
          return n = o.sent(), r = n.value, i = n.done, i ? [4, Tt(void 0)] : [3, 5];
        case 4:
          return [2, o.sent()];
        case 5:
          return [4, Tt(r)];
        case 6:
          return [4, o.sent()];
        case 7:
          return o.sent(), [3, 2];
        case 8:
          return [3, 10];
        case 9:
          return t.releaseLock(), [7];
        case 10:
          return [2];
      }
    });
  });
}
function jo(e) {
  return J(e == null ? void 0 : e.getReader);
}
function it(e) {
  if (e instanceof he)
    return e;
  if (e != null) {
    if (Eo(e))
      return pc(e);
    if (Io(e))
      return mc(e);
    if (Po(e))
      return yc(e);
    if (Co(e))
      return No(e);
    if (Ro(e))
      return vc(e);
    if (jo(e))
      return gc(e);
  }
  throw ko(e);
}
function pc(e) {
  return new he(function(t) {
    var n = e[Pr]();
    if (J(n.subscribe))
      return n.subscribe(t);
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
function mc(e) {
  return new he(function(t) {
    for (var n = 0; n < e.length && !t.closed; n++)
      t.next(e[n]);
    t.complete();
  });
}
function yc(e) {
  return new he(function(t) {
    e.then(function(n) {
      t.closed || (t.next(n), t.complete());
    }, function(n) {
      return t.error(n);
    }).then(null, So);
  });
}
function vc(e) {
  return new he(function(t) {
    var n, r;
    try {
      for (var i = Pt(e), o = i.next(); !o.done; o = i.next()) {
        var s = o.value;
        if (t.next(s), t.closed)
          return;
      }
    } catch (a) {
      n = { error: a };
    } finally {
      try {
        o && !o.done && (r = i.return) && r.call(i);
      } finally {
        if (n)
          throw n.error;
      }
    }
    t.complete();
  });
}
function No(e) {
  return new he(function(t) {
    bc(e, t).catch(function(n) {
      return t.error(n);
    });
  });
}
function gc(e) {
  return No(Do(e));
}
function bc(e, t) {
  var n, r, i, o;
  return Ku(this, void 0, void 0, function() {
    var s, a;
    return go(this, function(l) {
      switch (l.label) {
        case 0:
          l.trys.push([0, 5, 6, 11]), n = Vu(e), l.label = 1;
        case 1:
          return [4, n.next()];
        case 2:
          if (r = l.sent(), !!r.done)
            return [3, 4];
          if (s = r.value, t.next(s), t.closed)
            return [2];
          l.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          return a = l.sent(), i = { error: a }, [3, 11];
        case 6:
          return l.trys.push([6, , 9, 10]), r && !r.done && (o = n.return) ? [4, o.call(n)] : [3, 8];
        case 7:
          l.sent(), l.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (i)
            throw i.error;
          return [7];
        case 10:
          return [7];
        case 11:
          return t.complete(), [2];
      }
    });
  });
}
function et(e, t, n, r, i) {
  r === void 0 && (r = 0), i === void 0 && (i = !1);
  var o = t.schedule(function() {
    n(), i ? e.add(this.schedule(null, r)) : this.unsubscribe();
  }, r);
  if (e.add(o), !i)
    return o;
}
function qo(e, t) {
  return t === void 0 && (t = 0), xe(function(n, r) {
    n.subscribe(ke(r, function(i) {
      return et(r, e, function() {
        return r.next(i);
      }, t);
    }, function() {
      return et(r, e, function() {
        return r.complete();
      }, t);
    }, function(i) {
      return et(r, e, function() {
        return r.error(i);
      }, t);
    }));
  });
}
function Lo(e, t) {
  return t === void 0 && (t = 0), xe(function(n, r) {
    r.add(e.schedule(function() {
      return n.subscribe(r);
    }, t));
  });
}
function _c(e, t) {
  return it(e).pipe(Lo(t), qo(t));
}
function wc(e, t) {
  return it(e).pipe(Lo(t), qo(t));
}
function Sc(e, t) {
  return new he(function(n) {
    var r = 0;
    return t.schedule(function() {
      r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule());
    });
  });
}
function xc(e, t) {
  return new he(function(n) {
    var r;
    return et(n, t, function() {
      r = e[$o](), et(n, t, function() {
        var i, o, s;
        try {
          i = r.next(), o = i.value, s = i.done;
        } catch (a) {
          n.error(a);
          return;
        }
        s ? n.complete() : n.next(o);
      }, 0, !0);
    }), function() {
      return J(r == null ? void 0 : r.return) && r.return();
    };
  });
}
function Uo(e, t) {
  if (!e)
    throw new Error("Iterable cannot be null");
  return new he(function(n) {
    et(n, t, function() {
      var r = e[Symbol.asyncIterator]();
      et(n, t, function() {
        r.next().then(function(i) {
          i.done ? n.complete() : n.next(i.value);
        });
      }, 0, !0);
    });
  });
}
function Tc(e, t) {
  return Uo(Do(e), t);
}
function Oc(e, t) {
  if (e != null) {
    if (Eo(e))
      return _c(e, t);
    if (Io(e))
      return Sc(e, t);
    if (Po(e))
      return wc(e, t);
    if (Co(e))
      return Uo(e, t);
    if (Ro(e))
      return xc(e, t);
    if (jo(e))
      return Tc(e, t);
  }
  throw ko(e);
}
function Mo(e, t) {
  return t ? Oc(e, t) : it(e);
}
function Ac() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var n = Ao(e);
  return Mo(e, n);
}
var Er = Ar(function(e) {
  return function() {
    e(this), this.name = "EmptyError", this.message = "no elements in sequence";
  };
});
function Ic(e, t) {
  var n = typeof t == "object";
  return new Promise(function(r, i) {
    var o = new kt({
      next: function(s) {
        r(s), o.unsubscribe();
      },
      error: i,
      complete: function() {
        n ? r(t.defaultValue) : i(new Er());
      }
    });
    e.subscribe(o);
  });
}
function Pc(e) {
  return e instanceof Date && !isNaN(e);
}
function Vt(e, t) {
  return xe(function(n, r) {
    var i = 0;
    n.subscribe(ke(r, function(o) {
      r.next(e.call(t, o, i++));
    }));
  });
}
function Ec(e, t, n, r, i, o, s, a) {
  var l = [], u = 0, d = 0, m = !1, y = function() {
    m && !l.length && !u && t.complete();
  }, v = function(p) {
    return u < r ? x(p) : l.push(p);
  }, x = function(p) {
    o && t.next(p), u++;
    var A = !1;
    it(n(p, d++)).subscribe(ke(t, function(O) {
      i == null || i(O), o ? v(O) : t.next(O);
    }, function() {
      A = !0;
    }, void 0, function() {
      if (A)
        try {
          u--;
          for (var O = function() {
            var g = l.shift();
            s ? et(t, s, function() {
              return x(g);
            }) : x(g);
          }; l.length && u < r; )
            O();
          y();
        } catch (g) {
          t.error(g);
        }
    }));
  };
  return e.subscribe(ke(t, v, function() {
    m = !0, y();
  })), function() {
    a == null || a();
  };
}
function Fo(e, t, n) {
  return n === void 0 && (n = 1 / 0), J(t) ? Fo(function(r, i) {
    return Vt(function(o, s) {
      return t(r, o, i, s);
    })(it(e(r, i)));
  }, n) : (typeof t == "number" && (n = t), xe(function(r, i) {
    return Ec(r, i, e, n);
  }));
}
function Cc(e) {
  return e === void 0 && (e = 1 / 0), Fo(Rn, e);
}
function kc(e, t, n) {
  e === void 0 && (e = 0), n === void 0 && (n = fc);
  var r = -1;
  return t != null && (To(t) ? n = t : r = t), new he(function(i) {
    var o = Pc(e) ? +e - n.now() : e;
    o < 0 && (o = 0);
    var s = 0;
    return n.schedule(function() {
      i.closed || (i.next(s++), 0 <= r ? this.schedule(void 0, r) : i.complete());
    }, o);
  });
}
function Jn() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var n = Ao(e), r = dc(e, 1 / 0), i = e;
  return i.length ? i.length === 1 ? it(i[0]) : Cc(r)(Mo(i, n)) : xo;
}
function Gt(e, t) {
  return xe(function(n, r) {
    var i = 0;
    n.subscribe(ke(r, function(o) {
      return e.call(t, o, i++) && r.next(o);
    }));
  });
}
function $c(e) {
  return xe(function(t, n) {
    var r = !1;
    t.subscribe(ke(n, function(i) {
      r = !0, n.next(i);
    }, function() {
      r || n.next(e), n.complete();
    }));
  });
}
function Rc(e) {
  return e <= 0 ? function() {
    return xo;
  } : xe(function(t, n) {
    var r = 0;
    t.subscribe(ke(n, function(i) {
      ++r <= e && (n.next(i), e <= r && n.complete());
    }));
  });
}
function Dc(e) {
  return e === void 0 && (e = jc), xe(function(t, n) {
    var r = !1;
    t.subscribe(ke(n, function(i) {
      r = !0, n.next(i);
    }, function() {
      return r ? n.complete() : n.error(e());
    }));
  });
}
function jc() {
  return new Er();
}
function bi(e, t) {
  var n = arguments.length >= 2;
  return function(r) {
    return r.pipe(e ? Gt(function(i, o) {
      return e(i, o, r);
    }) : Rn, Rc(1), n ? $c(t) : Dc(function() {
      return new Er();
    }));
  };
}
function Zo(e) {
  e === void 0 && (e = {});
  var t = e.connector, n = t === void 0 ? function() {
    return new Qe();
  } : t, r = e.resetOnError, i = r === void 0 ? !0 : r, o = e.resetOnComplete, s = o === void 0 ? !0 : o, a = e.resetOnRefCountZero, l = a === void 0 ? !0 : a;
  return function(u) {
    var d, m, y, v = 0, x = !1, p = !1, A = function() {
      m == null || m.unsubscribe(), m = void 0;
    }, O = function() {
      A(), d = y = void 0, x = p = !1;
    }, g = function() {
      var z = d;
      O(), z == null || z.unsubscribe();
    };
    return xe(function(z, U) {
      v++, !p && !x && A();
      var ne = y = y ?? n();
      U.add(function() {
        v--, v === 0 && !p && !x && (m = Qn(g, l));
      }), ne.subscribe(U), !d && v > 0 && (d = new kt({
        next: function(E) {
          return ne.next(E);
        },
        error: function(E) {
          p = !0, A(), m = Qn(O, i, E), ne.error(E);
        },
        complete: function() {
          x = !0, A(), m = Qn(O, s), ne.complete();
        }
      }), it(z).subscribe(d));
    })(u);
  };
}
function Qn(e, t) {
  for (var n = [], r = 2; r < arguments.length; r++)
    n[r - 2] = arguments[r];
  if (t === !0) {
    e();
    return;
  }
  if (t !== !1) {
    var i = new kt({
      next: function() {
        i.unsubscribe(), e();
      }
    });
    return t.apply(void 0, Ct([], Et(n))).subscribe(i);
  }
}
function Nc(e) {
  return xe(function(t, n) {
    it(e).subscribe(ke(n, function() {
      return n.complete();
    }, sr)), !n.closed && t.subscribe(n);
  });
}
function Ot(e, t, n) {
  var r = J(e) || t || n ? { next: e, error: t, complete: n } : e;
  return r ? xe(function(i, o) {
    var s;
    (s = r.subscribe) === null || s === void 0 || s.call(r);
    var a = !0;
    i.subscribe(ke(o, function(l) {
      var u;
      (u = r.next) === null || u === void 0 || u.call(r, l), o.next(l);
    }, function() {
      var l;
      a = !1, (l = r.complete) === null || l === void 0 || l.call(r), o.complete();
    }, function(l) {
      var u;
      a = !1, (u = r.error) === null || u === void 0 || u.call(r, l), o.error(l);
    }, function() {
      var l, u;
      a && ((l = r.unsubscribe) === null || l === void 0 || l.call(r)), (u = r.finalize) === null || u === void 0 || u.call(r);
    }));
  }) : Rn;
}
const qc = () => ({
  outgoingMessageSubject: new Qe(),
  incomingMessageSubject: new Qe(),
  responseSubject: new Qe(),
  messageLifeCycleEventSubject: new Qe(),
  dispatchEventSubject: new Qe()
}), ur = {
  outgoingMessage: "radix#chromeExtension#send",
  incomingMessage: "radix#chromeExtension#receive"
}, Lc = (e) => e.outgoingMessageSubject.pipe(
  Vt((t) => ({
    event: ur.outgoingMessage,
    payload: t
  })),
  Ot((t) => {
    e.dispatchEventSubject.next(t);
  }),
  Zo()
);
var Ht = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Wo = { exports: {} };
(function(e) {
  (function(t, n) {
    e.exports ? e.exports = n() : t.log = n();
  })(Ht, function() {
    var t = function() {
    }, n = "undefined", r = typeof window !== n && typeof window.navigator !== n && /Trident\/|MSIE /.test(window.navigator.userAgent), i = [
      "trace",
      "debug",
      "info",
      "warn",
      "error"
    ];
    function o(p, A) {
      var O = p[A];
      if (typeof O.bind == "function")
        return O.bind(p);
      try {
        return Function.prototype.bind.call(O, p);
      } catch {
        return function() {
          return Function.prototype.apply.apply(O, [p, arguments]);
        };
      }
    }
    function s() {
      console.log && (console.log.apply ? console.log.apply(console, arguments) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace();
    }
    function a(p) {
      return p === "debug" && (p = "log"), typeof console === n ? !1 : p === "trace" && r ? s : console[p] !== void 0 ? o(console, p) : console.log !== void 0 ? o(console, "log") : t;
    }
    function l(p, A) {
      for (var O = 0; O < i.length; O++) {
        var g = i[O];
        this[g] = O < p ? t : this.methodFactory(g, p, A);
      }
      this.log = this.debug;
    }
    function u(p, A, O) {
      return function() {
        typeof console !== n && (l.call(this, A, O), this[p].apply(this, arguments));
      };
    }
    function d(p, A, O) {
      return a(p) || u.apply(this, arguments);
    }
    function m(p, A, O) {
      var g = this, z;
      A = A ?? "WARN";
      var U = "loglevel";
      typeof p == "string" ? U += ":" + p : typeof p == "symbol" && (U = void 0);
      function ne($) {
        var ce = (i[$] || "silent").toUpperCase();
        if (!(typeof window === n || !U)) {
          try {
            window.localStorage[U] = ce;
            return;
          } catch {
          }
          try {
            window.document.cookie = encodeURIComponent(U) + "=" + ce + ";";
          } catch {
          }
        }
      }
      function E() {
        var $;
        if (!(typeof window === n || !U)) {
          try {
            $ = window.localStorage[U];
          } catch {
          }
          if (typeof $ === n)
            try {
              var ce = window.document.cookie, He = ce.indexOf(
                encodeURIComponent(U) + "="
              );
              He !== -1 && ($ = /^([^;]+)/.exec(ce.slice(He))[1]);
            } catch {
            }
          return g.levels[$] === void 0 && ($ = void 0), $;
        }
      }
      function ue() {
        if (!(typeof window === n || !U)) {
          try {
            window.localStorage.removeItem(U);
            return;
          } catch {
          }
          try {
            window.document.cookie = encodeURIComponent(U) + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC";
          } catch {
          }
        }
      }
      g.name = p, g.levels = {
        TRACE: 0,
        DEBUG: 1,
        INFO: 2,
        WARN: 3,
        ERROR: 4,
        SILENT: 5
      }, g.methodFactory = O || d, g.getLevel = function() {
        return z;
      }, g.setLevel = function($, ce) {
        if (typeof $ == "string" && g.levels[$.toUpperCase()] !== void 0 && ($ = g.levels[$.toUpperCase()]), typeof $ == "number" && $ >= 0 && $ <= g.levels.SILENT) {
          if (z = $, ce !== !1 && ne($), l.call(g, $, p), typeof console === n && $ < g.levels.SILENT)
            return "No console available for logging";
        } else
          throw "log.setLevel() called with invalid level: " + $;
      }, g.setDefaultLevel = function($) {
        A = $, E() || g.setLevel($, !1);
      }, g.resetLevel = function() {
        g.setLevel(A, !1), ue();
      }, g.enableAll = function($) {
        g.setLevel(g.levels.TRACE, $);
      }, g.disableAll = function($) {
        g.setLevel(g.levels.SILENT, $);
      };
      var Te = E();
      Te == null && (Te = A), g.setLevel(Te, !1);
    }
    var y = new m(), v = {};
    y.getLogger = function(p) {
      if (typeof p != "symbol" && typeof p != "string" || p === "")
        throw new TypeError("You must supply a name when creating a logger.");
      var A = v[p];
      return A || (A = v[p] = new m(
        p,
        y.getLevel(),
        y.methodFactory
      )), A;
    };
    var x = typeof window !== n ? window.log : void 0;
    return y.noConflict = function() {
      return typeof window !== n && window.log === y && (window.log = x), y;
    }, y.getLoggers = function() {
      return v;
    }, y.default = y, y;
  });
})(Wo);
const Se = Wo.exports, Uc = (e) => e.incomingMessageSubject.pipe(
  Ot((t) => {
    "eventType" in t ? (Se.debug(
      `🔵💬⬇️ message lifecycle event
${JSON.stringify(t, null, 2)}`
    ), e.messageLifeCycleEventSubject.next(t)) : (Se.debug(`🔵⬇️ wallet response
${JSON.stringify(t, null, 2)}`), e.responseSubject.next(t));
  })
), Mc = (e) => e.dispatchEventSubject.pipe(
  Ot(({ event: t, payload: n }) => {
    Se.debug(`🔵⬆️ wallet request
${JSON.stringify(n, null, 2)}`), window.dispatchEvent(
      new CustomEvent(t, {
        detail: n
      })
    );
  })
), Fc = (e) => {
  const t = new qt();
  return t.add(Mc(e).subscribe()), t.add(Lc(e).subscribe()), t.add(Uc(e).subscribe()), t;
}, Zc = (e) => {
  const t = (n) => {
    const r = n.detail;
    e.incomingMessageSubject.next(r);
  };
  return addEventListener(ur.incomingMessage, t), { destroy: () => {
    removeEventListener(ur.incomingMessage, t);
  } };
}, Wc = (e = qc()) => {
  const t = Fc(e), n = Zc(e);
  return { destroy: () => {
    n.destroy(), t.unsubscribe();
  }, subjects: e };
};
function Xn(e, t, n, r) {
  function i(o) {
    return o instanceof n ? o : new n(function(s) {
      s(o);
    });
  }
  return new (n || (n = Promise))(function(o, s) {
    function a(d) {
      try {
        u(r.next(d));
      } catch (m) {
        s(m);
      }
    }
    function l(d) {
      try {
        u(r.throw(d));
      } catch (m) {
        s(m);
      }
    }
    function u(d) {
      d.done ? o(d.value) : i(d.value).then(a, l);
    }
    u((r = r.apply(e, t || [])).next());
  });
}
function er(e, t) {
  var n = { label: 0, sent: function() {
    if (o[0] & 1)
      throw o[1];
    return o[1];
  }, trys: [], ops: [] }, r, i, o, s;
  return s = { next: a(0), throw: a(1), return: a(2) }, typeof Symbol == "function" && (s[Symbol.iterator] = function() {
    return this;
  }), s;
  function a(u) {
    return function(d) {
      return l([u, d]);
    };
  }
  function l(u) {
    if (r)
      throw new TypeError("Generator is already executing.");
    for (; n; )
      try {
        if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done)
          return o;
        switch (i = 0, o && (u = [u[0] & 2, o.value]), u[0]) {
          case 0:
          case 1:
            o = u;
            break;
          case 4:
            return n.label++, { value: u[1], done: !1 };
          case 5:
            n.label++, i = u[1], u = [0];
            continue;
          case 7:
            u = n.ops.pop(), n.trys.pop();
            continue;
          default:
            if (o = n.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {
              n = 0;
              continue;
            }
            if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {
              n.label = u[1];
              break;
            }
            if (u[0] === 6 && n.label < o[1]) {
              n.label = o[1], o = u;
              break;
            }
            if (o && n.label < o[2]) {
              n.label = o[2], n.ops.push(u);
              break;
            }
            o[2] && n.ops.pop(), n.trys.pop();
            continue;
        }
        u = t.call(e, n);
      } catch (d) {
        u = [6, d], i = 0;
      } finally {
        r = o = 0;
      }
    if (u[0] & 5)
      throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function Pn(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n)
    return e;
  var r = n.call(e), i, o = [], s;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; )
      o.push(i.value);
  } catch (a) {
    s = { error: a };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (s)
        throw s.error;
    }
  }
  return o;
}
function mt(e, t, n) {
  if (n || arguments.length === 2)
    for (var r = 0, i = t.length, o; r < i; r++)
      (o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);
  return e.concat(o || Array.prototype.slice.call(t));
}
var Bc = {
  withStackTrace: !1
}, Bo = function(e, t, n) {
  n === void 0 && (n = Bc);
  var r = t.isOk() ? { type: "Ok", value: t.value } : { type: "Err", value: t.error }, i = n.withStackTrace ? new Error().stack : void 0;
  return {
    data: r,
    message: e,
    stack: i
  };
}, Ke = function() {
  function e(t) {
    this._promise = t;
  }
  return e.fromSafePromise = function(t) {
    var n = t.then(function(r) {
      return new lt(r);
    });
    return new e(n);
  }, e.fromPromise = function(t, n) {
    var r = t.then(function(i) {
      return new lt(i);
    }).catch(function(i) {
      return new dt(n(i));
    });
    return new e(r);
  }, e.combine = function(t) {
    return Kc(t);
  }, e.combineWithAllErrors = function(t) {
    return Hc(t);
  }, e.prototype.map = function(t) {
    var n = this;
    return new e(this._promise.then(function(r) {
      return Xn(n, void 0, void 0, function() {
        var i;
        return er(this, function(o) {
          switch (o.label) {
            case 0:
              return r.isErr() ? [2, new dt(r.error)] : (i = lt.bind, [4, t(r.value)]);
            case 1:
              return [2, new (i.apply(lt, [void 0, o.sent()]))()];
          }
        });
      });
    }));
  }, e.prototype.mapErr = function(t) {
    var n = this;
    return new e(this._promise.then(function(r) {
      return Xn(n, void 0, void 0, function() {
        var i;
        return er(this, function(o) {
          switch (o.label) {
            case 0:
              return r.isOk() ? [2, new lt(r.value)] : (i = dt.bind, [4, t(r.error)]);
            case 1:
              return [2, new (i.apply(dt, [void 0, o.sent()]))()];
          }
        });
      });
    }));
  }, e.prototype.andThen = function(t) {
    return new e(this._promise.then(function(n) {
      if (n.isErr())
        return new dt(n.error);
      var r = t(n.value);
      return r instanceof e ? r._promise : r;
    }));
  }, e.prototype.orElse = function(t) {
    var n = this;
    return new e(this._promise.then(function(r) {
      return Xn(n, void 0, void 0, function() {
        return er(this, function(i) {
          return r.isErr() ? [2, t(r.error)] : [2, new lt(r.value)];
        });
      });
    }));
  }, e.prototype.match = function(t, n) {
    return this._promise.then(function(r) {
      return r.match(t, n);
    });
  }, e.prototype.unwrapOr = function(t) {
    return this._promise.then(function(n) {
      return n.unwrapOr(t);
    });
  }, e.prototype.then = function(t, n) {
    return this._promise.then(t, n);
  }, e;
}(), _i = function(e) {
  return new Ke(Promise.resolve(new dt(e)));
};
Ke.fromPromise;
Ke.fromSafePromise;
var zc = function(e) {
  return function(t) {
    return mt(mt([], Pn(t), !1), [e], !1);
  };
}, zo = function(e) {
  return e.reduce(function(t, n) {
    return t.isOk() ? n.isErr() ? Ee(n.error) : t.map(zc(n.value)) : t;
  }, Pe([]));
}, Kc = function(e) {
  return Ke.fromSafePromise(Promise.all(e)).andThen(zo);
}, Ko = function(e) {
  return e.reduce(function(t, n) {
    return n.isErr() ? t.isErr() ? Ee(mt(mt([], Pn(t.error), !1), [n.error], !1)) : Ee([n.error]) : t.isErr() ? t : Pe(mt(mt([], Pn(t.value), !1), [n.value], !1));
  }, Pe([]));
}, Hc = function(e) {
  return Ke.fromSafePromise(Promise.all(e)).andThen(Ko);
}, cr;
(function(e) {
  function t(i, o) {
    return function() {
      for (var s = [], a = 0; a < arguments.length; a++)
        s[a] = arguments[a];
      try {
        var l = i.apply(void 0, mt([], Pn(s), !1));
        return Pe(l);
      } catch (u) {
        return Ee(o ? o(u) : u);
      }
    };
  }
  e.fromThrowable = t;
  function n(i) {
    return zo(i);
  }
  e.combine = n;
  function r(i) {
    return Ko(i);
  }
  e.combineWithAllErrors = r;
})(cr || (cr = {}));
var Pe = function(e) {
  return new lt(e);
}, Ee = function(e) {
  return new dt(e);
}, lt = function() {
  function e(t) {
    this.value = t;
  }
  return e.prototype.isOk = function() {
    return !0;
  }, e.prototype.isErr = function() {
    return !this.isOk();
  }, e.prototype.map = function(t) {
    return Pe(t(this.value));
  }, e.prototype.mapErr = function(t) {
    return Pe(this.value);
  }, e.prototype.andThen = function(t) {
    return t(this.value);
  }, e.prototype.orElse = function(t) {
    return Pe(this.value);
  }, e.prototype.asyncAndThen = function(t) {
    return t(this.value);
  }, e.prototype.asyncMap = function(t) {
    return Ke.fromSafePromise(t(this.value));
  }, e.prototype.unwrapOr = function(t) {
    return this.value;
  }, e.prototype.match = function(t, n) {
    return t(this.value);
  }, e.prototype._unsafeUnwrap = function(t) {
    return this.value;
  }, e.prototype._unsafeUnwrapErr = function(t) {
    throw Bo("Called `_unsafeUnwrapErr` on an Ok", this, t);
  }, e;
}(), dt = function() {
  function e(t) {
    this.error = t;
  }
  return e.prototype.isOk = function() {
    return !1;
  }, e.prototype.isErr = function() {
    return !this.isOk();
  }, e.prototype.map = function(t) {
    return Ee(this.error);
  }, e.prototype.mapErr = function(t) {
    return Ee(t(this.error));
  }, e.prototype.andThen = function(t) {
    return Ee(this.error);
  }, e.prototype.orElse = function(t) {
    return t(this.error);
  }, e.prototype.asyncAndThen = function(t) {
    return _i(this.error);
  }, e.prototype.asyncMap = function(t) {
    return _i(this.error);
  }, e.prototype.unwrapOr = function(t) {
    return t;
  }, e.prototype.match = function(t, n) {
    return n(this.error);
  }, e.prototype._unsafeUnwrap = function(t) {
    throw Bo("Called `_unsafeUnwrap` on an Err", this, t);
  }, e.prototype._unsafeUnwrapErr = function(t) {
    return this.error;
  }, e;
}();
cr.fromThrowable;
const Ae = {
  extensionDetectionTime: 100,
  defaultNumberOfAccountsQuantity: 1,
  defaultNumberOfAccountsQuantifier: "atLeast",
  logLevel: "info"
}, Vc = (e) => e, yt = {
  rejectedByUser: "rejectedByUser",
  missingExtension: "missingExtension",
  canceledByUser: "canceledByUser",
  walletRequestValidation: "walletRequestValidation",
  walletResponseValidation: "walletResponseValidation",
  wrongNetwork: "wrongNetwork",
  failedToPrepareTransaction: "failedToPrepareTransaction",
  failedToCompileTransaction: "failedToCompileTransaction",
  failedToSignTransaction: "failedToSignTransaction",
  failedToSubmitTransaction: "failedToSubmitTransaction",
  failedToPollSubmittedTransaction: "failedToPollSubmittedTransaction",
  submittedTransactionWasDuplicate: "submittedTransactionWasDuplicate",
  submittedTransactionHasFailedTransactionStatus: "submittedTransactionHasFailedTransactionStatus",
  submittedTransactionHasRejectedTransactionStatus: "submittedTransactionHasRejectedTransactionStatus",
  failedToFindAccountWithEnoughFundsToLockFee: "failedToFindAccountWithEnoughFundsToLockFee",
  wrongAccountType: "wrongAccountType",
  unknownWebsite: "unknownWebsite",
  radixJsonNotFound: "radixJsonNotFound",
  unknownDappDefinitionAddress: "unknownDappDefinitionAddress",
  invalidPersona: "invalidPersona"
}, Gc = (/* @__PURE__ */ new Map()).set(yt.missingExtension, "extension could not be found").set(yt.rejectedByUser, "user rejected request").set(yt.canceledByUser, "user has canceled the request"), $t = (e, t, n) => ({
  error: e,
  interactionId: t,
  message: n || Gc.get(e) || ""
}), Yc = (e) => Ke.fromPromise(Ic(e), Vc).andThen(
  (t) => t
), Jc = (e, t) => e.messageLifeCycleEventSubject.pipe(
  Gt((n) => n.interactionId === t)
), Qc = (e) => (t) => (n) => {
  const r = new Qe();
  t.requestControl && t.requestControl({
    cancelRequest: () => (Se.debug(
      `🔵⬆️❌ wallet request canceled
${JSON.stringify(
        n,
        null,
        2
      )}`
    ), r.next())
  });
  const i = r.asObservable().pipe(
    Vt(
      () => Ee($t(yt.canceledByUser, n.interactionId))
    )
  ), o = e.responseSubject.pipe(
    Gt((v) => v.interactionId === n.interactionId),
    Vt(
      (v) => "items" in v ? Pe(v) : Ee(v)
    )
  ), s = Jn(
    o,
    i
  ).pipe(bi()), a = Jc(e, n.interactionId).pipe(
    Ot((v) => {
      t.eventCallback && t.eventCallback(v.eventType);
    }),
    Nc(o),
    Zo()
  ), l = a.subscribe(), u = kc(Ae.extensionDetectionTime).pipe(
    Vt(
      () => Ee($t(yt.missingExtension, n.interactionId))
    )
  ), d = Jn(
    u,
    a
  ).pipe(
    bi(),
    Gt((v) => !("eventType" in v))
  ), m = Ac(!0).pipe(
    Ot(() => {
      e.outgoingMessageSubject.next(n);
    }),
    Gt(() => !1)
  ), y = Jn(
    s,
    d,
    m
  ).pipe(
    Ot(() => {
      l.unsubscribe();
    })
  );
  return Yc(y);
};
var L;
(function(e) {
  e.assertEqual = (i) => i;
  function t(i) {
  }
  e.assertIs = t;
  function n(i) {
    throw new Error();
  }
  e.assertNever = n, e.arrayToEnum = (i) => {
    const o = {};
    for (const s of i)
      o[s] = s;
    return o;
  }, e.getValidEnumValues = (i) => {
    const o = e.objectKeys(i).filter((a) => typeof i[i[a]] != "number"), s = {};
    for (const a of o)
      s[a] = i[a];
    return e.objectValues(s);
  }, e.objectValues = (i) => e.objectKeys(i).map(function(o) {
    return i[o];
  }), e.objectKeys = typeof Object.keys == "function" ? (i) => Object.keys(i) : (i) => {
    const o = [];
    for (const s in i)
      Object.prototype.hasOwnProperty.call(i, s) && o.push(s);
    return o;
  }, e.find = (i, o) => {
    for (const s of i)
      if (o(s))
        return s;
  }, e.isInteger = typeof Number.isInteger == "function" ? (i) => Number.isInteger(i) : (i) => typeof i == "number" && isFinite(i) && Math.floor(i) === i;
  function r(i, o = " | ") {
    return i.map((s) => typeof s == "string" ? `'${s}'` : s).join(o);
  }
  e.joinValues = r, e.jsonStringifyReplacer = (i, o) => typeof o == "bigint" ? o.toString() : o;
})(L || (L = {}));
const S = L.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]), ht = (e) => {
  switch (typeof e) {
    case "undefined":
      return S.undefined;
    case "string":
      return S.string;
    case "number":
      return isNaN(e) ? S.nan : S.number;
    case "boolean":
      return S.boolean;
    case "function":
      return S.function;
    case "bigint":
      return S.bigint;
    case "object":
      return Array.isArray(e) ? S.array : e === null ? S.null : e.then && typeof e.then == "function" && e.catch && typeof e.catch == "function" ? S.promise : typeof Map < "u" && e instanceof Map ? S.map : typeof Set < "u" && e instanceof Set ? S.set : typeof Date < "u" && e instanceof Date ? S.date : S.object;
    default:
      return S.unknown;
  }
}, w = L.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of"
]);
class Xt extends Error {
  constructor(t) {
    super(), this.issues = [], this.addIssue = (r) => {
      this.issues = [...this.issues, r];
    }, this.addIssues = (r = []) => {
      this.issues = [...this.issues, ...r];
    };
    const n = new.target.prototype;
    Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n, this.name = "ZodError", this.issues = t;
  }
  get errors() {
    return this.issues;
  }
  format(t) {
    const n = t || function(o) {
      return o.message;
    }, r = { _errors: [] }, i = (o) => {
      for (const s of o.issues)
        if (s.code === "invalid_union")
          s.unionErrors.map(i);
        else if (s.code === "invalid_return_type")
          i(s.returnTypeError);
        else if (s.code === "invalid_arguments")
          i(s.argumentsError);
        else if (s.path.length === 0)
          r._errors.push(n(s));
        else {
          let a = r, l = 0;
          for (; l < s.path.length; ) {
            const u = s.path[l];
            l === s.path.length - 1 ? (a[u] = a[u] || { _errors: [] }, a[u]._errors.push(n(s))) : a[u] = a[u] || { _errors: [] }, a = a[u], l++;
          }
        }
    };
    return i(this), r;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, L.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(t = (n) => n.message) {
    const n = {}, r = [];
    for (const i of this.issues)
      i.path.length > 0 ? (n[i.path[0]] = n[i.path[0]] || [], n[i.path[0]].push(t(i))) : r.push(t(i));
    return { formErrors: r, fieldErrors: n };
  }
  get formErrors() {
    return this.flatten();
  }
}
Xt.create = (e) => new Xt(e);
const Ho = (e, t) => {
  let n;
  switch (e.code) {
    case w.invalid_type:
      e.received === S.undefined ? n = "Required" : n = `Expected ${e.expected}, received ${e.received}`;
      break;
    case w.invalid_literal:
      n = `Invalid literal value, expected ${JSON.stringify(e.expected, L.jsonStringifyReplacer)}`;
      break;
    case w.unrecognized_keys:
      n = `Unrecognized key(s) in object: ${L.joinValues(e.keys, ", ")}`;
      break;
    case w.invalid_union:
      n = "Invalid input";
      break;
    case w.invalid_union_discriminator:
      n = `Invalid discriminator value. Expected ${L.joinValues(e.options)}`;
      break;
    case w.invalid_enum_value:
      n = `Invalid enum value. Expected ${L.joinValues(e.options)}, received '${e.received}'`;
      break;
    case w.invalid_arguments:
      n = "Invalid function arguments";
      break;
    case w.invalid_return_type:
      n = "Invalid function return type";
      break;
    case w.invalid_date:
      n = "Invalid date";
      break;
    case w.invalid_string:
      typeof e.validation == "object" ? "startsWith" in e.validation ? n = `Invalid input: must start with "${e.validation.startsWith}"` : "endsWith" in e.validation ? n = `Invalid input: must end with "${e.validation.endsWith}"` : L.assertNever(e.validation) : e.validation !== "regex" ? n = `Invalid ${e.validation}` : n = "Invalid";
      break;
    case w.too_small:
      e.type === "array" ? n = `Array must contain ${e.inclusive ? "at least" : "more than"} ${e.minimum} element(s)` : e.type === "string" ? n = `String must contain ${e.inclusive ? "at least" : "over"} ${e.minimum} character(s)` : e.type === "number" ? n = `Number must be greater than ${e.inclusive ? "or equal to " : ""}${e.minimum}` : e.type === "date" ? n = `Date must be greater than ${e.inclusive ? "or equal to " : ""}${new Date(e.minimum)}` : n = "Invalid input";
      break;
    case w.too_big:
      e.type === "array" ? n = `Array must contain ${e.inclusive ? "at most" : "less than"} ${e.maximum} element(s)` : e.type === "string" ? n = `String must contain ${e.inclusive ? "at most" : "under"} ${e.maximum} character(s)` : e.type === "number" ? n = `Number must be less than ${e.inclusive ? "or equal to " : ""}${e.maximum}` : e.type === "date" ? n = `Date must be smaller than ${e.inclusive ? "or equal to " : ""}${new Date(e.maximum)}` : n = "Invalid input";
      break;
    case w.custom:
      n = "Invalid input";
      break;
    case w.invalid_intersection_types:
      n = "Intersection results could not be merged";
      break;
    case w.not_multiple_of:
      n = `Number must be a multiple of ${e.multipleOf}`;
      break;
    default:
      n = t.defaultError, L.assertNever(e);
  }
  return { message: n };
};
let Xc = Ho;
function el() {
  return Xc;
}
const tl = (e) => {
  const { data: t, path: n, errorMaps: r, issueData: i } = e, o = [...n, ...i.path || []], s = {
    ...i,
    path: o
  };
  let a = "";
  const l = r.filter((u) => !!u).slice().reverse();
  for (const u of l)
    a = u(s, { data: t, defaultError: a }).message;
  return {
    ...i,
    path: o,
    message: i.message || a
  };
};
function T(e, t) {
  const n = tl({
    issueData: t,
    data: e.data,
    path: e.path,
    errorMaps: [
      e.common.contextualErrorMap,
      e.schemaErrorMap,
      el(),
      Ho
    ].filter((r) => !!r)
  });
  e.common.issues.push(n);
}
class ge {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    this.value === "valid" && (this.value = "dirty");
  }
  abort() {
    this.value !== "aborted" && (this.value = "aborted");
  }
  static mergeArray(t, n) {
    const r = [];
    for (const i of n) {
      if (i.status === "aborted")
        return k;
      i.status === "dirty" && t.dirty(), r.push(i.value);
    }
    return { status: t.value, value: r };
  }
  static async mergeObjectAsync(t, n) {
    const r = [];
    for (const i of n)
      r.push({
        key: await i.key,
        value: await i.value
      });
    return ge.mergeObjectSync(t, r);
  }
  static mergeObjectSync(t, n) {
    const r = {};
    for (const i of n) {
      const { key: o, value: s } = i;
      if (o.status === "aborted" || s.status === "aborted")
        return k;
      o.status === "dirty" && t.dirty(), s.status === "dirty" && t.dirty(), (typeof s.value < "u" || i.alwaysSet) && (r[o.value] = s.value);
    }
    return { status: t.value, value: r };
  }
}
const k = Object.freeze({
  status: "aborted"
}), be = (e) => ({ status: "valid", value: e }), wi = (e) => e.status === "aborted", Si = (e) => e.status === "dirty", lr = (e) => e.status === "valid", xi = (e) => typeof Promise !== void 0 && e instanceof Promise;
var D;
(function(e) {
  e.errToObj = (t) => typeof t == "string" ? { message: t } : t || {}, e.toString = (t) => typeof t == "string" ? t : t == null ? void 0 : t.message;
})(D || (D = {}));
class tt {
  constructor(t, n, r, i) {
    this.parent = t, this.data = n, this._path = r, this._key = i;
  }
  get path() {
    return this._path.concat(this._key);
  }
}
const Ti = (e, t) => {
  if (lr(t))
    return { success: !0, data: t.value };
  if (!e.common.issues.length)
    throw new Error("Validation failed but no issues detected.");
  return { success: !1, error: new Xt(e.common.issues) };
};
function j(e) {
  if (!e)
    return {};
  const { errorMap: t, invalid_type_error: n, required_error: r, description: i } = e;
  if (t && (n || r))
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  return t ? { errorMap: t, description: i } : { errorMap: (o, s) => o.code !== "invalid_type" ? { message: s.defaultError } : typeof s.data > "u" ? { message: r ?? s.defaultError } : { message: n ?? s.defaultError }, description: i };
}
let F = class {
  constructor(t) {
    this.spa = this.safeParseAsync, this.superRefine = this._refinement, this._def = t, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.default = this.default.bind(this), this.describe = this.describe.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(t) {
    return ht(t.data);
  }
  _getOrReturnCtx(t, n) {
    return n || {
      common: t.parent.common,
      data: t.data,
      parsedType: ht(t.data),
      schemaErrorMap: this._def.errorMap,
      path: t.path,
      parent: t.parent
    };
  }
  _processInputParams(t) {
    return {
      status: new ge(),
      ctx: {
        common: t.parent.common,
        data: t.data,
        parsedType: ht(t.data),
        schemaErrorMap: this._def.errorMap,
        path: t.path,
        parent: t.parent
      }
    };
  }
  _parseSync(t) {
    const n = this._parse(t);
    if (xi(n))
      throw new Error("Synchronous parse encountered promise.");
    return n;
  }
  _parseAsync(t) {
    const n = this._parse(t);
    return Promise.resolve(n);
  }
  parse(t, n) {
    const r = this.safeParse(t, n);
    if (r.success)
      return r.data;
    throw r.error;
  }
  safeParse(t, n) {
    var r;
    const i = {
      common: {
        issues: [],
        async: (r = n == null ? void 0 : n.async) !== null && r !== void 0 ? r : !1,
        contextualErrorMap: n == null ? void 0 : n.errorMap
      },
      path: (n == null ? void 0 : n.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: t,
      parsedType: ht(t)
    }, o = this._parseSync({ data: t, path: i.path, parent: i });
    return Ti(i, o);
  }
  async parseAsync(t, n) {
    const r = await this.safeParseAsync(t, n);
    if (r.success)
      return r.data;
    throw r.error;
  }
  async safeParseAsync(t, n) {
    const r = {
      common: {
        issues: [],
        contextualErrorMap: n == null ? void 0 : n.errorMap,
        async: !0
      },
      path: (n == null ? void 0 : n.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: t,
      parsedType: ht(t)
    }, i = this._parse({ data: t, path: [], parent: r }), o = await (xi(i) ? i : Promise.resolve(i));
    return Ti(r, o);
  }
  refine(t, n) {
    const r = (i) => typeof n == "string" || typeof n > "u" ? { message: n } : typeof n == "function" ? n(i) : n;
    return this._refinement((i, o) => {
      const s = t(i), a = () => o.addIssue({
        code: w.custom,
        ...r(i)
      });
      return typeof Promise < "u" && s instanceof Promise ? s.then((l) => l ? !0 : (a(), !1)) : s ? !0 : (a(), !1);
    });
  }
  refinement(t, n) {
    return this._refinement((r, i) => t(r) ? !0 : (i.addIssue(typeof n == "function" ? n(r, i) : n), !1));
  }
  _refinement(t) {
    return new Dt({
      schema: this,
      typeName: C.ZodEffects,
      effect: { type: "refinement", refinement: t }
    });
  }
  optional() {
    return Ze.create(this);
  }
  nullable() {
    return jt.create(this);
  }
  nullish() {
    return this.optional().nullable();
  }
  array() {
    return Be.create(this);
  }
  promise() {
    return kn.create(this);
  }
  or(t) {
    return En.create([this, t]);
  }
  and(t) {
    return Cn.create(this, t);
  }
  transform(t) {
    return new Dt({
      schema: this,
      typeName: C.ZodEffects,
      effect: { type: "transform", transform: t }
    });
  }
  default(t) {
    const n = typeof t == "function" ? t : () => t;
    return new Jo({
      innerType: this,
      defaultValue: n,
      typeName: C.ZodDefault
    });
  }
  brand() {
    return new sl({
      typeName: C.ZodBranded,
      type: this,
      ...j(void 0)
    });
  }
  describe(t) {
    const n = this.constructor;
    return new n({
      ...this._def,
      description: t
    });
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
};
const nl = /^c[^\s-]{8,}$/i, rl = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i, il = /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;
class Rt extends F {
  constructor() {
    super(...arguments), this._regex = (t, n, r) => this.refinement((i) => t.test(i), {
      validation: n,
      code: w.invalid_string,
      ...D.errToObj(r)
    }), this.nonempty = (t) => this.min(1, D.errToObj(t)), this.trim = () => new Rt({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  _parse(t) {
    if (this._getType(t) !== S.string) {
      const i = this._getOrReturnCtx(t);
      return T(
        i,
        {
          code: w.invalid_type,
          expected: S.string,
          received: i.parsedType
        }
      ), k;
    }
    const n = new ge();
    let r;
    for (const i of this._def.checks)
      if (i.kind === "min")
        t.data.length < i.value && (r = this._getOrReturnCtx(t, r), T(r, {
          code: w.too_small,
          minimum: i.value,
          type: "string",
          inclusive: !0,
          message: i.message
        }), n.dirty());
      else if (i.kind === "max")
        t.data.length > i.value && (r = this._getOrReturnCtx(t, r), T(r, {
          code: w.too_big,
          maximum: i.value,
          type: "string",
          inclusive: !0,
          message: i.message
        }), n.dirty());
      else if (i.kind === "email")
        il.test(t.data) || (r = this._getOrReturnCtx(t, r), T(r, {
          validation: "email",
          code: w.invalid_string,
          message: i.message
        }), n.dirty());
      else if (i.kind === "uuid")
        rl.test(t.data) || (r = this._getOrReturnCtx(t, r), T(r, {
          validation: "uuid",
          code: w.invalid_string,
          message: i.message
        }), n.dirty());
      else if (i.kind === "cuid")
        nl.test(t.data) || (r = this._getOrReturnCtx(t, r), T(r, {
          validation: "cuid",
          code: w.invalid_string,
          message: i.message
        }), n.dirty());
      else if (i.kind === "url")
        try {
          new URL(t.data);
        } catch {
          r = this._getOrReturnCtx(t, r), T(r, {
            validation: "url",
            code: w.invalid_string,
            message: i.message
          }), n.dirty();
        }
      else
        i.kind === "regex" ? (i.regex.lastIndex = 0, i.regex.test(t.data) || (r = this._getOrReturnCtx(t, r), T(r, {
          validation: "regex",
          code: w.invalid_string,
          message: i.message
        }), n.dirty())) : i.kind === "trim" ? t.data = t.data.trim() : i.kind === "startsWith" ? t.data.startsWith(i.value) || (r = this._getOrReturnCtx(t, r), T(r, {
          code: w.invalid_string,
          validation: { startsWith: i.value },
          message: i.message
        }), n.dirty()) : i.kind === "endsWith" ? t.data.endsWith(i.value) || (r = this._getOrReturnCtx(t, r), T(r, {
          code: w.invalid_string,
          validation: { endsWith: i.value },
          message: i.message
        }), n.dirty()) : L.assertNever(i);
    return { status: n.value, value: t.data };
  }
  _addCheck(t) {
    return new Rt({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  email(t) {
    return this._addCheck({ kind: "email", ...D.errToObj(t) });
  }
  url(t) {
    return this._addCheck({ kind: "url", ...D.errToObj(t) });
  }
  uuid(t) {
    return this._addCheck({ kind: "uuid", ...D.errToObj(t) });
  }
  cuid(t) {
    return this._addCheck({ kind: "cuid", ...D.errToObj(t) });
  }
  regex(t, n) {
    return this._addCheck({
      kind: "regex",
      regex: t,
      ...D.errToObj(n)
    });
  }
  startsWith(t, n) {
    return this._addCheck({
      kind: "startsWith",
      value: t,
      ...D.errToObj(n)
    });
  }
  endsWith(t, n) {
    return this._addCheck({
      kind: "endsWith",
      value: t,
      ...D.errToObj(n)
    });
  }
  min(t, n) {
    return this._addCheck({
      kind: "min",
      value: t,
      ...D.errToObj(n)
    });
  }
  max(t, n) {
    return this._addCheck({
      kind: "max",
      value: t,
      ...D.errToObj(n)
    });
  }
  length(t, n) {
    return this.min(t, n).max(t, n);
  }
  get isEmail() {
    return !!this._def.checks.find((t) => t.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((t) => t.kind === "url");
  }
  get isUUID() {
    return !!this._def.checks.find((t) => t.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((t) => t.kind === "cuid");
  }
  get minLength() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "min" && (t === null || n.value > t) && (t = n.value);
    return t;
  }
  get maxLength() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "max" && (t === null || n.value < t) && (t = n.value);
    return t;
  }
}
Rt.create = (e) => new Rt({
  checks: [],
  typeName: C.ZodString,
  ...j(e)
});
function ol(e, t) {
  const n = (e.toString().split(".")[1] || "").length, r = (t.toString().split(".")[1] || "").length, i = n > r ? n : r, o = parseInt(e.toFixed(i).replace(".", "")), s = parseInt(t.toFixed(i).replace(".", ""));
  return o % s / Math.pow(10, i);
}
let fr = class dr extends F {
  constructor() {
    super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
  }
  _parse(t) {
    if (this._getType(t) !== S.number) {
      const i = this._getOrReturnCtx(t);
      return T(i, {
        code: w.invalid_type,
        expected: S.number,
        received: i.parsedType
      }), k;
    }
    let n;
    const r = new ge();
    for (const i of this._def.checks)
      i.kind === "int" ? L.isInteger(t.data) || (n = this._getOrReturnCtx(t, n), T(n, {
        code: w.invalid_type,
        expected: "integer",
        received: "float",
        message: i.message
      }), r.dirty()) : i.kind === "min" ? (i.inclusive ? t.data < i.value : t.data <= i.value) && (n = this._getOrReturnCtx(t, n), T(n, {
        code: w.too_small,
        minimum: i.value,
        type: "number",
        inclusive: i.inclusive,
        message: i.message
      }), r.dirty()) : i.kind === "max" ? (i.inclusive ? t.data > i.value : t.data >= i.value) && (n = this._getOrReturnCtx(t, n), T(n, {
        code: w.too_big,
        maximum: i.value,
        type: "number",
        inclusive: i.inclusive,
        message: i.message
      }), r.dirty()) : i.kind === "multipleOf" ? ol(t.data, i.value) !== 0 && (n = this._getOrReturnCtx(t, n), T(n, {
        code: w.not_multiple_of,
        multipleOf: i.value,
        message: i.message
      }), r.dirty()) : L.assertNever(i);
    return { status: r.value, value: t.data };
  }
  gte(t, n) {
    return this.setLimit("min", t, !0, D.toString(n));
  }
  gt(t, n) {
    return this.setLimit("min", t, !1, D.toString(n));
  }
  lte(t, n) {
    return this.setLimit("max", t, !0, D.toString(n));
  }
  lt(t, n) {
    return this.setLimit("max", t, !1, D.toString(n));
  }
  setLimit(t, n, r, i) {
    return new dr({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind: t,
          value: n,
          inclusive: r,
          message: D.toString(i)
        }
      ]
    });
  }
  _addCheck(t) {
    return new dr({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  int(t) {
    return this._addCheck({
      kind: "int",
      message: D.toString(t)
    });
  }
  positive(t) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !1,
      message: D.toString(t)
    });
  }
  negative(t) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !1,
      message: D.toString(t)
    });
  }
  nonpositive(t) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !0,
      message: D.toString(t)
    });
  }
  nonnegative(t) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !0,
      message: D.toString(t)
    });
  }
  multipleOf(t, n) {
    return this._addCheck({
      kind: "multipleOf",
      value: t,
      message: D.toString(n)
    });
  }
  get minValue() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "min" && (t === null || n.value > t) && (t = n.value);
    return t;
  }
  get maxValue() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "max" && (t === null || n.value < t) && (t = n.value);
    return t;
  }
  get isInt() {
    return !!this._def.checks.find((t) => t.kind === "int");
  }
};
fr.create = (e) => new fr({
  checks: [],
  typeName: C.ZodNumber,
  ...j(e)
});
class Oi extends F {
  _parse(t) {
    if (this._getType(t) !== S.bigint) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.bigint,
        received: n.parsedType
      }), k;
    }
    return be(t.data);
  }
}
Oi.create = (e) => new Oi({
  typeName: C.ZodBigInt,
  ...j(e)
});
class hr extends F {
  _parse(t) {
    if (this._getType(t) !== S.boolean) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.boolean,
        received: n.parsedType
      }), k;
    }
    return be(t.data);
  }
}
hr.create = (e) => new hr({
  typeName: C.ZodBoolean,
  ...j(e)
});
let Ai = class Vo extends F {
  _parse(t) {
    if (this._getType(t) !== S.date) {
      const i = this._getOrReturnCtx(t);
      return T(i, {
        code: w.invalid_type,
        expected: S.date,
        received: i.parsedType
      }), k;
    }
    if (isNaN(t.data.getTime())) {
      const i = this._getOrReturnCtx(t);
      return T(i, {
        code: w.invalid_date
      }), k;
    }
    const n = new ge();
    let r;
    for (const i of this._def.checks)
      i.kind === "min" ? t.data.getTime() < i.value && (r = this._getOrReturnCtx(t, r), T(r, {
        code: w.too_small,
        message: i.message,
        inclusive: !0,
        minimum: i.value,
        type: "date"
      }), n.dirty()) : i.kind === "max" ? t.data.getTime() > i.value && (r = this._getOrReturnCtx(t, r), T(r, {
        code: w.too_big,
        message: i.message,
        inclusive: !0,
        maximum: i.value,
        type: "date"
      }), n.dirty()) : L.assertNever(i);
    return {
      status: n.value,
      value: new Date(t.data.getTime())
    };
  }
  _addCheck(t) {
    return new Vo({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  min(t, n) {
    return this._addCheck({
      kind: "min",
      value: t.getTime(),
      message: D.toString(n)
    });
  }
  max(t, n) {
    return this._addCheck({
      kind: "max",
      value: t.getTime(),
      message: D.toString(n)
    });
  }
  get minDate() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "min" && (t === null || n.value > t) && (t = n.value);
    return t != null ? new Date(t) : null;
  }
  get maxDate() {
    let t = null;
    for (const n of this._def.checks)
      n.kind === "max" && (t === null || n.value < t) && (t = n.value);
    return t != null ? new Date(t) : null;
  }
};
Ai.create = (e) => new Ai({
  checks: [],
  typeName: C.ZodDate,
  ...j(e)
});
class Ii extends F {
  _parse(t) {
    if (this._getType(t) !== S.undefined) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.undefined,
        received: n.parsedType
      }), k;
    }
    return be(t.data);
  }
}
Ii.create = (e) => new Ii({
  typeName: C.ZodUndefined,
  ...j(e)
});
class Pi extends F {
  _parse(t) {
    if (this._getType(t) !== S.null) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.null,
        received: n.parsedType
      }), k;
    }
    return be(t.data);
  }
}
Pi.create = (e) => new Pi({
  typeName: C.ZodNull,
  ...j(e)
});
class Ei extends F {
  constructor() {
    super(...arguments), this._any = !0;
  }
  _parse(t) {
    return be(t.data);
  }
}
Ei.create = (e) => new Ei({
  typeName: C.ZodAny,
  ...j(e)
});
class Ci extends F {
  constructor() {
    super(...arguments), this._unknown = !0;
  }
  _parse(t) {
    return be(t.data);
  }
}
Ci.create = (e) => new Ci({
  typeName: C.ZodUnknown,
  ...j(e)
});
class nt extends F {
  _parse(t) {
    const n = this._getOrReturnCtx(t);
    return T(n, {
      code: w.invalid_type,
      expected: S.never,
      received: n.parsedType
    }), k;
  }
}
nt.create = (e) => new nt({
  typeName: C.ZodNever,
  ...j(e)
});
class ki extends F {
  _parse(t) {
    if (this._getType(t) !== S.undefined) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.void,
        received: n.parsedType
      }), k;
    }
    return be(t.data);
  }
}
ki.create = (e) => new ki({
  typeName: C.ZodVoid,
  ...j(e)
});
class Be extends F {
  _parse(t) {
    const { ctx: n, status: r } = this._processInputParams(t), i = this._def;
    if (n.parsedType !== S.array)
      return T(n, {
        code: w.invalid_type,
        expected: S.array,
        received: n.parsedType
      }), k;
    if (i.minLength !== null && n.data.length < i.minLength.value && (T(n, {
      code: w.too_small,
      minimum: i.minLength.value,
      type: "array",
      inclusive: !0,
      message: i.minLength.message
    }), r.dirty()), i.maxLength !== null && n.data.length > i.maxLength.value && (T(n, {
      code: w.too_big,
      maximum: i.maxLength.value,
      type: "array",
      inclusive: !0,
      message: i.maxLength.message
    }), r.dirty()), n.common.async)
      return Promise.all(n.data.map((s, a) => i.type._parseAsync(new tt(n, s, n.path, a)))).then((s) => ge.mergeArray(r, s));
    const o = n.data.map((s, a) => i.type._parseSync(new tt(n, s, n.path, a)));
    return ge.mergeArray(r, o);
  }
  get element() {
    return this._def.type;
  }
  min(t, n) {
    return new Be({
      ...this._def,
      minLength: { value: t, message: D.toString(n) }
    });
  }
  max(t, n) {
    return new Be({
      ...this._def,
      maxLength: { value: t, message: D.toString(n) }
    });
  }
  length(t, n) {
    return this.min(t, n).max(t, n);
  }
  nonempty(t) {
    return this.min(1, t);
  }
}
Be.create = (e, t) => new Be({
  type: e,
  minLength: null,
  maxLength: null,
  typeName: C.ZodArray,
  ...j(t)
});
var pr;
(function(e) {
  e.mergeShapes = (t, n) => ({
    ...t,
    ...n
  });
})(pr || (pr = {}));
const $i = (e) => (t) => new H({
  ...e,
  shape: () => ({
    ...e.shape(),
    ...t
  })
});
function St(e) {
  if (e instanceof H) {
    const t = {};
    for (const n in e.shape) {
      const r = e.shape[n];
      t[n] = Ze.create(St(r));
    }
    return new H({
      ...e._def,
      shape: () => t
    });
  } else
    return e instanceof Be ? Be.create(St(e.element)) : e instanceof Ze ? Ze.create(St(e.unwrap())) : e instanceof jt ? jt.create(St(e.unwrap())) : e instanceof vt ? vt.create(e.items.map((t) => St(t))) : e;
}
class H extends F {
  constructor() {
    super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = $i(this._def), this.extend = $i(this._def);
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const t = this._def.shape(), n = L.objectKeys(t);
    return this._cached = { shape: t, keys: n };
  }
  _parse(t) {
    if (this._getType(t) !== S.object) {
      const l = this._getOrReturnCtx(t);
      return T(l, {
        code: w.invalid_type,
        expected: S.object,
        received: l.parsedType
      }), k;
    }
    const { status: n, ctx: r } = this._processInputParams(t), { shape: i, keys: o } = this._getCached(), s = [];
    if (!(this._def.catchall instanceof nt && this._def.unknownKeys === "strip"))
      for (const l in r.data)
        o.includes(l) || s.push(l);
    const a = [];
    for (const l of o) {
      const u = i[l], d = r.data[l];
      a.push({
        key: { status: "valid", value: l },
        value: u._parse(new tt(r, d, r.path, l)),
        alwaysSet: l in r.data
      });
    }
    if (this._def.catchall instanceof nt) {
      const l = this._def.unknownKeys;
      if (l === "passthrough")
        for (const u of s)
          a.push({
            key: { status: "valid", value: u },
            value: { status: "valid", value: r.data[u] }
          });
      else if (l === "strict")
        s.length > 0 && (T(r, {
          code: w.unrecognized_keys,
          keys: s
        }), n.dirty());
      else if (l !== "strip")
        throw new Error("Internal ZodObject error: invalid unknownKeys value.");
    } else {
      const l = this._def.catchall;
      for (const u of s) {
        const d = r.data[u];
        a.push({
          key: { status: "valid", value: u },
          value: l._parse(
            new tt(r, d, r.path, u)
          ),
          alwaysSet: u in r.data
        });
      }
    }
    return r.common.async ? Promise.resolve().then(async () => {
      const l = [];
      for (const u of a) {
        const d = await u.key;
        l.push({
          key: d,
          value: await u.value,
          alwaysSet: u.alwaysSet
        });
      }
      return l;
    }).then((l) => ge.mergeObjectSync(n, l)) : ge.mergeObjectSync(n, a);
  }
  get shape() {
    return this._def.shape();
  }
  strict(t) {
    return D.errToObj, new H({
      ...this._def,
      unknownKeys: "strict",
      ...t !== void 0 ? {
        errorMap: (n, r) => {
          var i, o, s, a;
          const l = (s = (o = (i = this._def).errorMap) === null || o === void 0 ? void 0 : o.call(i, n, r).message) !== null && s !== void 0 ? s : r.defaultError;
          return n.code === "unrecognized_keys" ? {
            message: (a = D.errToObj(t).message) !== null && a !== void 0 ? a : l
          } : {
            message: l
          };
        }
      } : {}
    });
  }
  strip() {
    return new H({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new H({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  setKey(t, n) {
    return this.augment({ [t]: n });
  }
  merge(t) {
    return new H({
      unknownKeys: t._def.unknownKeys,
      catchall: t._def.catchall,
      shape: () => pr.mergeShapes(this._def.shape(), t._def.shape()),
      typeName: C.ZodObject
    });
  }
  catchall(t) {
    return new H({
      ...this._def,
      catchall: t
    });
  }
  pick(t) {
    const n = {};
    return L.objectKeys(t).map((r) => {
      this.shape[r] && (n[r] = this.shape[r]);
    }), new H({
      ...this._def,
      shape: () => n
    });
  }
  omit(t) {
    const n = {};
    return L.objectKeys(this.shape).map((r) => {
      L.objectKeys(t).indexOf(r) === -1 && (n[r] = this.shape[r]);
    }), new H({
      ...this._def,
      shape: () => n
    });
  }
  deepPartial() {
    return St(this);
  }
  partial(t) {
    const n = {};
    if (t)
      return L.objectKeys(this.shape).map((r) => {
        L.objectKeys(t).indexOf(r) === -1 ? n[r] = this.shape[r] : n[r] = this.shape[r].optional();
      }), new H({
        ...this._def,
        shape: () => n
      });
    for (const r in this.shape) {
      const i = this.shape[r];
      n[r] = i.optional();
    }
    return new H({
      ...this._def,
      shape: () => n
    });
  }
  required() {
    const t = {};
    for (const n in this.shape) {
      let r = this.shape[n];
      for (; r instanceof Ze; )
        r = r._def.innerType;
      t[n] = r;
    }
    return new H({
      ...this._def,
      shape: () => t
    });
  }
  keyof() {
    return Go(L.objectKeys(this.shape));
  }
}
H.create = (e, t) => new H({
  shape: () => e,
  unknownKeys: "strip",
  catchall: nt.create(),
  typeName: C.ZodObject,
  ...j(t)
});
H.strictCreate = (e, t) => new H({
  shape: () => e,
  unknownKeys: "strict",
  catchall: nt.create(),
  typeName: C.ZodObject,
  ...j(t)
});
H.lazycreate = (e, t) => new H({
  shape: e,
  unknownKeys: "strip",
  catchall: nt.create(),
  typeName: C.ZodObject,
  ...j(t)
});
let En = class extends F {
  _parse(t) {
    const { ctx: n } = this._processInputParams(t), r = this._def.options;
    function i(o) {
      for (const a of o)
        if (a.result.status === "valid")
          return a.result;
      for (const a of o)
        if (a.result.status === "dirty")
          return n.common.issues.push(...a.ctx.common.issues), a.result;
      const s = o.map((a) => new Xt(a.ctx.common.issues));
      return T(n, {
        code: w.invalid_union,
        unionErrors: s
      }), k;
    }
    if (n.common.async)
      return Promise.all(r.map(async (o) => {
        const s = {
          ...n,
          common: {
            ...n.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await o._parseAsync({
            data: n.data,
            path: n.path,
            parent: s
          }),
          ctx: s
        };
      })).then(i);
    {
      let o;
      const s = [];
      for (const l of r) {
        const u = {
          ...n,
          common: {
            ...n.common,
            issues: []
          },
          parent: null
        }, d = l._parseSync({
          data: n.data,
          path: n.path,
          parent: u
        });
        if (d.status === "valid")
          return d;
        d.status === "dirty" && !o && (o = { result: d, ctx: u }), u.common.issues.length && s.push(u.common.issues);
      }
      if (o)
        return n.common.issues.push(...o.ctx.common.issues), o.result;
      const a = s.map((l) => new Xt(l));
      return T(n, {
        code: w.invalid_union,
        unionErrors: a
      }), k;
    }
  }
  get options() {
    return this._def.options;
  }
};
En.create = (e, t) => new En({
  options: e,
  typeName: C.ZodUnion,
  ...j(t)
});
function mr(e, t) {
  const n = ht(e), r = ht(t);
  if (e === t)
    return { valid: !0, data: e };
  if (n === S.object && r === S.object) {
    const i = L.objectKeys(t), o = L.objectKeys(e).filter((a) => i.indexOf(a) !== -1), s = { ...e, ...t };
    for (const a of o) {
      const l = mr(e[a], t[a]);
      if (!l.valid)
        return { valid: !1 };
      s[a] = l.data;
    }
    return { valid: !0, data: s };
  } else if (n === S.array && r === S.array) {
    if (e.length !== t.length)
      return { valid: !1 };
    const i = [];
    for (let o = 0; o < e.length; o++) {
      const s = e[o], a = t[o], l = mr(s, a);
      if (!l.valid)
        return { valid: !1 };
      i.push(l.data);
    }
    return { valid: !0, data: i };
  } else
    return n === S.date && r === S.date && +e == +t ? { valid: !0, data: e } : { valid: !1 };
}
class Cn extends F {
  _parse(t) {
    const { status: n, ctx: r } = this._processInputParams(t), i = (o, s) => {
      if (wi(o) || wi(s))
        return k;
      const a = mr(o.value, s.value);
      return a.valid ? ((Si(o) || Si(s)) && n.dirty(), { status: n.value, value: a.data }) : (T(r, {
        code: w.invalid_intersection_types
      }), k);
    };
    return r.common.async ? Promise.all([
      this._def.left._parseAsync({
        data: r.data,
        path: r.path,
        parent: r
      }),
      this._def.right._parseAsync({
        data: r.data,
        path: r.path,
        parent: r
      })
    ]).then(([o, s]) => i(o, s)) : i(this._def.left._parseSync({
      data: r.data,
      path: r.path,
      parent: r
    }), this._def.right._parseSync({
      data: r.data,
      path: r.path,
      parent: r
    }));
  }
}
Cn.create = (e, t, n) => new Cn({
  left: e,
  right: t,
  typeName: C.ZodIntersection,
  ...j(n)
});
class vt extends F {
  _parse(t) {
    const { status: n, ctx: r } = this._processInputParams(t);
    if (r.parsedType !== S.array)
      return T(r, {
        code: w.invalid_type,
        expected: S.array,
        received: r.parsedType
      }), k;
    if (r.data.length < this._def.items.length)
      return T(r, {
        code: w.too_small,
        minimum: this._def.items.length,
        inclusive: !0,
        type: "array"
      }), k;
    !this._def.rest && r.data.length > this._def.items.length && (T(r, {
      code: w.too_big,
      maximum: this._def.items.length,
      inclusive: !0,
      type: "array"
    }), n.dirty());
    const i = r.data.map((o, s) => {
      const a = this._def.items[s] || this._def.rest;
      return a ? a._parse(new tt(r, o, r.path, s)) : null;
    }).filter((o) => !!o);
    return r.common.async ? Promise.all(i).then((o) => ge.mergeArray(n, o)) : ge.mergeArray(n, i);
  }
  get items() {
    return this._def.items;
  }
  rest(t) {
    return new vt({
      ...this._def,
      rest: t
    });
  }
}
vt.create = (e, t) => {
  if (!Array.isArray(e))
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  return new vt({
    items: e,
    typeName: C.ZodTuple,
    rest: null,
    ...j(t)
  });
};
class Ri extends F {
  _parse(t) {
    const { status: n, ctx: r } = this._processInputParams(t);
    if (r.parsedType !== S.map)
      return T(r, {
        code: w.invalid_type,
        expected: S.map,
        received: r.parsedType
      }), k;
    const i = this._def.keyType, o = this._def.valueType, s = [...r.data.entries()].map(([a, l], u) => ({
      key: i._parse(new tt(r, a, r.path, [u, "key"])),
      value: o._parse(new tt(r, l, r.path, [u, "value"]))
    }));
    if (r.common.async) {
      const a = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const l of s) {
          const u = await l.key, d = await l.value;
          if (u.status === "aborted" || d.status === "aborted")
            return k;
          (u.status === "dirty" || d.status === "dirty") && n.dirty(), a.set(u.value, d.value);
        }
        return { status: n.value, value: a };
      });
    } else {
      const a = /* @__PURE__ */ new Map();
      for (const l of s) {
        const u = l.key, d = l.value;
        if (u.status === "aborted" || d.status === "aborted")
          return k;
        (u.status === "dirty" || d.status === "dirty") && n.dirty(), a.set(u.value, d.value);
      }
      return { status: n.value, value: a };
    }
  }
}
Ri.create = (e, t, n) => new Ri({
  valueType: t,
  keyType: e,
  typeName: C.ZodMap,
  ...j(n)
});
class en extends F {
  _parse(t) {
    const { status: n, ctx: r } = this._processInputParams(t);
    if (r.parsedType !== S.set)
      return T(r, {
        code: w.invalid_type,
        expected: S.set,
        received: r.parsedType
      }), k;
    const i = this._def;
    i.minSize !== null && r.data.size < i.minSize.value && (T(r, {
      code: w.too_small,
      minimum: i.minSize.value,
      type: "set",
      inclusive: !0,
      message: i.minSize.message
    }), n.dirty()), i.maxSize !== null && r.data.size > i.maxSize.value && (T(r, {
      code: w.too_big,
      maximum: i.maxSize.value,
      type: "set",
      inclusive: !0,
      message: i.maxSize.message
    }), n.dirty());
    const o = this._def.valueType;
    function s(l) {
      const u = /* @__PURE__ */ new Set();
      for (const d of l) {
        if (d.status === "aborted")
          return k;
        d.status === "dirty" && n.dirty(), u.add(d.value);
      }
      return { status: n.value, value: u };
    }
    const a = [...r.data.values()].map((l, u) => o._parse(new tt(r, l, r.path, u)));
    return r.common.async ? Promise.all(a).then((l) => s(l)) : s(a);
  }
  min(t, n) {
    return new en({
      ...this._def,
      minSize: { value: t, message: D.toString(n) }
    });
  }
  max(t, n) {
    return new en({
      ...this._def,
      maxSize: { value: t, message: D.toString(n) }
    });
  }
  size(t, n) {
    return this.min(t, n).max(t, n);
  }
  nonempty(t) {
    return this.min(1, t);
  }
}
en.create = (e, t) => new en({
  valueType: e,
  minSize: null,
  maxSize: null,
  typeName: C.ZodSet,
  ...j(t)
});
class Di extends F {
  get schema() {
    return this._def.getter();
  }
  _parse(t) {
    const { ctx: n } = this._processInputParams(t);
    return this._def.getter()._parse({ data: n.data, path: n.path, parent: n });
  }
}
Di.create = (e, t) => new Di({
  getter: e,
  typeName: C.ZodLazy,
  ...j(t)
});
class yr extends F {
  _parse(t) {
    if (t.data !== this._def.value) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_literal,
        expected: this._def.value
      }), k;
    }
    return { status: "valid", value: t.data };
  }
  get value() {
    return this._def.value;
  }
}
yr.create = (e, t) => new yr({
  value: e,
  typeName: C.ZodLiteral,
  ...j(t)
});
function Go(e, t) {
  return new Yo({
    values: e,
    typeName: C.ZodEnum,
    ...j(t)
  });
}
class Yo extends F {
  _parse(t) {
    if (typeof t.data != "string") {
      const n = this._getOrReturnCtx(t), r = this._def.values;
      return T(n, {
        expected: L.joinValues(r),
        received: n.parsedType,
        code: w.invalid_type
      }), k;
    }
    if (this._def.values.indexOf(t.data) === -1) {
      const n = this._getOrReturnCtx(t), r = this._def.values;
      return T(n, {
        received: n.data,
        code: w.invalid_enum_value,
        options: r
      }), k;
    }
    return be(t.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const t = {};
    for (const n of this._def.values)
      t[n] = n;
    return t;
  }
  get Values() {
    const t = {};
    for (const n of this._def.values)
      t[n] = n;
    return t;
  }
  get Enum() {
    const t = {};
    for (const n of this._def.values)
      t[n] = n;
    return t;
  }
}
Yo.create = Go;
class ji extends F {
  _parse(t) {
    const n = L.getValidEnumValues(this._def.values), r = this._getOrReturnCtx(t);
    if (r.parsedType !== S.string && r.parsedType !== S.number) {
      const i = L.objectValues(n);
      return T(r, {
        expected: L.joinValues(i),
        received: r.parsedType,
        code: w.invalid_type
      }), k;
    }
    if (n.indexOf(t.data) === -1) {
      const i = L.objectValues(n);
      return T(r, {
        received: r.data,
        code: w.invalid_enum_value,
        options: i
      }), k;
    }
    return be(t.data);
  }
  get enum() {
    return this._def.values;
  }
}
ji.create = (e, t) => new ji({
  values: e,
  typeName: C.ZodNativeEnum,
  ...j(t)
});
class kn extends F {
  _parse(t) {
    const { ctx: n } = this._processInputParams(t);
    if (n.parsedType !== S.promise && n.common.async === !1)
      return T(n, {
        code: w.invalid_type,
        expected: S.promise,
        received: n.parsedType
      }), k;
    const r = n.parsedType === S.promise ? n.data : Promise.resolve(n.data);
    return be(r.then((i) => this._def.type.parseAsync(i, {
      path: n.path,
      errorMap: n.common.contextualErrorMap
    })));
  }
}
kn.create = (e, t) => new kn({
  type: e,
  typeName: C.ZodPromise,
  ...j(t)
});
class Dt extends F {
  innerType() {
    return this._def.schema;
  }
  _parse(t) {
    const { status: n, ctx: r } = this._processInputParams(t), i = this._def.effect || null;
    if (i.type === "preprocess") {
      const s = i.transform(r.data);
      return r.common.async ? Promise.resolve(s).then((a) => this._def.schema._parseAsync({
        data: a,
        path: r.path,
        parent: r
      })) : this._def.schema._parseSync({
        data: s,
        path: r.path,
        parent: r
      });
    }
    const o = {
      addIssue: (s) => {
        T(r, s), s.fatal ? n.abort() : n.dirty();
      },
      get path() {
        return r.path;
      }
    };
    if (o.addIssue = o.addIssue.bind(o), i.type === "refinement") {
      const s = (a) => {
        const l = i.refinement(a, o);
        if (r.common.async)
          return Promise.resolve(l);
        if (l instanceof Promise)
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        return a;
      };
      if (r.common.async === !1) {
        const a = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r
        });
        return a.status === "aborted" ? k : (a.status === "dirty" && n.dirty(), s(a.value), { status: n.value, value: a.value });
      } else
        return this._def.schema._parseAsync({ data: r.data, path: r.path, parent: r }).then((a) => a.status === "aborted" ? k : (a.status === "dirty" && n.dirty(), s(a.value).then(() => ({ status: n.value, value: a.value }))));
    }
    if (i.type === "transform")
      if (r.common.async === !1) {
        const s = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r
        });
        if (!lr(s))
          return s;
        const a = i.transform(s.value, o);
        if (a instanceof Promise)
          throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
        return { status: n.value, value: a };
      } else
        return this._def.schema._parseAsync({ data: r.data, path: r.path, parent: r }).then((s) => lr(s) ? Promise.resolve(i.transform(s.value, o)).then((a) => ({ status: n.value, value: a })) : s);
    L.assertNever(i);
  }
}
Dt.create = (e, t, n) => new Dt({
  schema: e,
  typeName: C.ZodEffects,
  effect: t,
  ...j(n)
});
Dt.createWithPreprocess = (e, t, n) => new Dt({
  schema: t,
  effect: { type: "preprocess", transform: e },
  typeName: C.ZodEffects,
  ...j(n)
});
class Ze extends F {
  _parse(t) {
    return this._getType(t) === S.undefined ? be(void 0) : this._def.innerType._parse(t);
  }
  unwrap() {
    return this._def.innerType;
  }
}
Ze.create = (e, t) => new Ze({
  innerType: e,
  typeName: C.ZodOptional,
  ...j(t)
});
class jt extends F {
  _parse(t) {
    return this._getType(t) === S.null ? be(null) : this._def.innerType._parse(t);
  }
  unwrap() {
    return this._def.innerType;
  }
}
jt.create = (e, t) => new jt({
  innerType: e,
  typeName: C.ZodNullable,
  ...j(t)
});
class Jo extends F {
  _parse(t) {
    const { ctx: n } = this._processInputParams(t);
    let r = n.data;
    return n.parsedType === S.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
      data: r,
      path: n.path,
      parent: n
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
}
Jo.create = (e, t) => new Ze({
  innerType: e,
  typeName: C.ZodOptional,
  ...j(t)
});
class Ni extends F {
  _parse(t) {
    if (this._getType(t) !== S.nan) {
      const n = this._getOrReturnCtx(t);
      return T(n, {
        code: w.invalid_type,
        expected: S.nan,
        received: n.parsedType
      }), k;
    }
    return { status: "valid", value: t.data };
  }
}
Ni.create = (e) => new Ni({
  typeName: C.ZodNaN,
  ...j(e)
});
class sl extends F {
  _parse(t) {
    const { ctx: n } = this._processInputParams(t), r = n.data;
    return this._def.type._parse({
      data: r,
      path: n.path,
      parent: n
    });
  }
  unwrap() {
    return this._def.type;
  }
}
H.lazycreate;
var C;
(function(e) {
  e.ZodString = "ZodString", e.ZodNumber = "ZodNumber", e.ZodNaN = "ZodNaN", e.ZodBigInt = "ZodBigInt", e.ZodBoolean = "ZodBoolean", e.ZodDate = "ZodDate", e.ZodUndefined = "ZodUndefined", e.ZodNull = "ZodNull", e.ZodAny = "ZodAny", e.ZodUnknown = "ZodUnknown", e.ZodNever = "ZodNever", e.ZodVoid = "ZodVoid", e.ZodArray = "ZodArray", e.ZodObject = "ZodObject", e.ZodUnion = "ZodUnion", e.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", e.ZodIntersection = "ZodIntersection", e.ZodTuple = "ZodTuple", e.ZodRecord = "ZodRecord", e.ZodMap = "ZodMap", e.ZodSet = "ZodSet", e.ZodFunction = "ZodFunction", e.ZodLazy = "ZodLazy", e.ZodLiteral = "ZodLiteral", e.ZodEnum = "ZodEnum", e.ZodEffects = "ZodEffects", e.ZodNativeEnum = "ZodNativeEnum", e.ZodOptional = "ZodOptional", e.ZodNullable = "ZodNullable", e.ZodDefault = "ZodDefault", e.ZodPromise = "ZodPromise", e.ZodBranded = "ZodBranded";
})(C || (C = {}));
const Y = Rt.create, Dn = fr.create, $n = hr.create;
nt.create;
Be.create;
const R = H.create;
H.strictCreate;
const ae = En.create;
Cn.create;
vt.create;
const I = yr.create;
kn.create;
Ze.create;
jt.create;
const bt = {
  oneTimeAccounts: I("oneTimeAccounts"),
  ongoingAccounts: I("ongoingAccounts"),
  oneTimePersonaData: I("oneTimePersonaData"),
  ongoingPersonaData: I("ongoingPersonaData"),
  auth: I("auth"),
  send: I("send")
}, al = ae([
  I("rejectedByUser"),
  I("wrongNetwork"),
  I("failedToPrepareTransaction"),
  I("failedToCompileTransaction"),
  I("failedToSignTransaction"),
  I("failedToSubmitTransaction"),
  I("failedToPollSubmittedTransaction"),
  I("failedToFindAccountWithEnoughFundsToLockFee"),
  I("submittedTransactionWasDuplicate"),
  I("submittedTransactionHasFailedTransactionStatus"),
  I("submittedTransactionHasRejectedTransactionStatus"),
  I("wrongAccountType"),
  I("unknownWebsite"),
  I("radixJsonNotFound"),
  I("unknownDappDefinitionAddress"),
  I("invalidPersona")
]), yn = {
  givenName: "givenName",
  familyName: "familyName",
  emailAddress: "emailAddress",
  phoneNumber: "phoneNumber"
}, Qo = ae([
  I(yn.emailAddress),
  I(yn.familyName),
  I(yn.givenName),
  I(yn.phoneNumber)
]), Cr = R({
  address: Y(),
  label: Y(),
  appearanceId: Dn()
}), Xo = R({
  account: Cr,
  challenge: Y(),
  signature: Y()
}), kr = R({
  identityAddress: Y(),
  label: Y()
}), es = R({
  field: Qo,
  value: Y()
});
ae([
  I("exactly"),
  I("atLeast")
]);
const ts = R({
  quantifier: ae([I("exactly"), I("atLeast")]),
  quantity: Dn()
}), ul = R({
  networkId: Dn(),
  dAppDefinitionAddress: Y()
}), ns = R({
  requiresProofOfOwnership: $n(),
  numberOfAccounts: ts
}), cl = R({
  accounts: Xo.array()
}), ll = R({
  accounts: Cr.array()
}), rs = ae([
  cl,
  ll
]), fl = R({
  requiresProofOfOwnership: $n(),
  numberOfAccounts: ts
}), dl = R({
  accounts: Xo.array()
}), hl = R({
  accounts: Cr.array()
}), pl = ae([
  dl,
  hl
]), is = R({
  fields: Y().array()
}), os = R({
  fields: es.array()
}), ml = R({
  fields: Qo.array()
}), yl = R({
  fields: es.array()
}), vl = R({
  discriminator: I("usePersona"),
  identityAddress: Y()
}), gl = R({
  discriminator: I("usePersona"),
  persona: kr
}), bl = R({
  discriminator: I("login"),
  challenge: Y().optional()
}), _l = R({
  discriminator: I("loginWithoutChallenge"),
  persona: kr
}), wl = R({
  discriminator: I("loginWithChallenge"),
  persona: kr,
  challenge: Y(),
  publicKey: Y(),
  signature: Y()
}), Sl = ae([
  _l,
  wl
]), xl = ae([
  vl,
  bl
]), Tl = ae([
  gl,
  Sl
]), Ol = R({
  accounts: $n(),
  personaData: $n()
}), Al = R({
  transactionManifest: Y(),
  version: Dn(),
  blobs: Y().array().optional(),
  message: Y().optional()
}), Il = R({
  transactionIntentHash: Y()
}), Pl = R({
  discriminator: I("unauthorizedRequest"),
  oneTimeAccounts: ns.optional(),
  oneTimePersonaData: is.optional()
}), El = R({
  discriminator: I("authorizedRequest"),
  auth: xl,
  oneTimeAccounts: ns.optional(),
  ongoingAccounts: fl.optional(),
  oneTimePersonaData: is.optional(),
  ongoingPersonaData: ml.optional(),
  reset: Ol.optional()
}), Cl = ae([
  Pl,
  El
]), kl = R({
  discriminator: I("transaction"),
  send: Al
}), $l = ae([
  Cl,
  kl
]), Rl = R({
  interactionId: Y(),
  items: $l,
  metadata: ul
}), Dl = R({
  discriminator: I("unauthorizedRequest"),
  oneTimeAccounts: rs.optional(),
  oneTimePersonaData: os.optional()
}), jl = R({
  discriminator: I("authorizedRequest"),
  auth: Tl,
  oneTimeAccounts: rs.optional(),
  ongoingAccounts: pl.optional(),
  oneTimePersonaData: os.optional(),
  ongoingPersonaData: yl.optional()
}), Nl = ae([
  Dl,
  jl
]), ql = R({
  discriminator: I("transaction"),
  send: Il
}), Ll = ae([
  Nl,
  ql
]), Ul = R({
  discriminator: I("success"),
  interactionId: Y(),
  items: Ll
}), Ml = R({
  discriminator: I("failure"),
  interactionId: Y(),
  error: al,
  message: Y().optional()
}), Fl = ae([
  Ul,
  Ml
]), qi = (e) => Ke.fromPromise(
  Rl.parseAsync(e),
  (t) => t.issues
).map(() => e).mapErr((t) => (Se.error("🔵💥 invalid wallet request"), Se.debug(JSON.stringify(e, null, 2)), Se.debug(JSON.stringify(t, null, 2)), $t(
  yt.walletRequestValidation,
  e.interactionId
))), Li = (e) => Ke.fromPromise(
  Fl.parseAsync(e),
  (t) => t.issues
).map(() => e).mapErr(() => (Se.error("🔵💥 invalid wallet response"), $t(
  yt.walletRequestValidation,
  e.interactionId
))), Ui = (e) => {
  const { discriminator: t, ...n } = e;
  return Object.entries(n).reduce((r, [i, o]) => {
    switch (i) {
      case bt.auth.value: {
        const { discriminator: s, ...a } = o;
        if (s === "usePersona")
          return { ...r, persona: a.persona };
        if (s === "loginWithChallenge") {
          const { persona: l, ...u } = a;
          return { ...r, persona: l, signedChallenge: u };
        } else
          return { ...r, persona: a.persona };
      }
      case bt.oneTimeAccounts.value:
        return { ...r, oneTimeAccounts: o.accounts };
      case bt.ongoingAccounts.value:
        return { ...r, ongoingAccounts: o.accounts };
      case bt.oneTimePersonaData.value:
        return { ...r, oneTimePersonaData: o.fields };
      case bt.ongoingPersonaData.value:
        return { ...r, ongoingPersonaData: o.fields };
      case bt.send.value:
        return { ...r, transactionIntentHash: o.transactionIntentHash };
      default:
        return r;
    }
  }, {});
}, we = {
  oneTimeAccountsWithoutProofOfOwnership: "oneTimeAccountsWithoutProofOfOwnership",
  oneTimeAccountsWithProofOfOwnership: "oneTimeAccountsWithProofOfOwnership",
  ongoingAccountsWithoutProofOfOwnership: "ongoingAccountsWithoutProofOfOwnership",
  ongoingAccountsWithProofOfOwnership: "ongoingAccountsWithProofOfOwnership",
  usePersona: "usePersona",
  loginWithoutChallenge: "loginWithoutChallenge",
  loginWithChallenge: "loginWithChallenge",
  oneTimePersonaData: "oneTimePersonaData",
  ongoingPersonaData: "ongoingPersonaData",
  reset: "reset"
}, vn = (e) => ({
  quantity: (e == null ? void 0 : e.quantity) || 1,
  quantifier: (e == null ? void 0 : e.quantifier) || "atLeast"
}), Zl = (e) => {
  if (e.discriminator === "transaction" || e.discriminator === "authorizedRequest")
    return e;
  const { reset: t, ...n } = e;
  return n;
}, Mi = (e) => Pe(
  Object.entries(e).reduce(
    (t, [n, r]) => {
      switch (n) {
        case we.oneTimeAccountsWithoutProofOfOwnership:
          return {
            ...t,
            oneTimeAccounts: {
              requiresProofOfOwnership: !1,
              numberOfAccounts: vn(r)
            }
          };
        case we.oneTimeAccountsWithProofOfOwnership:
          return {
            ...t,
            oneTimeAccounts: {
              requiresProofOfOwnership: !0,
              numberOfAccounts: vn(r)
            }
          };
        case we.ongoingAccountsWithProofOfOwnership:
          return {
            ...t,
            ongoingAccounts: {
              requiresProofOfOwnership: !0,
              numberOfAccounts: vn(r)
            }
          };
        case we.ongoingAccountsWithoutProofOfOwnership:
          return {
            ...t,
            ongoingAccounts: {
              requiresProofOfOwnership: !1,
              numberOfAccounts: vn(r)
            }
          };
        case we.oneTimePersonaData:
          return {
            ...t,
            oneTimePersonaData: {
              fields: r.fields
            }
          };
        case we.ongoingPersonaData:
          return {
            ...t,
            ongoingPersonaData: {
              fields: r.fields
            }
          };
        case we.loginWithoutChallenge:
          return {
            ...t,
            auth: { ...r, discriminator: "login" },
            discriminator: "authorizedRequest"
          };
        case we.usePersona:
          return {
            ...t,
            auth: { ...r, discriminator: "usePersona" },
            discriminator: "authorizedRequest"
          };
        case we.loginWithChallenge:
          return {
            ...t,
            auth: r,
            discriminator: "authorizedRequest"
          };
        case we.reset: {
          const { accounts: i = !1, personaData: o = !1 } = r;
          return !i && !o ? t : {
            ...t,
            reset: { accounts: i, personaData: o }
          };
        }
        case "send":
          return {
            discriminator: "transaction",
            send: r
          };
        default:
          return {
            ...t,
            [n]: r
          };
      }
    },
    {
      discriminator: "unauthorizedRequest"
    }
  )
).map(Zl), Fi = (e) => (t, n = crypto.randomUUID()) => Pe({
  items: t,
  interactionId: n,
  metadata: e
}), Wl = {
  send: "send"
}, Bl = {
  ...we,
  ...Wl
}, zl = (e, t) => ({
  request: (n, r = {}) => Mi(n).andThen(Fi(e)).asyncAndThen(qi).andThen(t(r)).andThen(Li).map((i) => i.items).map(Ui),
  sendTransaction: (n, r = {}) => Mi({ [Bl.send]: n }).andThen(Fi(e)).asyncAndThen(qi).andThen(t(r)).andThen(Li).map((i) => i.items).map(Ui)
});
var Kl = /* @__PURE__ */ ((e) => (e.Bool = "Bool", e.I8 = "i8", e.I16 = "i16", e.I32 = "i32", e.I64 = "i64", e.I128 = "i128", e.U8 = "u8", e.U16 = "u16", e.U32 = "u32", e.U64 = "u64", e.U128 = "u128", e.Unit = "Unit", e.String = "String", e.Enum = "Enum", e.Array = "Array", e.Tuple = "Tuple", e.Map = "Map", e.Address = "Address", e.Bucket = "Bucket", e.Proof = "Proof", e.Expression = "Expression", e.Blob = "Blob", e.Decimal = "Decimal", e.PreciseDecimal = "PreciseDecimal", e.NonFungibleLocalId = "NonFungibleLocalId", e.NonFungibleGlobalId = "NonFungibleGlobalId", e.Bytes = "Bytes", e))(Kl || {});
class de extends Error {
  constructor(t) {
    super(t);
  }
}
const xd = () => "()", Td = (e) => `${e}`, Od = (e) => {
  if (e < -128 || e > 127)
    throw new de("Number range exceeded i8");
  return `${e}i8`;
}, Ad = (e) => {
  if (e < -32768 || e > 32767)
    throw new de("Number range exceeded i16");
  return `${e}i16`;
}, Id = (e) => {
  if (e < -2147483648 || e > 2147483647)
    throw new de("Number range exceeded i32");
  return `${e}i32`;
}, Pd = (e) => {
  const t = BigInt(e);
  if (t < BigInt("-9223372036854775808") || t > BigInt("9223372036854775807"))
    throw new de("Number range exceeded i64");
  return `${e}i64`;
}, Ed = (e) => {
  const t = BigInt(e);
  if (t < BigInt("-170141183460469231731687303715884105728") || t > BigInt("170141183460469231731687303715884105727"))
    throw new de("Number range exceeded i128");
  return `${e}i128`;
}, Cd = (e) => {
  if (e < 0 || e > 255)
    throw new de("Number range exceeded u8");
  return `${e}u8`;
}, kd = (e) => {
  if (e < 0 || e > 65535)
    throw new de("Number range exceeded u16");
  return `${e}u16`;
}, $d = (e) => {
  if (e < 0 || e > 4294967295)
    throw new de("Number range exceeded u32");
  return `${e}u32`;
}, Rd = (e) => {
  const t = BigInt(e);
  if (t < 0 || t > BigInt("18446744073709551615"))
    throw new de("Number range exceeded u64");
  return `${e}u64`;
}, Dd = (e) => {
  const t = BigInt(e);
  if (t < 0 || t > BigInt("340282366920938463463374607431768211455"))
    throw new de("Number range exceeded u128");
  return `${e}u128`;
}, jd = (e) => `"${e}"`, Nd = (e, ...t) => typeof e == "number" ? t.length > 0 ? `Enum(${e}u8, ${t.join(", ")})` : `Enum(${e}u8)` : t.length > 0 ? `Enum("${e}", ${t.join(", ")})` : `Enum("${e}")`, qd = (...e) => `Tuple(${e.join(",")})`, Ld = (e, ...t) => (Hl(e, t), `Array<${e}>(${t.join(",")})`), Ud = (e, t, ...n) => `Map<${e},${t}>(${n.join(",")})`, G = (e) => `Address("${e}")`, Bt = (e) => typeof e == "string" ? `Bucket("${e}")` : `Bucket(${e}u32)`, Le = (e) => typeof e == "string" ? `Proof("${e}")` : `Proof(${e}u32)`, Md = (e) => `Expression("${e}")`, Fd = (e) => `Blob("${e}")`, _t = (e) => `Decimal("${e}")`, Zd = (e) => `PreciseDecimal("${e}")`, Wd = {
  String: (e) => `NonFungibleLocalId("<${e}>")`,
  Integer: (e) => `NonFungibleLocalId("#${e}#")`,
  Byte: (e) => `NonFungibleLocalId("[${e}]")`,
  Uuid: (e) => `NonFungibleLocalId("{${e}}")`
}, Bd = (e) => `NonFungibleGlobalId("${e}")`, zd = (e) => `Bytes("${e}")`, Hl = (e, t) => {
  if (e === "String") {
    if (t.some((n) => !n.startsWith('"') && !n.endsWith('"')))
      throw new de(`Array<${e}> expects the same type`);
  } else if (e === "Unit") {
    if (t.some((n) => n !== "()"))
      throw new de(`Array<${e}> expects the same type`);
  } else if (t.some((n) => !n.includes(e)))
    throw new de(`Array<${e}> expects the same type`);
};
class Vl {
  constructor(t) {
    Kt(this, "instructions"), this.instructions = t;
  }
  toString() {
    return this.instructions.join(`
`);
  }
}
class Kd {
  constructor() {
    Kt(this, "instructions"), Kt(this, "buckets"), Kt(this, "proofs"), Kt(this, "id_allocator"), this.instructions = [], this.buckets = /* @__PURE__ */ new Map(), this.proofs = /* @__PURE__ */ new Map(), this.id_allocator = 512;
  }
  takeFromWorktop(t, n) {
    return this.instructions.push(
      `TAKE_FROM_WORKTOP ${G(t)} ${Bt(n)};`
    ), this.buckets.set(n, this.id_allocator++), this;
  }
  takeFromWorktopByAmount(t, n, r) {
    return this.instructions.push(
      `TAKE_FROM_WORKTOP_BY_AMOUNT ${_t(t)} ${G(
        n
      )} ${Bt(r)};`
    ), this.buckets.set(r, this.id_allocator++), this;
  }
  takeFromWorktopByIds(t, n, r) {
    let i = t.map(function(o) {
      return 'NonFungibleLocalId("' + o + '")';
    }).join(", ");
    return this.instructions.push(
      `TAKE_FROM_WORKTOP_BY_IDS Array<NonFungibleLocalId>(${i}) ${G(
        n
      )} ${Bt(r)};`
    ), this.buckets.set(r, this.id_allocator++), this;
  }
  returnToWorktop(t) {
    return this.instructions.push(`RETURN_TO_WORKTOP ${Bt(t)};`), this;
  }
  assertWorktopContains(t) {
    return this.instructions.push(
      `ASSERT_WORKTOP_CONTAINS ${G(t)};`
    ), this;
  }
  assertWorktopContainsByAmount(t, n) {
    return this.instructions.push(
      `ASSERT_WORKTOP_CONTAINS_BY_AMOUNT ${_t(t)} ${G(
        n
      )};`
    ), this;
  }
  assertWorktopContainsByIds(t, n) {
    let r = t.map(function(i) {
      return 'NonFungibleLocalId("' + i + '")';
    }).join(", ");
    return this.instructions.push(
      `ASSERT_WORKTOP_CONTAINS_BY_IDS Array<NonFungibleLocalId>(${r}) ${G(
        n
      )};`
    ), this;
  }
  popFromAuthZone(t) {
    return this.instructions.push(`POP_FROM_AUTH_ZONE ${Le(t)};`), this.proofs.set(t, this.id_allocator++), this;
  }
  pushToAuthZone(t) {
    return this.instructions.push(`PUSH_TO_AUTH_ZONE ${Le(t)};`), this;
  }
  clearAuthZone() {
    return this.instructions.push("CLEAR_AUTH_ZONE;"), this;
  }
  createProofFromAuthZone(t, n) {
    return this.instructions.push(
      `CREATE_PROOF_FROM_AUTH_ZONE ${G(t)} ${Le(
        n
      )};`
    ), this.proofs.set(n, this.id_allocator++), this;
  }
  createProofFromAuthZoneByAmount(t, n, r) {
    return this.instructions.push(
      `CREATE_PROOF_FROM_AUTH_ZONE_BY_AMOUNT ${_t(t)} ${G(
        n
      )} ${Le(r)};`
    ), this.proofs.set(r, this.id_allocator++), this;
  }
  createProofFromAuthZoneByIds(t, n, r) {
    let i = t.map(function(o) {
      return 'NonFungibleLocalId("' + o + '")';
    }).join(", ");
    return this.instructions.push(
      `CREATE_PROOF_FROM_AUTH_ZONE_BY_IDS Array<NonFungibleLocalId>(${i}) ${G(
        n
      )} ${Le(r)};`
    ), this.proofs.set(r, this.id_allocator++), this;
  }
  createProofFromBucket(t, n) {
    return this.instructions.push(
      `CREATE_PROOF_FROM_BUCKET ${Bt(t)} ${Le(n)};`
    ), this.proofs.set(n, this.id_allocator++), this;
  }
  cloneProof(t, n) {
    return this.instructions.push(
      `CLONE_PROOF ${Le(t)} ${Le(n)};`
    ), this.proofs.set(n, this.id_allocator++), this;
  }
  dropProof(t) {
    return this.instructions.push(`DROP_PROOF ${Le(t)};`), this;
  }
  callFunction(t, n, r, i) {
    return this.instructions.push(
      `CALL_FUNCTION ${G(
        t
      )} "${n}" "${r}" ${i.join(" ")};`
    ), this;
  }
  callMethod(t, n, r) {
    return this.instructions.push(
      `CALL_METHOD ${G(t)} "${n}" ${r.join(
        " "
      )};`
    ), this;
  }
  mintFungible(t, n) {
    return this.instructions.push(
      `MINT_FUNGIBLE ${G(t)} ${_t(n)};`
    ), this;
  }
  withdrawFromAccount(t, n, r) {
    return this.instructions.push(
      `CALL_METHOD ${G(t)} "withdraw" ${G(
        n
      )} ${_t(r)};`
    ), this;
  }
  withdrawNonFungiblesFromAccount(t, n, r) {
    let i = r.map(function(o) {
      return 'NonFungibleLocalId("' + o + '")';
    }).join(", ");
    return this.instructions.push(
      `CALL_METHOD ${G(
        t
      )} "withdraw_non_fungibles" ${G(
        n
      )} Array<NonFungibleLocalId>(${i});`
    ), this;
  }
  createProofFromAccount(t, n) {
    return this.instructions.push(
      `CALL_METHOD ${G(t)} "create_proof" ${G(
        n
      )};`
    ), this;
  }
  createProofFromAccountByAmount(t, n, r) {
    return this.instructions.push(
      `CALL_METHOD ${G(
        t
      )} "create_proof_by_amount" ${G(n)} ${_t(
        r
      )};`
    ), this;
  }
  createProofFromAccountByIds(t, n, r) {
    let i = r.map(function(o) {
      return 'NonFungibleLocalId("' + o + '")';
    }).join(", ");
    return this.instructions.push(
      `CALL_METHOD ${G(t)} "create_proof_by_ids" ${G(
        n
      )} Array<NonFungibleLocalId>(${i});`
    ), this;
  }
  instruction(t, n) {
    return this.instructions.push(`${t} ${n.join(" ")};`), this;
  }
  build() {
    return new Vl(this.instructions);
  }
}
var Gl = "Expected a function", Yl = 9007199254740991, Jl = "[object Arguments]", Ql = "[object Function]", Xl = "[object GeneratorFunction]", ef = typeof Ht == "object" && Ht && Ht.Object === Object && Ht, tf = typeof self == "object" && self && self.Object === Object && self, nf = ef || tf || Function("return this")();
function rf(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function of(e, t) {
  for (var n = -1, r = t.length, i = e.length; ++n < r; )
    e[i + n] = t[n];
  return e;
}
var $r = Object.prototype, sf = $r.hasOwnProperty, ss = $r.toString, Zi = nf.Symbol, af = $r.propertyIsEnumerable, Wi = Zi ? Zi.isConcatSpreadable : void 0, Bi = Math.max;
function as(e, t, n, r, i) {
  var o = -1, s = e.length;
  for (n || (n = lf), i || (i = []); ++o < s; ) {
    var a = e[o];
    t > 0 && n(a) ? t > 1 ? as(a, t - 1, n, r, i) : of(i, a) : r || (i[i.length] = a);
  }
  return i;
}
function uf(e, t) {
  return t = Bi(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var n = arguments, r = -1, i = Bi(n.length - t, 0), o = Array(i); ++r < i; )
      o[r] = n[t + r];
    r = -1;
    for (var s = Array(t + 1); ++r < t; )
      s[r] = n[r];
    return s[t] = o, rf(e, this, s);
  };
}
function cf(e) {
  return uf(function(t) {
    t = as(t, 1);
    var n = t.length, r = n;
    for (e && t.reverse(); r--; )
      if (typeof t[r] != "function")
        throw new TypeError(Gl);
    return function() {
      for (var i = 0, o = n ? t[i].apply(this, arguments) : arguments[0]; ++i < n; )
        o = t[i].call(this, o);
      return o;
    };
  });
}
function lf(e) {
  return df(e) || ff(e) || !!(Wi && e && e[Wi]);
}
function ff(e) {
  return pf(e) && sf.call(e, "callee") && (!af.call(e, "callee") || ss.call(e) == Jl);
}
var df = Array.isArray;
function hf(e) {
  return e != null && yf(e.length) && !mf(e);
}
function pf(e) {
  return gf(e) && hf(e);
}
function mf(e) {
  var t = vf(e) ? ss.call(e) : "";
  return t == Ql || t == Xl;
}
function yf(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= Yl;
}
function vf(e) {
  var t = typeof e;
  return !!e && (t == "object" || t == "function");
}
function gf(e) {
  return !!e && typeof e == "object";
}
var bf = cf(), _f = bf;
function Hd(...e) {
  return _f(e)({});
}
const wf = {
  withoutChallenge: () => (e) => ({
    ...e,
    loginWithoutChallenge: {
      discriminator: "login"
    }
  }),
  withChallenge: (e) => (t) => ({
    ...t,
    loginWithChallenge: { discriminator: "login", challenge: e }
  })
}, Sf = {
  withoutProofOfOwnership: (e = Ae.defaultNumberOfAccountsQuantity, t = Ae.defaultNumberOfAccountsQuantifier) => (n) => ({
    ...n,
    oneTimeAccountsWithoutProofOfOwnership: {
      quantity: e,
      quantifier: t
    }
  }),
  withProofOfOwnership: (e = Ae.defaultNumberOfAccountsQuantity, t = Ae.defaultNumberOfAccountsQuantifier) => (n) => ({
    ...n,
    oneTimeAccountsWithProofOfOwnership: {
      quantity: e,
      quantifier: t
    }
  })
}, xf = (...e) => (t) => ({
  ...t,
  oneTimePersonaData: { fields: e }
}), Tf = {
  withoutProofOfOwnership: (e = Ae.defaultNumberOfAccountsQuantity, t = Ae.defaultNumberOfAccountsQuantifier) => (n) => ({
    ...n,
    ongoingAccountsWithoutProofOfOwnership: {
      quantity: e,
      quantifier: t
    }
  }),
  withProofOfOwnership: (e = Ae.defaultNumberOfAccountsQuantity, t = Ae.defaultNumberOfAccountsQuantifier) => (n) => ({
    ...n,
    ongoingAccountsWithProofOfOwnership: {
      quantity: e,
      quantifier: t
    }
  })
}, Of = (...e) => (t) => ({
  ...t,
  ongoingPersonaData: { fields: e }
}), Af = (e) => (t) => ({
  ...t,
  usePersona: { discriminator: "usePersona", identityAddress: e }
}), If = ({ accounts: e = !1, personaData: t = !1 }) => (n) => ({
  ...n,
  reset: { accounts: e, personaData: t }
}), Vd = {
  oneTimeAccounts: Sf,
  ongoingAccounts: Tf,
  oneTimePersonaData: xf,
  ongoingPersonaData: Of,
  login: wf,
  usePersona: Af,
  reset: If
}, Pf = {
  Mainnet: 1,
  Stokenet: 2,
  Adapanet: 10,
  Nebunet: 11,
  Gilganet: 32,
  Enkinet: 33,
  Hammunet: 34
}, Ef = ({
  networkId: e = Pf.Mainnet,
  dAppDefinitionAddress: t,
  logLevel: n = Ae.logLevel
}) => {
  Se.setLevel(n), Se.debug("🔵 wallet sdk instantiated");
  const r = Wc(), i = () => {
    Se.debug("🔵🧹 destroying wallet sdk instance"), r.destroy();
  };
  return {
    ...zl(
      { networkId: e, dAppDefinitionAddress: t },
      Qc(r.subjects)
    ),
    destroy: i,
    __subjects: r.subjects
  };
};
var Cf = Object.defineProperty, kf = (e, t, n) => t in e ? Cf(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, tn = (e, t, n) => (kf(e, typeof t != "symbol" ? t + "" : t, n), n);
const $f = "https://rcnet.radixdlt.com".replace(/\/+$/, "");
class us {
  constructor(t = {}) {
    this.configuration = t;
  }
  set config(t) {
    this.configuration = t;
  }
  get basePath() {
    return this.configuration.basePath != null ? this.configuration.basePath : $f;
  }
  get fetchApi() {
    return this.configuration.fetchApi;
  }
  get middleware() {
    return this.configuration.middleware || [];
  }
  get queryParamsStringify() {
    return this.configuration.queryParamsStringify || cs;
  }
  get username() {
    return this.configuration.username;
  }
  get password() {
    return this.configuration.password;
  }
  get apiKey() {
    const t = this.configuration.apiKey;
    if (t)
      return typeof t == "function" ? t : () => t;
  }
  get accessToken() {
    const t = this.configuration.accessToken;
    if (t)
      return typeof t == "function" ? t : async () => t;
  }
  get headers() {
    return this.configuration.headers;
  }
  get credentials() {
    return this.configuration.credentials;
  }
}
const Rf = new us();
class Df {
  constructor(t = Rf) {
    tn(this, "middleware"), tn(this, "fetchApi", async (n, r) => {
      let i = { url: n, init: r };
      for (const s of this.middleware)
        s.pre && (i = await s.pre({
          fetch: this.fetchApi,
          ...i
        }) || i);
      let o;
      try {
        o = await (this.configuration.fetchApi || fetch)(i.url, i.init);
      } catch (s) {
        for (const a of this.middleware)
          a.onError && (o = await a.onError({
            fetch: this.fetchApi,
            url: i.url,
            init: i.init,
            error: s,
            response: o ? o.clone() : void 0
          }) || o);
        if (o === void 0)
          throw s instanceof Error ? new Lf(s, "The request failed and the interceptors did not return an alternative response") : s;
      }
      for (const s of this.middleware)
        s.post && (o = await s.post({
          fetch: this.fetchApi,
          url: i.url,
          init: i.init,
          response: o.clone()
        }) || o);
      return o;
    }), this.configuration = t, this.middleware = t.middleware;
  }
  withMiddleware(...t) {
    const n = this.clone();
    return n.middleware = n.middleware.concat(...t), n;
  }
  withPreMiddleware(...t) {
    const n = t.map((r) => ({ pre: r }));
    return this.withMiddleware(...n);
  }
  withPostMiddleware(...t) {
    const n = t.map((r) => ({ post: r }));
    return this.withMiddleware(...n);
  }
  async request(t, n) {
    const { url: r, init: i } = await this.createFetchParams(t, n), o = await this.fetchApi(r, i);
    if (o.status >= 200 && o.status < 300)
      return o;
    throw new qf(o, "Response returned an error code");
  }
  async createFetchParams(t, n) {
    let r = this.configuration.basePath + t.path;
    t.query !== void 0 && Object.keys(t.query).length !== 0 && (r += "?" + this.configuration.queryParamsStringify(t.query));
    const i = Object.assign({}, this.configuration.headers, t.headers);
    Object.keys(i).forEach((u) => i[u] === void 0 ? delete i[u] : {});
    const o = typeof n == "function" ? n : async () => n, s = {
      method: t.method,
      headers: i,
      body: t.body,
      credentials: this.configuration.credentials
    }, a = {
      ...s,
      ...await o({
        init: s,
        context: t
      })
    }, l = {
      ...a,
      body: Nf(a.body) || a.body instanceof URLSearchParams || jf(a.body) ? a.body : JSON.stringify(a.body)
    };
    return { url: r, init: l };
  }
  clone() {
    const t = this.constructor, n = new t(this.configuration);
    return n.middleware = this.middleware.slice(), n;
  }
}
function jf(e) {
  return typeof Blob < "u" && e instanceof Blob;
}
function Nf(e) {
  return typeof FormData < "u" && e instanceof FormData;
}
class qf extends Error {
  constructor(t, n) {
    super(n), tn(this, "name", "ResponseError"), this.response = t;
  }
}
class Lf extends Error {
  constructor(t, n) {
    super(n), tn(this, "name", "FetchError"), this.cause = t;
  }
}
class gn extends Error {
  constructor(t, n) {
    super(n), tn(this, "name", "RequiredError"), this.field = t;
  }
}
function Fe(e, t) {
  return e[t] != null;
}
function cs(e, t = "") {
  return Object.keys(e).map((n) => ls(n, e[n], t)).filter((n) => n.length > 0).join("&");
}
function ls(e, t, n = "") {
  const r = n + (n.length ? `[${e}]` : e);
  if (t instanceof Array) {
    const i = t.map((o) => encodeURIComponent(String(o))).join(`&${encodeURIComponent(r)}=`);
    return `${encodeURIComponent(r)}=${i}`;
  }
  if (t instanceof Set) {
    const i = Array.from(t);
    return ls(e, i, n);
  }
  return t instanceof Date ? `${encodeURIComponent(r)}=${encodeURIComponent(t.toISOString())}` : t instanceof Object ? cs(t, r) : `${encodeURIComponent(r)}=${encodeURIComponent(String(t))}`;
}
class zt {
  constructor(t, n = (r) => r) {
    this.raw = t, this.transformer = n;
  }
  async value() {
    return this.transformer(await this.raw.json());
  }
}
function Uf(e) {
  if (e !== void 0)
    return e === null ? null : {
      state_version: e.state_version,
      timestamp: e.timestamp === void 0 ? void 0 : e.timestamp === null ? null : e.timestamp.toISOString(),
      epoch: e.epoch,
      round: e.round
    };
}
function Mf(e) {
  return Ff(e);
}
function Ff(e, t) {
  return e == null ? e : {
    value: e.value,
    address: Fe(e, "address") ? e.address : void 0
  };
}
function Rr(e) {
  return Zf(e);
}
function Zf(e, t) {
  return e;
}
function Wf(e) {
  return Bf(e);
}
function Bf(e, t) {
  return e == null ? e : {
    state_version: e.state_version,
    transaction_status: Rr(e.transaction_status),
    payload_hash_hex: Fe(e, "payload_hash_hex") ? e.payload_hash_hex : void 0,
    intent_hash_hex: Fe(e, "intent_hash_hex") ? e.intent_hash_hex : void 0,
    fee_paid: Fe(e, "fee_paid") ? Mf(e.fee_paid) : void 0,
    confirmed_at: Fe(e, "confirmed_at") ? e.confirmed_at === null ? null : new Date(e.confirmed_at) : void 0,
    error_message: Fe(e, "error_message") ? e.error_message : void 0
  };
}
function Dr(e) {
  return zf(e);
}
function zf(e, t) {
  return e == null ? e : {
    network: e.network,
    state_version: e.state_version,
    proposer_round_timestamp: e.proposer_round_timestamp,
    epoch: e.epoch,
    round: e.round
  };
}
function zi(e) {
  if (e !== void 0)
    return e === null ? null : {
      key_type: e.key_type
    };
}
function Kf(e) {
  if (e !== void 0)
    return e === null ? null : {
      at_ledger_state: Uf(e.at_ledger_state),
      intent_hash_hex: e.intent_hash_hex
    };
}
function Hf(e) {
  return Vf(e);
}
function Vf(e, t) {
  return e == null ? e : {
    raw_hex: e.raw_hex,
    receipt: e.receipt,
    referenced_global_entities: e.referenced_global_entities,
    message_hex: Fe(e, "message_hex") ? e.message_hex : void 0
  };
}
function Gf(e) {
  return Yf(e);
}
function Yf(e, t) {
  return e == null ? e : {
    ledger_state: Dr(e.ledger_state),
    transaction: Wf(e.transaction),
    details: Hf(e.details)
  };
}
function Jf(e) {
  return Qf(e);
}
function Qf(e, t) {
  return e == null ? e : {
    ledger_state: Dr(e.ledger_state)
  };
}
function Xf(e) {
  if (e !== void 0)
    return e === null ? null : {
      unlimited_loan: e.unlimited_loan,
      assume_all_signature_proofs: e.assume_all_signature_proofs,
      permit_duplicate_intent_hash: e.permit_duplicate_intent_hash,
      permit_invalid_header_epoch: e.permit_invalid_header_epoch
    };
}
function ed(e) {
  if (e !== void 0)
    return e === null ? null : {
      manifest: e.manifest,
      blobs_hex: e.blobs_hex,
      start_epoch_inclusive: e.start_epoch_inclusive,
      end_epoch_exclusive: e.end_epoch_exclusive,
      notary_public_key: zi(e.notary_public_key),
      notary_as_signatory: e.notary_as_signatory,
      cost_unit_limit: e.cost_unit_limit,
      tip_percentage: e.tip_percentage,
      nonce: e.nonce,
      signer_public_keys: e.signer_public_keys.map(zi),
      flags: Xf(e.flags)
    };
}
function td(e) {
  return nd(e);
}
function nd(e, t) {
  return e == null ? e : {
    level: e.level,
    message: e.message
  };
}
function rd(e) {
  return id(e);
}
function id(e, t) {
  return e == null ? e : {
    encoded_receipt: e.encoded_receipt,
    receipt: e.receipt,
    resource_changes: e.resource_changes,
    logs: e.logs.map(td)
  };
}
function od(e) {
  if (e !== void 0)
    return e === null ? null : {
      intent_hash_hex: e.intent_hash_hex
    };
}
function sd(e) {
  return ad(e);
}
function ad(e, t) {
  return e == null ? e : {
    payload_hash_hex: e.payload_hash_hex,
    status: Rr(e.status),
    error_message: Fe(e, "error_message") ? e.error_message : void 0
  };
}
function ud(e) {
  return cd(e);
}
function cd(e, t) {
  return e == null ? e : {
    ledger_state: Dr(e.ledger_state),
    status: Rr(e.status),
    known_payloads: e.known_payloads.map(sd),
    error_message: Fe(e, "error_message") ? e.error_message : void 0
  };
}
function ld(e) {
  if (e !== void 0)
    return e === null ? null : {
      notarized_transaction_hex: e.notarized_transaction_hex
    };
}
function fd(e) {
  return dd(e);
}
function dd(e, t) {
  return e == null ? e : {
    duplicate: e.duplicate
  };
}
class hd extends Df {
  async transactionCommittedDetailsRaw(t, n) {
    if (t.transactionCommittedDetailsRequest === null || t.transactionCommittedDetailsRequest === void 0)
      throw new gn("transactionCommittedDetailsRequest", "Required parameter requestParameters.transactionCommittedDetailsRequest was null or undefined when calling transactionCommittedDetails.");
    const r = {}, i = {};
    i["Content-Type"] = "application/json";
    const o = await this.request({
      path: "/transaction/committed-details",
      method: "POST",
      headers: i,
      query: r,
      body: Kf(t.transactionCommittedDetailsRequest)
    }, n);
    return new zt(o, (s) => Gf(s));
  }
  async transactionCommittedDetails(t, n) {
    return await (await this.transactionCommittedDetailsRaw(t, n)).value();
  }
  async transactionConstructionRaw(t) {
    const n = {}, r = {}, i = await this.request({
      path: "/transaction/construction",
      method: "POST",
      headers: r,
      query: n
    }, t);
    return new zt(i, (o) => Jf(o));
  }
  async transactionConstruction(t) {
    return await (await this.transactionConstructionRaw(t)).value();
  }
  async transactionPreviewRaw(t, n) {
    if (t.transactionPreviewRequest === null || t.transactionPreviewRequest === void 0)
      throw new gn("transactionPreviewRequest", "Required parameter requestParameters.transactionPreviewRequest was null or undefined when calling transactionPreview.");
    const r = {}, i = {};
    i["Content-Type"] = "application/json";
    const o = await this.request({
      path: "/transaction/preview",
      method: "POST",
      headers: i,
      query: r,
      body: ed(t.transactionPreviewRequest)
    }, n);
    return new zt(o, (s) => rd(s));
  }
  async transactionPreview(t, n) {
    return await (await this.transactionPreviewRaw(t, n)).value();
  }
  async transactionStatusRaw(t, n) {
    if (t.transactionStatusRequest === null || t.transactionStatusRequest === void 0)
      throw new gn("transactionStatusRequest", "Required parameter requestParameters.transactionStatusRequest was null or undefined when calling transactionStatus.");
    const r = {}, i = {};
    i["Content-Type"] = "application/json";
    const o = await this.request({
      path: "/transaction/status",
      method: "POST",
      headers: i,
      query: r,
      body: od(t.transactionStatusRequest)
    }, n);
    return new zt(o, (s) => ud(s));
  }
  async transactionStatus(t, n) {
    return await (await this.transactionStatusRaw(t, n)).value();
  }
  async transactionSubmitRaw(t, n) {
    if (t.transactionSubmitRequest === null || t.transactionSubmitRequest === void 0)
      throw new gn("transactionSubmitRequest", "Required parameter requestParameters.transactionSubmitRequest was null or undefined when calling transactionSubmit.");
    const r = {}, i = {};
    i["Content-Type"] = "application/json";
    const o = await this.request({
      path: "/transaction/submit",
      method: "POST",
      headers: i,
      query: r,
      body: ld(t.transactionSubmitRequest)
    }, n);
    return new zt(o, (s) => fd(s));
  }
  async transactionSubmit(t, n) {
    return await (await this.transactionSubmitRaw(t, n)).value();
  }
}
const pd = (e) => {
  const t = new us({ basePath: e }), n = new hd(t);
  return { getTransactionStatus: (o) => n.transactionStatus({
    transactionStatusRequest: {
      intent_hash_hex: o
    }
  }), getTransactionDetails: (o, s) => n.transactionCommittedDetails({
    transactionCommittedDetailsRequest: {
      intent_hash_hex: o,
      ...s ? {
        at_ledger_state: {
          state_version: s
        }
      } : {}
    }
  }) };
}, md = (/* @__PURE__ */ new Map()).set(11, "https://nebunet-gateway.radixdlt.com").set(12, "https://rcnet.radixdlt.com").set(32, "https://gilganet-gateway.radixdlt.com").set(33, "https://enkinet-gateway.radixdlt.com").set(34, "https://hammunet-gateway.radixdlt.com"), yd = (e) => {
  const t = md.get(e);
  if (!t)
    throw new Error(`network id: ${e} not supported`);
  return t;
}, vd = ({
  maxDelayTime: e = 1e4,
  multiplier: t = 3,
  timeout: n,
  interval: r = 1e3
} = {}) => {
  const i = new ve();
  let o = 0;
  const s = Yt(
    fo(0),
    i.pipe(
      oe(() => (o = o + 1, o))
    )
  ).pipe(
    Jt((l) => {
      const u = l * r * t, d = u > e ? e : u;
      return li(d).pipe(oe(() => re(l)));
    })
  ), a = n ? Yt(
    s,
    li(n).pipe(
      oe(() => Ie($t("failedToPollSubmittedTransaction", "")))
    )
  ) : s;
  return { trigger: i, withBackoff$: a };
}, gd = ({
  gatewayApi: e,
  logger: t,
  retryConfig: n
}) => {
  const r = (s) => fe.fromPromise(
    e.getTransactionStatus(s),
    Qt
  );
  return { pollTransactionStatus: (s) => {
    const a = vd(n), l = /* @__PURE__ */ new Set([
      "CommittedSuccess",
      "CommittedFailure",
      "Rejected"
    ]);
    return fe.fromPromise(
      ho(
        a.withBackoff$.pipe(
          Jt((u) => u.isErr() ? [u] : (t == null || t.debug(`pollingTxStatus retry #${u.value + 1}`), r(s).map((d) => {
            if (l.has(d.status))
              return d;
            a.trigger.next();
          }).mapErr((d) => (t == null || t.debug(d), $t("failedToPollSubmittedTransaction", ""))))),
          Or(
            (u) => u.isOk() && !!u.value || u.isErr()
          ),
          Ou()
        )
      ),
      (u) => u
    ).andThen((u) => u);
  }, getTransactionDetailsRequest: (s, a) => fe.fromPromise(
    e.getTransactionDetails(s, a),
    Qt
  ), gatewayApi: e };
}, bd = (e, t) => () => fe.fromPromise(
  ho(e),
  (n) => n
).map((n) => (t == null || t.debug("getState", n), n)), _d = () => ({
  connected: new wt(1),
  accounts: new wt(1),
  persona: new wt(),
  onInit: new wt(1),
  state$: new wt(1),
  setState: new ve(),
  updateSharedData: new ve()
}), Gd = ({ dAppDefinitionAddress: e, dAppName: t }, n, r) => {
  const {
    networkId: i = 1,
    providers: o,
    logger: s,
    initialState: a,
    onInit: l = () => {
    },
    onDisconnect: u = () => {
    },
    explorer: d,
    gatewayBaseUrl: m,
    useCache: y
  } = r || {}, v = (o == null ? void 0 : o.storage) || Wu(), x = new Re(), p = (o == null ? void 0 : o.connectButton) || Uu({ logger: s, dAppName: t, explorer: d }), A = (o == null ? void 0 : o.gatewayClient) || gd({
    logger: s,
    gatewayApi: pd(
      m ?? yd(i)
    )
  }), O = _d(), g = bd(O.state$), z = (o == null ? void 0 : o.walletClient) || Zu({
    logger: s,
    walletSdk: Ef({
      networkId: i,
      dAppDefinitionAddress: e,
      logLevel: "debug"
    }),
    gatewayClient: A,
    getState: g
  }), U = qu({
    connectButtonClient: p,
    initialState: a,
    key: `rdt:${e}:${i}`,
    logger: s,
    onInitCallback: l,
    onDisconnectCallback: u,
    storageClient: v,
    walletClient: z,
    connectRequest: n,
    useDoneCallback: r == null ? void 0 : r.useDoneCallback,
    subjects: O,
    getState: g,
    useCache: y
  });
  return r != null && r.onStateChange && x.add(
    U.state$.pipe(B(r.onStateChange)).subscribe()
  ), {
    requestData: U.requestData,
    sendTransaction: z.sendTransaction,
    state$: U.state$,
    updateSharedData: () => U.subjects.updateSharedData.next(),
    disconnect: U.reset,
    destroy: () => {
      U.destroy(), x.unsubscribe();
    }
  };
};
export {
  G as Address,
  Ld as Array,
  Sl as AuthLoginRequestResponseItemSchema,
  xl as AuthRequestItemSchema,
  Fd as Blob,
  Td as Bool,
  Bt as Bucket,
  zd as Bytes,
  _t as Decimal,
  Nd as Enum,
  al as ErrorTypeSchema,
  Md as Expression,
  Ed as I128,
  Ad as I16,
  Id as I32,
  Pd as I64,
  Od as I8,
  Kd as ManifestBuilder,
  de as ManifestValueError,
  Ud as Map,
  Pf as Network,
  Bd as NonFungibleGlobalId,
  Wd as NonFungibleLocalId,
  rs as OneTimeAccountsRequestResponseItemSchema,
  Qo as PersonaDataFieldSchema,
  Zd as PreciseDecimal,
  Le as Proof,
  Gd as RadixDappToolkit,
  bt as RequestTypeSchema,
  jd as String,
  qd as Tuple,
  Kl as TypeId,
  Dd as U128,
  kd as U16,
  $d as U32,
  Rd as U64,
  Cd as U8,
  xd as Unit,
  jl as WalletAuthorizedRequestResponseItemsSchema,
  Ml as WalletInteractionFailureResponseSchema,
  Ll as WalletInteractionResponseItemsSchema,
  Fl as WalletInteractionResponseSchema,
  Rl as WalletInteractionSchema,
  Ul as WalletInteractionSuccessResponseSchema,
  Cl as WalletRequestItemsSchema,
  Nl as WalletRequestResponseItemsSchema,
  Ef as WalletSdk,
  ql as WalletTransactionResponseItemsSchema,
  Dl as WalletUnauthorizedRequestResponseItemsSchema,
  $t as createSdkError,
  yt as errorType,
  wf as login,
  Sf as oneTimeAccounts,
  xf as oneTimePersonaData,
  Tf as ongoingAccounts,
  Of as ongoingPersonaData,
  yn as personaDataField,
  Hd as requestBuilder,
  Vd as requestItem,
  Vc as sdkError,
  Af as usePersona
};
