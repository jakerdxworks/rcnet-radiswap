import { Logger } from 'tslog';
import { WalletClient } from '../../wallet/wallet-client';
import { DataRequestValue, State } from '../../_types';
export type HandleRequestOutput = ReturnType<typeof handleRequest>;
export declare const handleRequest: (dataRequest: DataRequestValue, { state, logger, walletClient, useCache, }: {
    state: State;
    logger?: Logger<unknown> | undefined;
    walletClient: WalletClient;
    useCache: boolean;
}) => import("neverthrow").ResultAsync<{
    resolvedBy: string;
    data: {
        accounts: {
            address: string;
            label: string;
            appearanceId: number;
        }[];
        personaData: {
            value: string;
            field: "emailAddress" | "familyName" | "givenName" | "phoneNumber";
        }[];
        persona: {
            label: string;
            identityAddress: string;
        } | undefined;
    };
}, import("@radixdlt/wallet-sdk").SdkError>;
