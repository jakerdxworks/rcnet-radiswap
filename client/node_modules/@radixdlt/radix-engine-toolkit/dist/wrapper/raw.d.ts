import { AnalyzeManifestRequest, AnalyzeManifestResponse, CompileNotarizedTransactionRequest, CompileNotarizedTransactionResponse, CompileSignedTransactionIntentRequest, CompileSignedTransactionIntentResponse, CompileTransactionIntentRequest, CompileTransactionIntentResponse, ConvertManifestRequest, ConvertManifestResponse, DecodeAddressRequest, DecodeAddressResponse, DecompileNotarizedTransactionIntentRequest, DecompileNotarizedTransactionIntentResponse, DecompileSignedTransactionIntentRequest, DecompileSignedTransactionIntentResponse, DecompileTransactionIntentRequest, DecompileTransactionIntentResponse, DecompileUnknownTransactionIntentRequest, DecompileUnknownTransactionIntentResponse, DeriveBabylonAddressFromOlympiaAddressRequest, DeriveBabylonAddressFromOlympiaAddressResponse, DeriveVirtualAccountAddressRequest, DeriveVirtualAccountAddressResponse, DeriveVirtualIdentityAddressRequest, DeriveVirtualIdentityAddressResponse, EncodeAddressRequest, EncodeAddressResponse, InformationRequest, InformationResponse, KnownEntityAddressesRequest, KnownEntityAddressesResponse, SborDecodeRequest, SborDecodeResponse, SborEncodeRequest, SborEncodeResponse, StaticallyValidateTransactionRequest, StaticallyValidateTransactionResponse } from "../models";
import { RadixEngineToolkitWasmWrapper } from "./wasm_wrapper";
/**
 * A global instance of the Radix Engine Toolkit.
 */
export declare const RET: Promise<RadixEngineToolkitWasmWrapper>;
/**
 * A facade for the Radix Engine Toolkit which abstracts some of the async and instance logic away
 * from the developers consuming the class. Additionally, this class abstracts the toolkit's invoke
 * process away from the developer.
 */
export declare class RawRadixEngineToolkit {
    static information(request: InformationRequest): Promise<InformationResponse>;
    static analyzeManifest(request: AnalyzeManifestRequest): Promise<AnalyzeManifestResponse>;
    static convertManifest(request: ConvertManifestRequest): Promise<ConvertManifestResponse>;
    static compileTransactionIntent(request: CompileTransactionIntentRequest): Promise<CompileTransactionIntentResponse>;
    static compileSignedTransactionIntent(request: CompileSignedTransactionIntentRequest): Promise<CompileSignedTransactionIntentResponse>;
    static compileNotarizedTransactionIntent(request: CompileNotarizedTransactionRequest): Promise<CompileNotarizedTransactionResponse>;
    static decompileTransactionIntent(request: DecompileTransactionIntentRequest): Promise<DecompileTransactionIntentResponse>;
    static decompileSignedTransactionIntent(request: DecompileSignedTransactionIntentRequest): Promise<DecompileSignedTransactionIntentResponse>;
    static decompileNotarizedTransactionIntent(request: DecompileNotarizedTransactionIntentRequest): Promise<DecompileNotarizedTransactionIntentResponse>;
    static decompileUnknownTransactionIntent(request: DecompileUnknownTransactionIntentRequest): Promise<DecompileUnknownTransactionIntentResponse>;
    static encodeAddress(request: EncodeAddressRequest): Promise<EncodeAddressResponse>;
    static decodeAddress(request: DecodeAddressRequest): Promise<DecodeAddressResponse>;
    static sborEncode(request: SborEncodeRequest): Promise<SborEncodeResponse>;
    static sborDecode(request: SborDecodeRequest): Promise<SborDecodeResponse>;
    static deriveVirtualAccountAddress(request: DeriveVirtualAccountAddressRequest): Promise<DeriveVirtualAccountAddressResponse>;
    static deriveVirtualIdentityAddress(request: DeriveVirtualIdentityAddressRequest): Promise<DeriveVirtualIdentityAddressResponse>;
    static deriveBabylonAddressFromOlympiaAddress(request: DeriveBabylonAddressFromOlympiaAddressRequest): Promise<DeriveBabylonAddressFromOlympiaAddressResponse>;
    static knownEntityAddresses(request: KnownEntityAddressesRequest): Promise<KnownEntityAddressesResponse>;
    static staticallyValidateTransaction(request: StaticallyValidateTransactionRequest): Promise<StaticallyValidateTransactionResponse>;
}
